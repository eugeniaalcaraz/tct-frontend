{
  "version": 3,
  "sources": ["../../tslib/tslib.js", "../../@aws-crypto/sha256-js/src/constants.ts", "../../@aws-crypto/sha256-js/src/RawSha256.ts", "../../@aws-crypto/sha256-js/node_modules/@aws-sdk/util-utf8-browser/src/pureJs.ts", "../../@aws-crypto/sha256-js/node_modules/@aws-sdk/util-utf8-browser/src/whatwgEncodingApi.ts", "../../@aws-crypto/sha256-js/node_modules/@aws-sdk/util-utf8-browser/src/index.ts", "../../@aws-crypto/sha256-js/src/jsSha256.ts", "../../@aws-crypto/sha256-js/src/index.ts", "../../url/node_modules/punycode/punycode.js", "../../has-symbols/shams.js", "../../has-symbols/index.js", "../../has-proto/index.js", "../../function-bind/implementation.js", "../../function-bind/index.js", "../../has/src/index.js", "../../get-intrinsic/index.js", "../../call-bind/index.js", "../../call-bind/callBound.js", "../../object-inspect/util.inspect", "../../object-inspect/index.js", "../../side-channel/index.js", "../../qs/lib/formats.js", "../../qs/lib/utils.js", "../../qs/lib/stringify.js", "../../qs/lib/parse.js", "../../qs/lib/index.js", "../../url/url.js", "../../zen-observable/lib/Observable.js", "../../zen-observable/index.js", "../../@aws-crypto/sha256-browser/src/isEmptyData.ts", "../../@aws-crypto/sha256-browser/src/constants.ts", "../../@aws-sdk/util-utf8-browser/src/pureJs.ts", "../../@aws-sdk/util-utf8-browser/src/whatwgEncodingApi.ts", "../../@aws-sdk/util-utf8-browser/src/index.ts", "../../@aws-sdk/util-locate-window/dist-es/index.js", "../../@aws-crypto/sha256-browser/src/ie11Sha256.ts", "../../@aws-crypto/util/src/convertToBuffer.ts", "../../@aws-crypto/util/src/isEmptyData.ts", "../../@aws-crypto/util/src/numToUint8.ts", "../../@aws-crypto/util/src/uint32ArrayFrom.ts", "../../@aws-crypto/util/src/index.ts", "../../@aws-crypto/sha256-browser/src/webCryptoSha256.ts", "../../@aws-crypto/sha256-browser/node_modules/@aws-crypto/sha256-js/src/constants.ts", "../../@aws-crypto/sha256-browser/node_modules/@aws-crypto/sha256-js/src/RawSha256.ts", "../../@aws-crypto/sha256-browser/node_modules/@aws-crypto/sha256-js/src/jsSha256.ts", "../../@aws-crypto/sha256-browser/node_modules/@aws-crypto/sha256-js/src/index.ts", "../../@aws-crypto/supports-web-crypto/src/supportsWebCrypto.ts", "../../@aws-crypto/supports-web-crypto/src/index.ts", "../../@aws-crypto/ie11-detection/build/CryptoOperation.js", "../../@aws-crypto/ie11-detection/build/Key.js", "../../@aws-crypto/ie11-detection/build/KeyOperation.js", "../../@aws-crypto/ie11-detection/build/MsSubtleCrypto.js", "../../@aws-crypto/ie11-detection/src/MsWindow.ts", "../../@aws-crypto/ie11-detection/src/index.ts", "../../@aws-crypto/sha256-browser/src/crossPlatformSha256.ts", "../../@aws-crypto/sha256-browser/src/index.ts", "../../@aws-sdk/middleware-retry/node_modules/uuid/lib/rng-browser.js", "../../@aws-sdk/middleware-retry/node_modules/uuid/lib/bytesToUuid.js", "../../@aws-sdk/middleware-retry/node_modules/uuid/v1.js", "../../@aws-sdk/middleware-retry/node_modules/uuid/v4.js", "../../@aws-sdk/middleware-retry/node_modules/uuid/index.js", "../../cookie/index.js", "../../@aws-amplify/core/src/Util/Constants.ts", "../../@aws-amplify/core/src/Logger/ConsoleLogger.ts", "../../@aws-amplify/core/src/Amplify.ts", "../../@aws-amplify/core/src/Platform/version.ts", "../../@aws-amplify/core/src/Platform/index.ts", "../../@aws-amplify/core/src/ClientDevice/browser.ts", "../../@aws-amplify/core/src/ClientDevice/index.ts", "../../@aws-amplify/core/src/Errors.ts", "../../@aws-amplify/core/src/Hub.ts", "../../@aws-amplify/core/src/I18n/I18n.ts", "../../@aws-amplify/core/src/I18n/index.ts", "../../@aws-amplify/core/src/JS.ts", "../../@aws-amplify/core/src/Signer.ts", "../../@aws-sdk/util-hex-encoding/src/index.ts", "../../@aws-amplify/core/src/Util/Retry.ts", "../../@aws-amplify/core/src/Util/Mutex.ts", "../../zen-observable-ts/src/zenObservable.ts", "../../@aws-amplify/core/src/Util/Reachability.ts", "../../@aws-amplify/core/src/Util/DateUtils.ts", "../../@aws-amplify/core/src/Util/StringUtils.ts", "../../@aws-amplify/core/src/Util/BackgroundProcessManager.ts", "../../@aws-amplify/core/src/Parser.ts", "../../@aws-sdk/client-cloudwatch-logs/node_modules/tslib/tslib.es6.js", "../../@aws-sdk/client-cloudwatch-logs/runtimeConfig.browser.ts", "../../tslib/tslib.es6.js", "../../@aws-sdk/protocol-http/src/httpResponse.ts", "../../@aws-sdk/protocol-http/src/httpRequest.ts", "../../@aws-sdk/util-uri-escape/src/escape-uri.ts", "../../@aws-sdk/querystring-builder/src/index.ts", "../../@aws-sdk/fetch-http-handler/src/request-timeout.ts", "../../@aws-sdk/fetch-http-handler/src/fetch-http-handler.ts", "../../@aws-sdk/util-base64-browser/src/index.ts", "../../@aws-sdk/fetch-http-handler/src/stream-collector.ts", "../../@aws-sdk/invalid-dependency/src/invalidProvider.ts", "../../@aws-sdk/middleware-retry/src/retryMiddleware.ts", "../../@aws-sdk/middleware-retry/src/constants.ts", "../../@aws-sdk/service-error-classification/src/constants.ts", "../../@aws-sdk/service-error-classification/src/index.ts", "../../@aws-sdk/middleware-retry/src/defaultStrategy.ts", "../../@aws-sdk/middleware-retry/src/defaultRetryQuota.ts", "../../@aws-sdk/middleware-retry/src/delayDecider.ts", "../../@aws-sdk/middleware-retry/src/retryDecider.ts", "../../@aws-sdk/middleware-retry/src/configurations.ts", "../../@aws-sdk/util-body-length-browser/src/index.ts", "../../bowser/src/constants.js", "../../bowser/src/utils.js", "../../bowser/src/parser-browsers.js", "../../bowser/src/parser-os.js", "../../bowser/src/parser-platforms.js", "../../bowser/src/parser-engines.js", "../../bowser/src/parser.js", "../../bowser/src/bowser.js", "../../@aws-sdk/util-user-agent-browser/src/index.ts", "../../@aws-sdk/client-cloudwatch-logs/endpoints.ts", "../../@aws-sdk/querystring-parser/src/index.ts", "../../@aws-sdk/url-parser/src/index.ts", "../../@aws-sdk/client-cloudwatch-logs/runtimeConfig.shared.ts", "../../@aws-sdk/config-resolver/src/EndpointsConfig.ts", "../../@aws-sdk/config-resolver/src/RegionConfig.ts", "../../@aws-sdk/middleware-content-length/src/index.ts", "../../@aws-sdk/middleware-host-header/src/index.ts", "../../@aws-sdk/middleware-logger/src/loggerMiddleware.ts", "../../@aws-sdk/signature-v4/src/constants.ts", "../../@aws-sdk/signature-v4/src/credentialDerivation.ts", "../../@aws-sdk/signature-v4/src/getCanonicalHeaders.ts", "../../@aws-sdk/signature-v4/src/getCanonicalQuery.ts", "../../@aws-sdk/is-array-buffer/src/index.ts", "../../@aws-sdk/signature-v4/src/getPayloadHash.ts", "../../@aws-sdk/signature-v4/src/hasHeader.ts", "../../@aws-sdk/signature-v4/src/cloneRequest.ts", "../../@aws-sdk/signature-v4/src/moveHeadersToQuery.ts", "../../@aws-sdk/signature-v4/src/prepareRequest.ts", "../../@aws-sdk/signature-v4/src/utilDate.ts", "../../@aws-sdk/signature-v4/src/SignatureV4.ts", "../../@aws-sdk/middleware-signing/src/configurations.ts", "../../@aws-sdk/middleware-signing/src/middleware.ts", "../../@aws-sdk/middleware-user-agent/src/configurations.ts", "../../@aws-sdk/middleware-user-agent/src/constants.ts", "../../@aws-sdk/middleware-user-agent/src/user-agent-middleware.ts", "../../@aws-sdk/middleware-stack/src/MiddlewareStack.ts", "../../@aws-sdk/smithy-client/src/client.ts", "../../@aws-sdk/smithy-client/src/command.ts", "../../@aws-sdk/smithy-client/src/extended-encode-uri-component.ts", "../../@aws-sdk/smithy-client/src/get-array-if-single-item.ts", "../../@aws-sdk/smithy-client/src/get-value-from-text-node.ts", "../../@aws-sdk/smithy-client/src/lazy-json.ts", "../../@aws-sdk/smithy-client/src/date-utils.ts", "../../@aws-sdk/smithy-client/src/constants.ts", "../../@aws-sdk/client-cloudwatch-logs/CloudWatchLogsClient.ts", "../../@aws-sdk/client-cloudwatch-logs/models/models_0.ts", "../../@aws-sdk/client-cloudwatch-logs/protocols/Aws_json1_1.ts", "../../@aws-sdk/middleware-serde/src/deserializerMiddleware.ts", "../../@aws-sdk/middleware-serde/src/serializerMiddleware.ts", "../../@aws-sdk/middleware-serde/src/serdePlugin.ts", "../../@aws-sdk/client-cloudwatch-logs/commands/AssociateKmsKeyCommand.ts", "../../@aws-sdk/client-cloudwatch-logs/commands/CancelExportTaskCommand.ts", "../../@aws-sdk/client-cloudwatch-logs/commands/CreateExportTaskCommand.ts", "../../@aws-sdk/client-cloudwatch-logs/commands/CreateLogGroupCommand.ts", "../../@aws-sdk/client-cloudwatch-logs/commands/CreateLogStreamCommand.ts", "../../@aws-sdk/client-cloudwatch-logs/commands/DeleteDestinationCommand.ts", "../../@aws-sdk/client-cloudwatch-logs/commands/DeleteLogGroupCommand.ts", "../../@aws-sdk/client-cloudwatch-logs/commands/DeleteLogStreamCommand.ts", "../../@aws-sdk/client-cloudwatch-logs/commands/DeleteMetricFilterCommand.ts", "../../@aws-sdk/client-cloudwatch-logs/commands/DeleteQueryDefinitionCommand.ts", "../../@aws-sdk/client-cloudwatch-logs/commands/DeleteResourcePolicyCommand.ts", "../../@aws-sdk/client-cloudwatch-logs/commands/DeleteRetentionPolicyCommand.ts", "../../@aws-sdk/client-cloudwatch-logs/commands/DeleteSubscriptionFilterCommand.ts", "../../@aws-sdk/client-cloudwatch-logs/commands/DescribeDestinationsCommand.ts", "../../@aws-sdk/client-cloudwatch-logs/commands/DescribeExportTasksCommand.ts", "../../@aws-sdk/client-cloudwatch-logs/commands/DescribeLogGroupsCommand.ts", "../../@aws-sdk/client-cloudwatch-logs/commands/DescribeLogStreamsCommand.ts", "../../@aws-sdk/client-cloudwatch-logs/commands/DescribeMetricFiltersCommand.ts", "../../@aws-sdk/client-cloudwatch-logs/commands/DescribeQueriesCommand.ts", "../../@aws-sdk/client-cloudwatch-logs/commands/DescribeQueryDefinitionsCommand.ts", "../../@aws-sdk/client-cloudwatch-logs/commands/DescribeResourcePoliciesCommand.ts", "../../@aws-sdk/client-cloudwatch-logs/commands/DescribeSubscriptionFiltersCommand.ts", "../../@aws-sdk/client-cloudwatch-logs/commands/DisassociateKmsKeyCommand.ts", "../../@aws-sdk/client-cloudwatch-logs/commands/FilterLogEventsCommand.ts", "../../@aws-sdk/client-cloudwatch-logs/commands/GetLogEventsCommand.ts", "../../@aws-sdk/client-cloudwatch-logs/commands/GetLogGroupFieldsCommand.ts", "../../@aws-sdk/client-cloudwatch-logs/commands/GetLogRecordCommand.ts", "../../@aws-sdk/client-cloudwatch-logs/commands/GetQueryResultsCommand.ts", "../../@aws-sdk/client-cloudwatch-logs/commands/ListTagsLogGroupCommand.ts", "../../@aws-sdk/client-cloudwatch-logs/commands/PutDestinationCommand.ts", "../../@aws-sdk/client-cloudwatch-logs/commands/PutDestinationPolicyCommand.ts", "../../@aws-sdk/client-cloudwatch-logs/commands/PutLogEventsCommand.ts", "../../@aws-sdk/client-cloudwatch-logs/commands/PutMetricFilterCommand.ts", "../../@aws-sdk/client-cloudwatch-logs/commands/PutQueryDefinitionCommand.ts", "../../@aws-sdk/client-cloudwatch-logs/commands/PutResourcePolicyCommand.ts", "../../@aws-sdk/client-cloudwatch-logs/commands/PutRetentionPolicyCommand.ts", "../../@aws-sdk/client-cloudwatch-logs/commands/PutSubscriptionFilterCommand.ts", "../../@aws-sdk/client-cloudwatch-logs/commands/StartQueryCommand.ts", "../../@aws-sdk/client-cloudwatch-logs/commands/StopQueryCommand.ts", "../../@aws-sdk/client-cloudwatch-logs/commands/TagLogGroupCommand.ts", "../../@aws-sdk/client-cloudwatch-logs/commands/TestMetricFilterCommand.ts", "../../@aws-sdk/client-cloudwatch-logs/commands/UntagLogGroupCommand.ts", "../../@aws-sdk/client-cloudwatch-logs/CloudWatchLogs.ts", "../../@aws-amplify/core/src/Providers/AWSCloudWatchProvider.ts", "../../@aws-amplify/core/src/OAuthHelper/GoogleOAuth.ts", "../../@aws-amplify/core/src/OAuthHelper/FacebookOAuth.ts", "../../@aws-amplify/core/src/OAuthHelper/index.ts", "../../@aws-amplify/core/src/StorageHelper/index.ts", "../../@aws-amplify/core/src/RNComponents/index.ts", "../../@aws-sdk/client-cognito-identity/node_modules/tslib/tslib.es6.js", "../../@aws-sdk/client-cognito-identity/runtimeConfig.browser.ts", "../../@aws-sdk/client-cognito-identity/endpoints.ts", "../../@aws-sdk/client-cognito-identity/runtimeConfig.shared.ts", "../../@aws-sdk/client-cognito-identity/CognitoIdentityClient.ts", "../../@aws-sdk/client-cognito-identity/models/models_0.ts", "../../@aws-sdk/client-cognito-identity/protocols/Aws_json1_1.ts", "../../@aws-sdk/client-cognito-identity/commands/CreateIdentityPoolCommand.ts", "../../@aws-sdk/client-cognito-identity/commands/DeleteIdentitiesCommand.ts", "../../@aws-sdk/client-cognito-identity/commands/DeleteIdentityPoolCommand.ts", "../../@aws-sdk/client-cognito-identity/commands/DescribeIdentityCommand.ts", "../../@aws-sdk/client-cognito-identity/commands/DescribeIdentityPoolCommand.ts", "../../@aws-sdk/client-cognito-identity/commands/GetCredentialsForIdentityCommand.ts", "../../@aws-sdk/client-cognito-identity/commands/GetIdCommand.ts", "../../@aws-sdk/client-cognito-identity/commands/GetIdentityPoolRolesCommand.ts", "../../@aws-sdk/client-cognito-identity/commands/GetOpenIdTokenCommand.ts", "../../@aws-sdk/client-cognito-identity/commands/GetOpenIdTokenForDeveloperIdentityCommand.ts", "../../@aws-sdk/client-cognito-identity/commands/ListIdentitiesCommand.ts", "../../@aws-sdk/client-cognito-identity/commands/ListIdentityPoolsCommand.ts", "../../@aws-sdk/client-cognito-identity/commands/ListTagsForResourceCommand.ts", "../../@aws-sdk/client-cognito-identity/commands/LookupDeveloperIdentityCommand.ts", "../../@aws-sdk/client-cognito-identity/commands/MergeDeveloperIdentitiesCommand.ts", "../../@aws-sdk/client-cognito-identity/commands/SetIdentityPoolRolesCommand.ts", "../../@aws-sdk/client-cognito-identity/commands/TagResourceCommand.ts", "../../@aws-sdk/client-cognito-identity/commands/UnlinkDeveloperIdentityCommand.ts", "../../@aws-sdk/client-cognito-identity/commands/UnlinkIdentityCommand.ts", "../../@aws-sdk/client-cognito-identity/commands/UntagResourceCommand.ts", "../../@aws-sdk/client-cognito-identity/commands/UpdateIdentityPoolCommand.ts", "../../@aws-sdk/client-cognito-identity/CognitoIdentity.ts", "../../@aws-sdk/property-provider/src/ProviderError.ts", "../../@aws-sdk/credential-provider-cognito-identity/src/resolveLogins.ts", "../../@aws-sdk/credential-provider-cognito-identity/src/fromCognitoIdentity.ts", "../../@aws-sdk/credential-provider-cognito-identity/src/IndexedDbStorage.ts", "../../@aws-sdk/credential-provider-cognito-identity/src/InMemoryStorage.ts", "../../@aws-sdk/credential-provider-cognito-identity/src/localStorage.ts", "../../@aws-sdk/credential-provider-cognito-identity/src/fromCognitoIdentityPool.ts", "../../@aws-amplify/core/src/Util/CognitoIdentityClient.ts", "../../@aws-amplify/core/src/Credentials.ts", "../../@aws-amplify/core/src/ServiceWorker/ServiceWorker.ts", "../../universal-cookie/es6/Cookies.js", "../../universal-cookie/es6/utils.js", "../../universal-cookie/es6/index.js", "../../@aws-amplify/core/src/UniversalStorage/index.ts", "../../@aws-amplify/core/src/constants.ts", "../../@aws-amplify/core/src/index.ts"],
  "sourcesContent": ["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\n/* global global, define, System, Reflect, Promise */\r\nvar __extends;\r\nvar __assign;\r\nvar __rest;\r\nvar __decorate;\r\nvar __param;\r\nvar __metadata;\r\nvar __awaiter;\r\nvar __generator;\r\nvar __exportStar;\r\nvar __values;\r\nvar __read;\r\nvar __spread;\r\nvar __spreadArrays;\r\nvar __await;\r\nvar __asyncGenerator;\r\nvar __asyncDelegator;\r\nvar __asyncValues;\r\nvar __makeTemplateObject;\r\nvar __importStar;\r\nvar __importDefault;\r\nvar __classPrivateFieldGet;\r\nvar __classPrivateFieldSet;\r\nvar __createBinding;\r\n(function (factory) {\r\n    var root = typeof global === \"object\" ? global : typeof self === \"object\" ? self : typeof this === \"object\" ? this : {};\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define(\"tslib\", [\"exports\"], function (exports) { factory(createExporter(root, createExporter(exports))); });\r\n    }\r\n    else if (typeof module === \"object\" && typeof module.exports === \"object\") {\r\n        factory(createExporter(root, createExporter(module.exports)));\r\n    }\r\n    else {\r\n        factory(createExporter(root));\r\n    }\r\n    function createExporter(exports, previous) {\r\n        if (exports !== root) {\r\n            if (typeof Object.create === \"function\") {\r\n                Object.defineProperty(exports, \"__esModule\", { value: true });\r\n            }\r\n            else {\r\n                exports.__esModule = true;\r\n            }\r\n        }\r\n        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };\r\n    }\r\n})\r\n(function (exporter) {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\n    __extends = function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n\r\n    __assign = Object.assign || function (t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n\r\n    __rest = function (s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                    t[p[i]] = s[p[i]];\r\n            }\r\n        return t;\r\n    };\r\n\r\n    __decorate = function (decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    };\r\n\r\n    __param = function (paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    };\r\n\r\n    __metadata = function (metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    };\r\n\r\n    __awaiter = function (thisArg, _arguments, P, generator) {\r\n        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    };\r\n\r\n    __generator = function (thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    };\r\n\r\n    __createBinding = function(o, m, k, k2) {\r\n        if (k2 === undefined) k2 = k;\r\n        o[k2] = m[k];\r\n    };\r\n\r\n    __exportStar = function (m, exports) {\r\n        for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    };\r\n\r\n    __values = function (o) {\r\n        var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n        if (m) return m.call(o);\r\n        if (o && typeof o.length === \"number\") return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n        throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n    };\r\n\r\n    __read = function (o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    };\r\n\r\n    __spread = function () {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    };\r\n\r\n    __spreadArrays = function () {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    };\r\n\r\n    __await = function (v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    };\r\n\r\n    __asyncGenerator = function (thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    };\r\n\r\n    __asyncDelegator = function (o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    };\r\n\r\n    __asyncValues = function (o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    };\r\n\r\n    __makeTemplateObject = function (cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    __importStar = function (mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n        result[\"default\"] = mod;\r\n        return result;\r\n    };\r\n\r\n    __importDefault = function (mod) {\r\n        return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n    };\r\n\r\n    __classPrivateFieldGet = function (receiver, privateMap) {\r\n        if (!privateMap.has(receiver)) {\r\n            throw new TypeError(\"attempted to get private field on non-instance\");\r\n        }\r\n        return privateMap.get(receiver);\r\n    };\r\n\r\n    __classPrivateFieldSet = function (receiver, privateMap, value) {\r\n        if (!privateMap.has(receiver)) {\r\n            throw new TypeError(\"attempted to set private field on non-instance\");\r\n        }\r\n        privateMap.set(receiver, value);\r\n        return value;\r\n    };\r\n\r\n    exporter(\"__extends\", __extends);\r\n    exporter(\"__assign\", __assign);\r\n    exporter(\"__rest\", __rest);\r\n    exporter(\"__decorate\", __decorate);\r\n    exporter(\"__param\", __param);\r\n    exporter(\"__metadata\", __metadata);\r\n    exporter(\"__awaiter\", __awaiter);\r\n    exporter(\"__generator\", __generator);\r\n    exporter(\"__exportStar\", __exportStar);\r\n    exporter(\"__createBinding\", __createBinding);\r\n    exporter(\"__values\", __values);\r\n    exporter(\"__read\", __read);\r\n    exporter(\"__spread\", __spread);\r\n    exporter(\"__spreadArrays\", __spreadArrays);\r\n    exporter(\"__await\", __await);\r\n    exporter(\"__asyncGenerator\", __asyncGenerator);\r\n    exporter(\"__asyncDelegator\", __asyncDelegator);\r\n    exporter(\"__asyncValues\", __asyncValues);\r\n    exporter(\"__makeTemplateObject\", __makeTemplateObject);\r\n    exporter(\"__importStar\", __importStar);\r\n    exporter(\"__importDefault\", __importDefault);\r\n    exporter(\"__classPrivateFieldGet\", __classPrivateFieldGet);\r\n    exporter(\"__classPrivateFieldSet\", __classPrivateFieldSet);\r\n});\r\n", "/**\n * @internal\n */\nexport const BLOCK_SIZE: number = 64;\n\n/**\n * @internal\n */\nexport const DIGEST_LENGTH: number = 32;\n\n/**\n * @internal\n */\nexport const KEY = new Uint32Array([\n  0x428a2f98,\n  0x71374491,\n  0xb5c0fbcf,\n  0xe9b5dba5,\n  0x3956c25b,\n  0x59f111f1,\n  0x923f82a4,\n  0xab1c5ed5,\n  0xd807aa98,\n  0x12835b01,\n  0x243185be,\n  0x550c7dc3,\n  0x72be5d74,\n  0x80deb1fe,\n  0x9bdc06a7,\n  0xc19bf174,\n  0xe49b69c1,\n  0xefbe4786,\n  0x0fc19dc6,\n  0x240ca1cc,\n  0x2de92c6f,\n  0x4a7484aa,\n  0x5cb0a9dc,\n  0x76f988da,\n  0x983e5152,\n  0xa831c66d,\n  0xb00327c8,\n  0xbf597fc7,\n  0xc6e00bf3,\n  0xd5a79147,\n  0x06ca6351,\n  0x14292967,\n  0x27b70a85,\n  0x2e1b2138,\n  0x4d2c6dfc,\n  0x53380d13,\n  0x650a7354,\n  0x766a0abb,\n  0x81c2c92e,\n  0x92722c85,\n  0xa2bfe8a1,\n  0xa81a664b,\n  0xc24b8b70,\n  0xc76c51a3,\n  0xd192e819,\n  0xd6990624,\n  0xf40e3585,\n  0x106aa070,\n  0x19a4c116,\n  0x1e376c08,\n  0x2748774c,\n  0x34b0bcb5,\n  0x391c0cb3,\n  0x4ed8aa4a,\n  0x5b9cca4f,\n  0x682e6ff3,\n  0x748f82ee,\n  0x78a5636f,\n  0x84c87814,\n  0x8cc70208,\n  0x90befffa,\n  0xa4506ceb,\n  0xbef9a3f7,\n  0xc67178f2\n]);\n\n/**\n * @internal\n */\nexport const INIT = [\n  0x6a09e667,\n  0xbb67ae85,\n  0x3c6ef372,\n  0xa54ff53a,\n  0x510e527f,\n  0x9b05688c,\n  0x1f83d9ab,\n  0x5be0cd19\n];\n\n/**\n * @internal\n */\nexport const MAX_HASHABLE_LENGTH = 2 ** 53 - 1;\n", "import {\n  BLOCK_SIZE,\n  DIGEST_LENGTH,\n  INIT,\n  KEY,\n  MAX_HASHABLE_LENGTH\n} from \"./constants\";\n\n/**\n * @internal\n */\nexport class RawSha256 {\n  private state: Int32Array = Int32Array.from(INIT);\n  private temp: Int32Array = new Int32Array(64);\n  private buffer: Uint8Array = new Uint8Array(64);\n  private bufferLength: number = 0;\n  private bytesHashed: number = 0;\n\n  /**\n   * @internal\n   */\n  finished: boolean = false;\n\n  update(data: Uint8Array): void {\n    if (this.finished) {\n      throw new Error(\"Attempted to update an already finished hash.\");\n    }\n\n    let position = 0;\n    let { byteLength } = data;\n    this.bytesHashed += byteLength;\n\n    if (this.bytesHashed * 8 > MAX_HASHABLE_LENGTH) {\n      throw new Error(\"Cannot hash more than 2^53 - 1 bits\");\n    }\n\n    while (byteLength > 0) {\n      this.buffer[this.bufferLength++] = data[position++];\n      byteLength--;\n\n      if (this.bufferLength === BLOCK_SIZE) {\n        this.hashBuffer();\n        this.bufferLength = 0;\n      }\n    }\n  }\n\n  digest(): Uint8Array {\n    if (!this.finished) {\n      const bitsHashed = this.bytesHashed * 8;\n      const bufferView = new DataView(\n        this.buffer.buffer,\n        this.buffer.byteOffset,\n        this.buffer.byteLength\n      );\n\n      const undecoratedLength = this.bufferLength;\n      bufferView.setUint8(this.bufferLength++, 0x80);\n\n      // Ensure the final block has enough room for the hashed length\n      if (undecoratedLength % BLOCK_SIZE >= BLOCK_SIZE - 8) {\n        for (let i = this.bufferLength; i < BLOCK_SIZE; i++) {\n          bufferView.setUint8(i, 0);\n        }\n        this.hashBuffer();\n        this.bufferLength = 0;\n      }\n\n      for (let i = this.bufferLength; i < BLOCK_SIZE - 8; i++) {\n        bufferView.setUint8(i, 0);\n      }\n      bufferView.setUint32(\n        BLOCK_SIZE - 8,\n        Math.floor(bitsHashed / 0x100000000),\n        true\n      );\n      bufferView.setUint32(BLOCK_SIZE - 4, bitsHashed);\n\n      this.hashBuffer();\n\n      this.finished = true;\n    }\n\n    // The value in state is little-endian rather than big-endian, so flip\n    // each word into a new Uint8Array\n    const out = new Uint8Array(DIGEST_LENGTH);\n    for (let i = 0; i < 8; i++) {\n      out[i * 4] = (this.state[i] >>> 24) & 0xff;\n      out[i * 4 + 1] = (this.state[i] >>> 16) & 0xff;\n      out[i * 4 + 2] = (this.state[i] >>> 8) & 0xff;\n      out[i * 4 + 3] = (this.state[i] >>> 0) & 0xff;\n    }\n\n    return out;\n  }\n\n  private hashBuffer(): void {\n    const { buffer, state } = this;\n\n    let state0 = state[0],\n      state1 = state[1],\n      state2 = state[2],\n      state3 = state[3],\n      state4 = state[4],\n      state5 = state[5],\n      state6 = state[6],\n      state7 = state[7];\n\n    for (let i = 0; i < BLOCK_SIZE; i++) {\n      if (i < 16) {\n        this.temp[i] =\n          ((buffer[i * 4] & 0xff) << 24) |\n          ((buffer[i * 4 + 1] & 0xff) << 16) |\n          ((buffer[i * 4 + 2] & 0xff) << 8) |\n          (buffer[i * 4 + 3] & 0xff);\n      } else {\n        let u = this.temp[i - 2];\n        const t1 =\n          ((u >>> 17) | (u << 15)) ^ ((u >>> 19) | (u << 13)) ^ (u >>> 10);\n\n        u = this.temp[i - 15];\n        const t2 =\n          ((u >>> 7) | (u << 25)) ^ ((u >>> 18) | (u << 14)) ^ (u >>> 3);\n\n        this.temp[i] =\n          ((t1 + this.temp[i - 7]) | 0) + ((t2 + this.temp[i - 16]) | 0);\n      }\n\n      const t1 =\n        ((((((state4 >>> 6) | (state4 << 26)) ^\n          ((state4 >>> 11) | (state4 << 21)) ^\n          ((state4 >>> 25) | (state4 << 7))) +\n          ((state4 & state5) ^ (~state4 & state6))) |\n          0) +\n          ((state7 + ((KEY[i] + this.temp[i]) | 0)) | 0)) |\n        0;\n\n      const t2 =\n        ((((state0 >>> 2) | (state0 << 30)) ^\n          ((state0 >>> 13) | (state0 << 19)) ^\n          ((state0 >>> 22) | (state0 << 10))) +\n          ((state0 & state1) ^ (state0 & state2) ^ (state1 & state2))) |\n        0;\n\n      state7 = state6;\n      state6 = state5;\n      state5 = state4;\n      state4 = (state3 + t1) | 0;\n      state3 = state2;\n      state2 = state1;\n      state1 = state0;\n      state0 = (t1 + t2) | 0;\n    }\n\n    state[0] += state0;\n    state[1] += state1;\n    state[2] += state2;\n    state[3] += state3;\n    state[4] += state4;\n    state[5] += state5;\n    state[6] += state6;\n    state[7] += state7;\n  }\n}\n", "/**\n * Converts a JS string from its native UCS-2/UTF-16 representation into a\n * Uint8Array of the bytes used to represent the equivalent characters in UTF-8.\n *\n * Cribbed from the `goog.crypt.stringToUtf8ByteArray` function in the Google\n * Closure library, though updated to use typed arrays.\n */\nexport const fromUtf8 = (input: string): Uint8Array => {\n  const bytes: Array<number> = [];\n  for (let i = 0, len = input.length; i < len; i++) {\n    const value = input.charCodeAt(i);\n    if (value < 0x80) {\n      bytes.push(value);\n    } else if (value < 0x800) {\n      bytes.push((value >> 6) | 0b11000000, (value & 0b111111) | 0b10000000);\n    } else if (i + 1 < input.length && (value & 0xfc00) === 0xd800 && (input.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {\n      const surrogatePair = 0x10000 + ((value & 0b1111111111) << 10) + (input.charCodeAt(++i) & 0b1111111111);\n      bytes.push(\n        (surrogatePair >> 18) | 0b11110000,\n        ((surrogatePair >> 12) & 0b111111) | 0b10000000,\n        ((surrogatePair >> 6) & 0b111111) | 0b10000000,\n        (surrogatePair & 0b111111) | 0b10000000\n      );\n    } else {\n      bytes.push((value >> 12) | 0b11100000, ((value >> 6) & 0b111111) | 0b10000000, (value & 0b111111) | 0b10000000);\n    }\n  }\n\n  return Uint8Array.from(bytes);\n};\n\n/**\n * Converts a typed array of bytes containing UTF-8 data into a native JS\n * string.\n *\n * Partly cribbed from the `goog.crypt.utf8ByteArrayToString` function in the\n * Google Closure library, though updated to use typed arrays and to better\n * handle astral plane code points.\n */\nexport const toUtf8 = (input: Uint8Array): string => {\n  let decoded = \"\";\n  for (let i = 0, len = input.length; i < len; i++) {\n    const byte = input[i];\n    if (byte < 0x80) {\n      decoded += String.fromCharCode(byte);\n    } else if (0b11000000 <= byte && byte < 0b11100000) {\n      const nextByte = input[++i];\n      decoded += String.fromCharCode(((byte & 0b11111) << 6) | (nextByte & 0b111111));\n    } else if (0b11110000 <= byte && byte < 0b101101101) {\n      const surrogatePair = [byte, input[++i], input[++i], input[++i]];\n      const encoded = \"%\" + surrogatePair.map((byteValue) => byteValue.toString(16)).join(\"%\");\n      decoded += decodeURIComponent(encoded);\n    } else {\n      decoded += String.fromCharCode(\n        ((byte & 0b1111) << 12) | ((input[++i] & 0b111111) << 6) | (input[++i] & 0b111111)\n      );\n    }\n  }\n\n  return decoded;\n};\n", "/**\n * A declaration of the global TextEncoder and TextDecoder constructors.\n *\n * @see https://encoding.spec.whatwg.org/\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nnamespace Encoding {\n  interface TextDecoderOptions {\n    fatal?: boolean;\n    ignoreBOM?: boolean;\n  }\n\n  interface TextDecodeOptions {\n    stream?: boolean;\n  }\n\n  interface TextDecoder {\n    readonly encoding: string;\n    readonly fatal: boolean;\n    readonly ignoreBOM: boolean;\n    decode(input?: ArrayBuffer | ArrayBufferView, options?: TextDecodeOptions): string;\n  }\n\n  export interface TextDecoderConstructor {\n    new (label?: string, options?: TextDecoderOptions): TextDecoder;\n  }\n\n  interface TextEncoder {\n    readonly encoding: \"utf-8\";\n    encode(input?: string): Uint8Array;\n  }\n\n  export interface TextEncoderConstructor {\n    new (): TextEncoder;\n  }\n}\n\ndeclare const TextDecoder: Encoding.TextDecoderConstructor;\n\ndeclare const TextEncoder: Encoding.TextEncoderConstructor;\n\nexport function fromUtf8(input: string): Uint8Array {\n  return new TextEncoder().encode(input);\n}\n\nexport function toUtf8(input: Uint8Array): string {\n  return new TextDecoder(\"utf-8\").decode(input);\n}\n", "import { fromUtf8 as jsFromUtf8, toUtf8 as jsToUtf8 } from \"./pureJs\";\nimport { fromUtf8 as textEncoderFromUtf8, toUtf8 as textEncoderToUtf8 } from \"./whatwgEncodingApi\";\n\ndeclare const TextDecoder: Function | undefined;\ndeclare const TextEncoder: Function | undefined;\n\nexport const fromUtf8 = (input: string): Uint8Array =>\n  typeof TextEncoder === \"function\" ? textEncoderFromUtf8(input) : jsFromUtf8(input);\n\nexport const toUtf8 = (input: Uint8Array): string =>\n  typeof TextDecoder === \"function\" ? textEncoderToUtf8(input) : jsToUtf8(input);\n", "import { BLOCK_SIZE } from \"./constants\";\nimport { RawSha256 } from \"./RawSha256\";\nimport { Hash, SourceData } from \"@aws-sdk/types\";\nimport { fromUtf8 } from \"@aws-sdk/util-utf8-browser\";\n\nexport class Sha256 implements Hash {\n  private readonly hash = new RawSha256();\n  private readonly outer?: RawSha256;\n  private error: any;\n\n  constructor(secret?: SourceData) {\n    if (secret) {\n      this.outer = new RawSha256();\n      const inner = bufferFromSecret(secret);\n      const outer = new Uint8Array(BLOCK_SIZE);\n      outer.set(inner);\n\n      for (let i = 0; i < BLOCK_SIZE; i++) {\n        inner[i] ^= 0x36;\n        outer[i] ^= 0x5c;\n      }\n\n      this.hash.update(inner);\n      this.outer.update(outer);\n\n      // overwrite the copied key in memory\n      for (let i = 0; i < inner.byteLength; i++) {\n        inner[i] = 0;\n      }\n    }\n  }\n\n  update(toHash: SourceData): void {\n    if (isEmptyData(toHash) || this.error) {\n      return;\n    }\n\n    try {\n      this.hash.update(convertToBuffer(toHash));\n    } catch (e) {\n      this.error = e;\n    }\n  }\n\n  /* This synchronous method keeps compatibility\n   * with the v2 aws-sdk.\n   */\n  digestSync(): Uint8Array {\n    if (this.error) {\n      throw this.error;\n    }\n\n    if (this.outer) {\n      if (!this.outer.finished) {\n        this.outer.update(this.hash.digest());\n      }\n\n      return this.outer.digest();\n    }\n\n    return this.hash.digest();\n  }\n\n  /* The underlying digest method here is synchronous.\n   * To keep the same interface with the other hash functions\n   * the default is to expose this as an async method.\n   * However, it can sometimes be useful to have a sync method.\n   */\n  async digest(): Promise<Uint8Array> {\n    return this.digestSync();\n  }\n}\n\nfunction bufferFromSecret(secret: SourceData): Uint8Array {\n  let input = convertToBuffer(secret);\n\n  if (input.byteLength > BLOCK_SIZE) {\n    const bufferHash = new RawSha256();\n    bufferHash.update(input);\n    input = bufferHash.digest();\n  }\n\n  const buffer = new Uint8Array(BLOCK_SIZE);\n  buffer.set(input);\n  return buffer;\n}\n\nfunction isEmptyData(data: SourceData): boolean {\n  if (typeof data === \"string\") {\n    return data.length === 0;\n  }\n\n  return data.byteLength === 0;\n}\n\nfunction convertToBuffer(data: SourceData): Uint8Array {\n  if (typeof data === \"string\") {\n    return fromUtf8(data);\n  }\n\n  if (ArrayBuffer.isView(data)) {\n    return new Uint8Array(\n      data.buffer,\n      data.byteOffset,\n      data.byteLength / Uint8Array.BYTES_PER_ELEMENT\n    );\n  }\n\n  return new Uint8Array(data);\n}\n", "export * from \"./jsSha256\";\n", "/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n", "'use strict';\n\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, sym);\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n", "'use strict';\n\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\nvar hasSymbolSham = require('./shams');\n\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n", "'use strict';\n\nvar test = {\n\tfoo: {}\n};\n\nvar $Object = Object;\n\nmodule.exports = function hasProto() {\n\treturn { __proto__: test }.foo === test.foo && !({ __proto__: null } instanceof $Object);\n};\n", "'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar slice = Array.prototype.slice;\nvar toStr = Object.prototype.toString;\nvar funcType = '[object Function]';\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.call(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slice.call(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                args.concat(slice.call(arguments))\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        } else {\n            return target.apply(\n                that,\n                args.concat(slice.call(arguments))\n            );\n        }\n    };\n\n    var boundLength = Math.max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs.push('$' + i);\n    }\n\n    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n", "'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n", "'use strict';\n\nvar bind = require('function-bind');\n\nmodule.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);\n", "'use strict';\n\nvar undefined;\n\nvar $SyntaxError = SyntaxError;\nvar $Function = Function;\nvar $TypeError = TypeError;\n\n// eslint-disable-next-line consistent-return\nvar getEvalledConstructor = function (expressionSyntax) {\n\ttry {\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\n\t} catch (e) {}\n};\n\nvar $gOPD = Object.getOwnPropertyDescriptor;\nif ($gOPD) {\n\ttry {\n\t\t$gOPD({}, '');\n\t} catch (e) {\n\t\t$gOPD = null; // this is IE 8, which has a broken gOPD\n\t}\n}\n\nvar throwTypeError = function () {\n\tthrow new $TypeError();\n};\nvar ThrowTypeError = $gOPD\n\t? (function () {\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\n\t\t\targuments.callee; // IE 8 does not throw here\n\t\t\treturn throwTypeError;\n\t\t} catch (calleeThrows) {\n\t\t\ttry {\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\n\t\t\t} catch (gOPDthrows) {\n\t\t\t\treturn throwTypeError;\n\t\t\t}\n\t\t}\n\t}())\n\t: throwTypeError;\n\nvar hasSymbols = require('has-symbols')();\nvar hasProto = require('has-proto')();\n\nvar getProto = Object.getPrototypeOf || (\n\thasProto\n\t\t? function (x) { return x.__proto__; } // eslint-disable-line no-proto\n\t\t: null\n);\n\nvar needsEval = {};\n\nvar TypedArray = typeof Uint8Array === 'undefined' || !getProto ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\n\t'%Array%': Array,\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'%ArrayIteratorPrototype%': hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined,\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\n\t'%AsyncFunction%': needsEval,\n\t'%AsyncGenerator%': needsEval,\n\t'%AsyncGeneratorFunction%': needsEval,\n\t'%AsyncIteratorPrototype%': needsEval,\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\n\t'%BigInt64Array%': typeof BigInt64Array === 'undefined' ? undefined : BigInt64Array,\n\t'%BigUint64Array%': typeof BigUint64Array === 'undefined' ? undefined : BigUint64Array,\n\t'%Boolean%': Boolean,\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'%Date%': Date,\n\t'%decodeURI%': decodeURI,\n\t'%decodeURIComponent%': decodeURIComponent,\n\t'%encodeURI%': encodeURI,\n\t'%encodeURIComponent%': encodeURIComponent,\n\t'%Error%': Error,\n\t'%eval%': eval, // eslint-disable-line no-eval\n\t'%EvalError%': EvalError,\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\n\t'%Function%': $Function,\n\t'%GeneratorFunction%': needsEval,\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'%isFinite%': isFinite,\n\t'%isNaN%': isNaN,\n\t'%IteratorPrototype%': hasSymbols && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'%Math%': Math,\n\t'%Number%': Number,\n\t'%Object%': Object,\n\t'%parseFloat%': parseFloat,\n\t'%parseInt%': parseInt,\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'%RangeError%': RangeError,\n\t'%ReferenceError%': ReferenceError,\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'%RegExp%': RegExp,\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'%String%': String,\n\t'%StringIteratorPrototype%': hasSymbols && getProto ? getProto(''[Symbol.iterator]()) : undefined,\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\n\t'%SyntaxError%': $SyntaxError,\n\t'%ThrowTypeError%': ThrowTypeError,\n\t'%TypedArray%': TypedArray,\n\t'%TypeError%': $TypeError,\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'%URIError%': URIError,\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet\n};\n\nif (getProto) {\n\ttry {\n\t\tnull.error; // eslint-disable-line no-unused-expressions\n\t} catch (e) {\n\t\t// https://github.com/tc39/proposal-shadowrealm/pull/384#issuecomment-1364264229\n\t\tvar errorProto = getProto(getProto(e));\n\t\tINTRINSICS['%Error.prototype%'] = errorProto;\n\t}\n}\n\nvar doEval = function doEval(name) {\n\tvar value;\n\tif (name === '%AsyncFunction%') {\n\t\tvalue = getEvalledConstructor('async function () {}');\n\t} else if (name === '%GeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('function* () {}');\n\t} else if (name === '%AsyncGeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('async function* () {}');\n\t} else if (name === '%AsyncGenerator%') {\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\n\t\tif (fn) {\n\t\t\tvalue = fn.prototype;\n\t\t}\n\t} else if (name === '%AsyncIteratorPrototype%') {\n\t\tvar gen = doEval('%AsyncGenerator%');\n\t\tif (gen && getProto) {\n\t\t\tvalue = getProto(gen.prototype);\n\t\t}\n\t}\n\n\tINTRINSICS[name] = value;\n\n\treturn value;\n};\n\nvar LEGACY_ALIASES = {\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\n\t'%ArrayPrototype%': ['Array', 'prototype'],\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\n\t'%DatePrototype%': ['Date', 'prototype'],\n\t'%ErrorPrototype%': ['Error', 'prototype'],\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\n\t'%FunctionPrototype%': ['Function', 'prototype'],\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\n\t'%JSONParse%': ['JSON', 'parse'],\n\t'%JSONStringify%': ['JSON', 'stringify'],\n\t'%MapPrototype%': ['Map', 'prototype'],\n\t'%NumberPrototype%': ['Number', 'prototype'],\n\t'%ObjectPrototype%': ['Object', 'prototype'],\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\n\t'%PromisePrototype%': ['Promise', 'prototype'],\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\n\t'%Promise_all%': ['Promise', 'all'],\n\t'%Promise_reject%': ['Promise', 'reject'],\n\t'%Promise_resolve%': ['Promise', 'resolve'],\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\n\t'%SetPrototype%': ['Set', 'prototype'],\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\n\t'%StringPrototype%': ['String', 'prototype'],\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\n};\n\nvar bind = require('function-bind');\nvar hasOwn = require('has');\nvar $concat = bind.call(Function.call, Array.prototype.concat);\nvar $spliceApply = bind.call(Function.apply, Array.prototype.splice);\nvar $replace = bind.call(Function.call, String.prototype.replace);\nvar $strSlice = bind.call(Function.call, String.prototype.slice);\nvar $exec = bind.call(Function.call, RegExp.prototype.exec);\n\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\nvar stringToPath = function stringToPath(string) {\n\tvar first = $strSlice(string, 0, 1);\n\tvar last = $strSlice(string, -1);\n\tif (first === '%' && last !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\n\t} else if (last === '%' && first !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\n\t}\n\tvar result = [];\n\t$replace(string, rePropName, function (match, number, quote, subString) {\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\n\t});\n\treturn result;\n};\n/* end adaptation */\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\n\tvar intrinsicName = name;\n\tvar alias;\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\n\t\talias = LEGACY_ALIASES[intrinsicName];\n\t\tintrinsicName = '%' + alias[0] + '%';\n\t}\n\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\n\t\tvar value = INTRINSICS[intrinsicName];\n\t\tif (value === needsEval) {\n\t\t\tvalue = doEval(intrinsicName);\n\t\t}\n\t\tif (typeof value === 'undefined' && !allowMissing) {\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t\t}\n\n\t\treturn {\n\t\t\talias: alias,\n\t\t\tname: intrinsicName,\n\t\t\tvalue: value\n\t\t};\n\t}\n\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (typeof name !== 'string' || name.length === 0) {\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\n\t}\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tif ($exec(/^%?[^%]*%?$/, name) === null) {\n\t\tthrow new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');\n\t}\n\tvar parts = stringToPath(name);\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\n\tvar intrinsicRealName = intrinsic.name;\n\tvar value = intrinsic.value;\n\tvar skipFurtherCaching = false;\n\n\tvar alias = intrinsic.alias;\n\tif (alias) {\n\t\tintrinsicBaseName = alias[0];\n\t\t$spliceApply(parts, $concat([0, 1], alias));\n\t}\n\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\n\t\tvar part = parts[i];\n\t\tvar first = $strSlice(part, 0, 1);\n\t\tvar last = $strSlice(part, -1);\n\t\tif (\n\t\t\t(\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\n\t\t\t)\n\t\t\t&& first !== last\n\t\t) {\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\n\t\t}\n\t\tif (part === 'constructor' || !isOwn) {\n\t\t\tskipFurtherCaching = true;\n\t\t}\n\n\t\tintrinsicBaseName += '.' + part;\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\n\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\n\t\t} else if (value != null) {\n\t\t\tif (!(part in value)) {\n\t\t\t\tif (!allowMissing) {\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\n\t\t\t\t}\n\t\t\t\treturn void undefined;\n\t\t\t}\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\n\t\t\t\tvar desc = $gOPD(value, part);\n\t\t\t\tisOwn = !!desc;\n\n\t\t\t\t// By convention, when a data property is converted to an accessor\n\t\t\t\t// property to emulate a data property that does not suffer from\n\t\t\t\t// the override mistake, that accessor's getter is marked with\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\n\t\t\t\t// uphold the illusion by pretending to see that original data\n\t\t\t\t// property, i.e., returning the value rather than the getter\n\t\t\t\t// itself.\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n\t\t\t\t\tvalue = desc.get;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = value[part];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tisOwn = hasOwn(value, part);\n\t\t\t\tvalue = value[part];\n\t\t\t}\n\n\t\t\tif (isOwn && !skipFurtherCaching) {\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\n\t\t\t}\n\t\t}\n\t}\n\treturn value;\n};\n", "'use strict';\n\nvar bind = require('function-bind');\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $apply = GetIntrinsic('%Function.prototype.apply%');\nvar $call = GetIntrinsic('%Function.prototype.call%');\nvar $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);\n\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true);\nvar $max = GetIntrinsic('%Math.max%');\n\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = null;\n\t}\n}\n\nmodule.exports = function callBind(originalFunction) {\n\tvar func = $reflectApply(bind, $call, arguments);\n\tif ($gOPD && $defineProperty) {\n\t\tvar desc = $gOPD(func, 'length');\n\t\tif (desc.configurable) {\n\t\t\t// original length, plus the receiver, minus any additional arguments (after the receiver)\n\t\t\t$defineProperty(\n\t\t\t\tfunc,\n\t\t\t\t'length',\n\t\t\t\t{ value: 1 + $max(0, originalFunction.length - (arguments.length - 1)) }\n\t\t\t);\n\t\t}\n\t}\n\treturn func;\n};\n\nvar applyBind = function applyBind() {\n\treturn $reflectApply(bind, $apply, arguments);\n};\n\nif ($defineProperty) {\n\t$defineProperty(module.exports, 'apply', { value: applyBind });\n} else {\n\tmodule.exports.apply = applyBind;\n}\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar callBind = require('./');\n\nvar $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));\n\nmodule.exports = function callBoundIntrinsic(name, allowMissing) {\n\tvar intrinsic = GetIntrinsic(name, !!allowMissing);\n\tif (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {\n\t\treturn callBind(intrinsic);\n\t}\n\treturn intrinsic;\n};\n", "", "var hasMap = typeof Map === 'function' && Map.prototype;\nvar mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, 'size') : null;\nvar mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function' ? mapSizeDescriptor.get : null;\nvar mapForEach = hasMap && Map.prototype.forEach;\nvar hasSet = typeof Set === 'function' && Set.prototype;\nvar setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, 'size') : null;\nvar setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function' ? setSizeDescriptor.get : null;\nvar setForEach = hasSet && Set.prototype.forEach;\nvar hasWeakMap = typeof WeakMap === 'function' && WeakMap.prototype;\nvar weakMapHas = hasWeakMap ? WeakMap.prototype.has : null;\nvar hasWeakSet = typeof WeakSet === 'function' && WeakSet.prototype;\nvar weakSetHas = hasWeakSet ? WeakSet.prototype.has : null;\nvar hasWeakRef = typeof WeakRef === 'function' && WeakRef.prototype;\nvar weakRefDeref = hasWeakRef ? WeakRef.prototype.deref : null;\nvar booleanValueOf = Boolean.prototype.valueOf;\nvar objectToString = Object.prototype.toString;\nvar functionToString = Function.prototype.toString;\nvar $match = String.prototype.match;\nvar $slice = String.prototype.slice;\nvar $replace = String.prototype.replace;\nvar $toUpperCase = String.prototype.toUpperCase;\nvar $toLowerCase = String.prototype.toLowerCase;\nvar $test = RegExp.prototype.test;\nvar $concat = Array.prototype.concat;\nvar $join = Array.prototype.join;\nvar $arrSlice = Array.prototype.slice;\nvar $floor = Math.floor;\nvar bigIntValueOf = typeof BigInt === 'function' ? BigInt.prototype.valueOf : null;\nvar gOPS = Object.getOwnPropertySymbols;\nvar symToString = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? Symbol.prototype.toString : null;\nvar hasShammedSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'object';\n// ie, `has-tostringtag/shams\nvar toStringTag = typeof Symbol === 'function' && Symbol.toStringTag && (typeof Symbol.toStringTag === hasShammedSymbols ? 'object' : 'symbol')\n    ? Symbol.toStringTag\n    : null;\nvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\nvar gPO = (typeof Reflect === 'function' ? Reflect.getPrototypeOf : Object.getPrototypeOf) || (\n    [].__proto__ === Array.prototype // eslint-disable-line no-proto\n        ? function (O) {\n            return O.__proto__; // eslint-disable-line no-proto\n        }\n        : null\n);\n\nfunction addNumericSeparator(num, str) {\n    if (\n        num === Infinity\n        || num === -Infinity\n        || num !== num\n        || (num && num > -1000 && num < 1000)\n        || $test.call(/e/, str)\n    ) {\n        return str;\n    }\n    var sepRegex = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;\n    if (typeof num === 'number') {\n        var int = num < 0 ? -$floor(-num) : $floor(num); // trunc(num)\n        if (int !== num) {\n            var intStr = String(int);\n            var dec = $slice.call(str, intStr.length + 1);\n            return $replace.call(intStr, sepRegex, '$&_') + '.' + $replace.call($replace.call(dec, /([0-9]{3})/g, '$&_'), /_$/, '');\n        }\n    }\n    return $replace.call(str, sepRegex, '$&_');\n}\n\nvar utilInspect = require('./util.inspect');\nvar inspectCustom = utilInspect.custom;\nvar inspectSymbol = isSymbol(inspectCustom) ? inspectCustom : null;\n\nmodule.exports = function inspect_(obj, options, depth, seen) {\n    var opts = options || {};\n\n    if (has(opts, 'quoteStyle') && (opts.quoteStyle !== 'single' && opts.quoteStyle !== 'double')) {\n        throw new TypeError('option \"quoteStyle\" must be \"single\" or \"double\"');\n    }\n    if (\n        has(opts, 'maxStringLength') && (typeof opts.maxStringLength === 'number'\n            ? opts.maxStringLength < 0 && opts.maxStringLength !== Infinity\n            : opts.maxStringLength !== null\n        )\n    ) {\n        throw new TypeError('option \"maxStringLength\", if provided, must be a positive integer, Infinity, or `null`');\n    }\n    var customInspect = has(opts, 'customInspect') ? opts.customInspect : true;\n    if (typeof customInspect !== 'boolean' && customInspect !== 'symbol') {\n        throw new TypeError('option \"customInspect\", if provided, must be `true`, `false`, or `\\'symbol\\'`');\n    }\n\n    if (\n        has(opts, 'indent')\n        && opts.indent !== null\n        && opts.indent !== '\\t'\n        && !(parseInt(opts.indent, 10) === opts.indent && opts.indent > 0)\n    ) {\n        throw new TypeError('option \"indent\" must be \"\\\\t\", an integer > 0, or `null`');\n    }\n    if (has(opts, 'numericSeparator') && typeof opts.numericSeparator !== 'boolean') {\n        throw new TypeError('option \"numericSeparator\", if provided, must be `true` or `false`');\n    }\n    var numericSeparator = opts.numericSeparator;\n\n    if (typeof obj === 'undefined') {\n        return 'undefined';\n    }\n    if (obj === null) {\n        return 'null';\n    }\n    if (typeof obj === 'boolean') {\n        return obj ? 'true' : 'false';\n    }\n\n    if (typeof obj === 'string') {\n        return inspectString(obj, opts);\n    }\n    if (typeof obj === 'number') {\n        if (obj === 0) {\n            return Infinity / obj > 0 ? '0' : '-0';\n        }\n        var str = String(obj);\n        return numericSeparator ? addNumericSeparator(obj, str) : str;\n    }\n    if (typeof obj === 'bigint') {\n        var bigIntStr = String(obj) + 'n';\n        return numericSeparator ? addNumericSeparator(obj, bigIntStr) : bigIntStr;\n    }\n\n    var maxDepth = typeof opts.depth === 'undefined' ? 5 : opts.depth;\n    if (typeof depth === 'undefined') { depth = 0; }\n    if (depth >= maxDepth && maxDepth > 0 && typeof obj === 'object') {\n        return isArray(obj) ? '[Array]' : '[Object]';\n    }\n\n    var indent = getIndent(opts, depth);\n\n    if (typeof seen === 'undefined') {\n        seen = [];\n    } else if (indexOf(seen, obj) >= 0) {\n        return '[Circular]';\n    }\n\n    function inspect(value, from, noIndent) {\n        if (from) {\n            seen = $arrSlice.call(seen);\n            seen.push(from);\n        }\n        if (noIndent) {\n            var newOpts = {\n                depth: opts.depth\n            };\n            if (has(opts, 'quoteStyle')) {\n                newOpts.quoteStyle = opts.quoteStyle;\n            }\n            return inspect_(value, newOpts, depth + 1, seen);\n        }\n        return inspect_(value, opts, depth + 1, seen);\n    }\n\n    if (typeof obj === 'function' && !isRegExp(obj)) { // in older engines, regexes are callable\n        var name = nameOf(obj);\n        var keys = arrObjKeys(obj, inspect);\n        return '[Function' + (name ? ': ' + name : ' (anonymous)') + ']' + (keys.length > 0 ? ' { ' + $join.call(keys, ', ') + ' }' : '');\n    }\n    if (isSymbol(obj)) {\n        var symString = hasShammedSymbols ? $replace.call(String(obj), /^(Symbol\\(.*\\))_[^)]*$/, '$1') : symToString.call(obj);\n        return typeof obj === 'object' && !hasShammedSymbols ? markBoxed(symString) : symString;\n    }\n    if (isElement(obj)) {\n        var s = '<' + $toLowerCase.call(String(obj.nodeName));\n        var attrs = obj.attributes || [];\n        for (var i = 0; i < attrs.length; i++) {\n            s += ' ' + attrs[i].name + '=' + wrapQuotes(quote(attrs[i].value), 'double', opts);\n        }\n        s += '>';\n        if (obj.childNodes && obj.childNodes.length) { s += '...'; }\n        s += '</' + $toLowerCase.call(String(obj.nodeName)) + '>';\n        return s;\n    }\n    if (isArray(obj)) {\n        if (obj.length === 0) { return '[]'; }\n        var xs = arrObjKeys(obj, inspect);\n        if (indent && !singleLineValues(xs)) {\n            return '[' + indentedJoin(xs, indent) + ']';\n        }\n        return '[ ' + $join.call(xs, ', ') + ' ]';\n    }\n    if (isError(obj)) {\n        var parts = arrObjKeys(obj, inspect);\n        if (!('cause' in Error.prototype) && 'cause' in obj && !isEnumerable.call(obj, 'cause')) {\n            return '{ [' + String(obj) + '] ' + $join.call($concat.call('[cause]: ' + inspect(obj.cause), parts), ', ') + ' }';\n        }\n        if (parts.length === 0) { return '[' + String(obj) + ']'; }\n        return '{ [' + String(obj) + '] ' + $join.call(parts, ', ') + ' }';\n    }\n    if (typeof obj === 'object' && customInspect) {\n        if (inspectSymbol && typeof obj[inspectSymbol] === 'function' && utilInspect) {\n            return utilInspect(obj, { depth: maxDepth - depth });\n        } else if (customInspect !== 'symbol' && typeof obj.inspect === 'function') {\n            return obj.inspect();\n        }\n    }\n    if (isMap(obj)) {\n        var mapParts = [];\n        if (mapForEach) {\n            mapForEach.call(obj, function (value, key) {\n                mapParts.push(inspect(key, obj, true) + ' => ' + inspect(value, obj));\n            });\n        }\n        return collectionOf('Map', mapSize.call(obj), mapParts, indent);\n    }\n    if (isSet(obj)) {\n        var setParts = [];\n        if (setForEach) {\n            setForEach.call(obj, function (value) {\n                setParts.push(inspect(value, obj));\n            });\n        }\n        return collectionOf('Set', setSize.call(obj), setParts, indent);\n    }\n    if (isWeakMap(obj)) {\n        return weakCollectionOf('WeakMap');\n    }\n    if (isWeakSet(obj)) {\n        return weakCollectionOf('WeakSet');\n    }\n    if (isWeakRef(obj)) {\n        return weakCollectionOf('WeakRef');\n    }\n    if (isNumber(obj)) {\n        return markBoxed(inspect(Number(obj)));\n    }\n    if (isBigInt(obj)) {\n        return markBoxed(inspect(bigIntValueOf.call(obj)));\n    }\n    if (isBoolean(obj)) {\n        return markBoxed(booleanValueOf.call(obj));\n    }\n    if (isString(obj)) {\n        return markBoxed(inspect(String(obj)));\n    }\n    if (!isDate(obj) && !isRegExp(obj)) {\n        var ys = arrObjKeys(obj, inspect);\n        var isPlainObject = gPO ? gPO(obj) === Object.prototype : obj instanceof Object || obj.constructor === Object;\n        var protoTag = obj instanceof Object ? '' : 'null prototype';\n        var stringTag = !isPlainObject && toStringTag && Object(obj) === obj && toStringTag in obj ? $slice.call(toStr(obj), 8, -1) : protoTag ? 'Object' : '';\n        var constructorTag = isPlainObject || typeof obj.constructor !== 'function' ? '' : obj.constructor.name ? obj.constructor.name + ' ' : '';\n        var tag = constructorTag + (stringTag || protoTag ? '[' + $join.call($concat.call([], stringTag || [], protoTag || []), ': ') + '] ' : '');\n        if (ys.length === 0) { return tag + '{}'; }\n        if (indent) {\n            return tag + '{' + indentedJoin(ys, indent) + '}';\n        }\n        return tag + '{ ' + $join.call(ys, ', ') + ' }';\n    }\n    return String(obj);\n};\n\nfunction wrapQuotes(s, defaultStyle, opts) {\n    var quoteChar = (opts.quoteStyle || defaultStyle) === 'double' ? '\"' : \"'\";\n    return quoteChar + s + quoteChar;\n}\n\nfunction quote(s) {\n    return $replace.call(String(s), /\"/g, '&quot;');\n}\n\nfunction isArray(obj) { return toStr(obj) === '[object Array]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isDate(obj) { return toStr(obj) === '[object Date]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isRegExp(obj) { return toStr(obj) === '[object RegExp]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isError(obj) { return toStr(obj) === '[object Error]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isString(obj) { return toStr(obj) === '[object String]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isNumber(obj) { return toStr(obj) === '[object Number]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isBoolean(obj) { return toStr(obj) === '[object Boolean]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\n\n// Symbol and BigInt do have Symbol.toStringTag by spec, so that can't be used to eliminate false positives\nfunction isSymbol(obj) {\n    if (hasShammedSymbols) {\n        return obj && typeof obj === 'object' && obj instanceof Symbol;\n    }\n    if (typeof obj === 'symbol') {\n        return true;\n    }\n    if (!obj || typeof obj !== 'object' || !symToString) {\n        return false;\n    }\n    try {\n        symToString.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isBigInt(obj) {\n    if (!obj || typeof obj !== 'object' || !bigIntValueOf) {\n        return false;\n    }\n    try {\n        bigIntValueOf.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nvar hasOwn = Object.prototype.hasOwnProperty || function (key) { return key in this; };\nfunction has(obj, key) {\n    return hasOwn.call(obj, key);\n}\n\nfunction toStr(obj) {\n    return objectToString.call(obj);\n}\n\nfunction nameOf(f) {\n    if (f.name) { return f.name; }\n    var m = $match.call(functionToString.call(f), /^function\\s*([\\w$]+)/);\n    if (m) { return m[1]; }\n    return null;\n}\n\nfunction indexOf(xs, x) {\n    if (xs.indexOf) { return xs.indexOf(x); }\n    for (var i = 0, l = xs.length; i < l; i++) {\n        if (xs[i] === x) { return i; }\n    }\n    return -1;\n}\n\nfunction isMap(x) {\n    if (!mapSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        mapSize.call(x);\n        try {\n            setSize.call(x);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof Map; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakMap(x) {\n    if (!weakMapHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakMapHas.call(x, weakMapHas);\n        try {\n            weakSetHas.call(x, weakSetHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakMap; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakRef(x) {\n    if (!weakRefDeref || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakRefDeref.call(x);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isSet(x) {\n    if (!setSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        setSize.call(x);\n        try {\n            mapSize.call(x);\n        } catch (m) {\n            return true;\n        }\n        return x instanceof Set; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakSet(x) {\n    if (!weakSetHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakSetHas.call(x, weakSetHas);\n        try {\n            weakMapHas.call(x, weakMapHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakSet; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isElement(x) {\n    if (!x || typeof x !== 'object') { return false; }\n    if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) {\n        return true;\n    }\n    return typeof x.nodeName === 'string' && typeof x.getAttribute === 'function';\n}\n\nfunction inspectString(str, opts) {\n    if (str.length > opts.maxStringLength) {\n        var remaining = str.length - opts.maxStringLength;\n        var trailer = '... ' + remaining + ' more character' + (remaining > 1 ? 's' : '');\n        return inspectString($slice.call(str, 0, opts.maxStringLength), opts) + trailer;\n    }\n    // eslint-disable-next-line no-control-regex\n    var s = $replace.call($replace.call(str, /(['\\\\])/g, '\\\\$1'), /[\\x00-\\x1f]/g, lowbyte);\n    return wrapQuotes(s, 'single', opts);\n}\n\nfunction lowbyte(c) {\n    var n = c.charCodeAt(0);\n    var x = {\n        8: 'b',\n        9: 't',\n        10: 'n',\n        12: 'f',\n        13: 'r'\n    }[n];\n    if (x) { return '\\\\' + x; }\n    return '\\\\x' + (n < 0x10 ? '0' : '') + $toUpperCase.call(n.toString(16));\n}\n\nfunction markBoxed(str) {\n    return 'Object(' + str + ')';\n}\n\nfunction weakCollectionOf(type) {\n    return type + ' { ? }';\n}\n\nfunction collectionOf(type, size, entries, indent) {\n    var joinedEntries = indent ? indentedJoin(entries, indent) : $join.call(entries, ', ');\n    return type + ' (' + size + ') {' + joinedEntries + '}';\n}\n\nfunction singleLineValues(xs) {\n    for (var i = 0; i < xs.length; i++) {\n        if (indexOf(xs[i], '\\n') >= 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction getIndent(opts, depth) {\n    var baseIndent;\n    if (opts.indent === '\\t') {\n        baseIndent = '\\t';\n    } else if (typeof opts.indent === 'number' && opts.indent > 0) {\n        baseIndent = $join.call(Array(opts.indent + 1), ' ');\n    } else {\n        return null;\n    }\n    return {\n        base: baseIndent,\n        prev: $join.call(Array(depth + 1), baseIndent)\n    };\n}\n\nfunction indentedJoin(xs, indent) {\n    if (xs.length === 0) { return ''; }\n    var lineJoiner = '\\n' + indent.prev + indent.base;\n    return lineJoiner + $join.call(xs, ',' + lineJoiner) + '\\n' + indent.prev;\n}\n\nfunction arrObjKeys(obj, inspect) {\n    var isArr = isArray(obj);\n    var xs = [];\n    if (isArr) {\n        xs.length = obj.length;\n        for (var i = 0; i < obj.length; i++) {\n            xs[i] = has(obj, i) ? inspect(obj[i], obj) : '';\n        }\n    }\n    var syms = typeof gOPS === 'function' ? gOPS(obj) : [];\n    var symMap;\n    if (hasShammedSymbols) {\n        symMap = {};\n        for (var k = 0; k < syms.length; k++) {\n            symMap['$' + syms[k]] = syms[k];\n        }\n    }\n\n    for (var key in obj) { // eslint-disable-line no-restricted-syntax\n        if (!has(obj, key)) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (isArr && String(Number(key)) === key && key < obj.length) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (hasShammedSymbols && symMap['$' + key] instanceof Symbol) {\n            // this is to prevent shammed Symbols, which are stored as strings, from being included in the string key section\n            continue; // eslint-disable-line no-restricted-syntax, no-continue\n        } else if ($test.call(/[^\\w$]/, key)) {\n            xs.push(inspect(key, obj) + ': ' + inspect(obj[key], obj));\n        } else {\n            xs.push(key + ': ' + inspect(obj[key], obj));\n        }\n    }\n    if (typeof gOPS === 'function') {\n        for (var j = 0; j < syms.length; j++) {\n            if (isEnumerable.call(obj, syms[j])) {\n                xs.push('[' + inspect(syms[j]) + ']: ' + inspect(obj[syms[j]], obj));\n            }\n        }\n    }\n    return xs;\n}\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar callBound = require('call-bind/callBound');\nvar inspect = require('object-inspect');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $WeakMap = GetIntrinsic('%WeakMap%', true);\nvar $Map = GetIntrinsic('%Map%', true);\n\nvar $weakMapGet = callBound('WeakMap.prototype.get', true);\nvar $weakMapSet = callBound('WeakMap.prototype.set', true);\nvar $weakMapHas = callBound('WeakMap.prototype.has', true);\nvar $mapGet = callBound('Map.prototype.get', true);\nvar $mapSet = callBound('Map.prototype.set', true);\nvar $mapHas = callBound('Map.prototype.has', true);\n\n/*\n * This function traverses the list returning the node corresponding to the\n * given key.\n *\n * That node is also moved to the head of the list, so that if it's accessed\n * again we don't need to traverse the whole list. By doing so, all the recently\n * used nodes can be accessed relatively quickly.\n */\nvar listGetNode = function (list, key) { // eslint-disable-line consistent-return\n\tfor (var prev = list, curr; (curr = prev.next) !== null; prev = curr) {\n\t\tif (curr.key === key) {\n\t\t\tprev.next = curr.next;\n\t\t\tcurr.next = list.next;\n\t\t\tlist.next = curr; // eslint-disable-line no-param-reassign\n\t\t\treturn curr;\n\t\t}\n\t}\n};\n\nvar listGet = function (objects, key) {\n\tvar node = listGetNode(objects, key);\n\treturn node && node.value;\n};\nvar listSet = function (objects, key, value) {\n\tvar node = listGetNode(objects, key);\n\tif (node) {\n\t\tnode.value = value;\n\t} else {\n\t\t// Prepend the new node to the beginning of the list\n\t\tobjects.next = { // eslint-disable-line no-param-reassign\n\t\t\tkey: key,\n\t\t\tnext: objects.next,\n\t\t\tvalue: value\n\t\t};\n\t}\n};\nvar listHas = function (objects, key) {\n\treturn !!listGetNode(objects, key);\n};\n\nmodule.exports = function getSideChannel() {\n\tvar $wm;\n\tvar $m;\n\tvar $o;\n\tvar channel = {\n\t\tassert: function (key) {\n\t\t\tif (!channel.has(key)) {\n\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\n\t\t\t}\n\t\t},\n\t\tget: function (key) { // eslint-disable-line consistent-return\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif ($wm) {\n\t\t\t\t\treturn $weakMapGet($wm, key);\n\t\t\t\t}\n\t\t\t} else if ($Map) {\n\t\t\t\tif ($m) {\n\t\t\t\t\treturn $mapGet($m, key);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($o) { // eslint-disable-line no-lonely-if\n\t\t\t\t\treturn listGet($o, key);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\thas: function (key) {\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif ($wm) {\n\t\t\t\t\treturn $weakMapHas($wm, key);\n\t\t\t\t}\n\t\t\t} else if ($Map) {\n\t\t\t\tif ($m) {\n\t\t\t\t\treturn $mapHas($m, key);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($o) { // eslint-disable-line no-lonely-if\n\t\t\t\t\treturn listHas($o, key);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tset: function (key, value) {\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif (!$wm) {\n\t\t\t\t\t$wm = new $WeakMap();\n\t\t\t\t}\n\t\t\t\t$weakMapSet($wm, key, value);\n\t\t\t} else if ($Map) {\n\t\t\t\tif (!$m) {\n\t\t\t\t\t$m = new $Map();\n\t\t\t\t}\n\t\t\t\t$mapSet($m, key, value);\n\t\t\t} else {\n\t\t\t\tif (!$o) {\n\t\t\t\t\t/*\n\t\t\t\t\t * Initialize the linked list as an empty node, so that we don't have\n\t\t\t\t\t * to special-case handling of the first node: we can always refer to\n\t\t\t\t\t * it as (previous node).next, instead of something like (list).head\n\t\t\t\t\t */\n\t\t\t\t\t$o = { key: {}, next: null };\n\t\t\t\t}\n\t\t\t\tlistSet($o, key, value);\n\t\t\t}\n\t\t}\n\t};\n\treturn channel;\n};\n", "'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nvar Format = {\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n\nmodule.exports = {\n    'default': Format.RFC3986,\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return String(value);\n        }\n    },\n    RFC1738: Format.RFC1738,\n    RFC3986: Format.RFC3986\n};\n", "'use strict';\n\nvar formats = require('./formats');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    while (queue.length > 1) {\n        var item = queue.pop();\n        var obj = item.obj[item.prop];\n\n        if (isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    /* eslint no-param-reassign: 0 */\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (isArray(target)) {\n            target.push(source);\n        } else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                var targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str, decoder, charset) {\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n};\n\nvar encode = function encode(str, defaultEncoder, charset, kind, format) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    } else if (typeof str !== 'string') {\n        string = String(str);\n    }\n\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D // -\n            || c === 0x2E // .\n            || c === 0x5F // _\n            || c === 0x7E // ~\n            || (c >= 0x30 && c <= 0x39) // 0-9\n            || (c >= 0x41 && c <= 0x5A) // a-z\n            || (c >= 0x61 && c <= 0x7A) // A-Z\n            || (format === formats.RFC1738 && (c === 0x28 || c === 0x29)) // ( )\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        /* eslint operator-linebreak: [2, \"before\"] */\n        out += hexTable[0xF0 | (c >> 18)]\n            + hexTable[0x80 | ((c >> 12) & 0x3F)]\n            + hexTable[0x80 | ((c >> 6) & 0x3F)]\n            + hexTable[0x80 | (c & 0x3F)];\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    compactQueue(queue);\n\n    return value;\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a, b) {\n    return [].concat(a, b);\n};\n\nvar maybeMap = function maybeMap(val, fn) {\n    if (isArray(val)) {\n        var mapped = [];\n        for (var i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    combine: combine,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    maybeMap: maybeMap,\n    merge: merge\n};\n", "'use strict';\n\nvar getSideChannel = require('side-channel');\nvar utils = require('./utils');\nvar formats = require('./formats');\nvar has = Object.prototype.hasOwnProperty;\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) {\n        return prefix + '[]';\n    },\n    comma: 'comma',\n    indices: function indices(prefix, key) {\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) {\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaultFormat = formats['default'];\nvar defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    delimiter: '&',\n    encode: true,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    format: defaultFormat,\n    formatter: formats.formatters[defaultFormat],\n    // deprecated\n    indices: false,\n    serializeDate: function serializeDate(date) {\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar isNonNullishPrimitive = function isNonNullishPrimitive(v) {\n    return typeof v === 'string'\n        || typeof v === 'number'\n        || typeof v === 'boolean'\n        || typeof v === 'symbol'\n        || typeof v === 'bigint';\n};\n\nvar sentinel = {};\n\nvar stringify = function stringify(\n    object,\n    prefix,\n    generateArrayPrefix,\n    commaRoundTrip,\n    strictNullHandling,\n    skipNulls,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    format,\n    formatter,\n    encodeValuesOnly,\n    charset,\n    sideChannel\n) {\n    var obj = object;\n\n    var tmpSc = sideChannel;\n    var step = 0;\n    var findFlag = false;\n    while ((tmpSc = tmpSc.get(sentinel)) !== void undefined && !findFlag) {\n        // Where object last appeared in the ref tree\n        var pos = tmpSc.get(object);\n        step += 1;\n        if (typeof pos !== 'undefined') {\n            if (pos === step) {\n                throw new RangeError('Cyclic object value');\n            } else {\n                findFlag = true; // Break while\n            }\n        }\n        if (typeof tmpSc.get(sentinel) === 'undefined') {\n            step = 0;\n        }\n    }\n\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = utils.maybeMap(obj, function (value) {\n            if (value instanceof Date) {\n                return serializeDate(value);\n            }\n            return value;\n        });\n    }\n\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset, 'key', format) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, 'key', format);\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset, 'value', format))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        // we need to join elements in\n        if (encodeValuesOnly && encoder) {\n            obj = utils.maybeMap(obj, encoder);\n        }\n        objKeys = [{ value: obj.length > 0 ? obj.join(',') || null : void undefined }];\n    } else if (isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    var adjustedPrefix = commaRoundTrip && isArray(obj) && obj.length === 1 ? prefix + '[]' : prefix;\n\n    for (var j = 0; j < objKeys.length; ++j) {\n        var key = objKeys[j];\n        var value = typeof key === 'object' && typeof key.value !== 'undefined' ? key.value : obj[key];\n\n        if (skipNulls && value === null) {\n            continue;\n        }\n\n        var keyPrefix = isArray(obj)\n            ? typeof generateArrayPrefix === 'function' ? generateArrayPrefix(adjustedPrefix, key) : adjustedPrefix\n            : adjustedPrefix + (allowDots ? '.' + key : '[' + key + ']');\n\n        sideChannel.set(object, step);\n        var valueSideChannel = getSideChannel();\n        valueSideChannel.set(sentinel, sideChannel);\n        pushToArray(values, stringify(\n            value,\n            keyPrefix,\n            generateArrayPrefix,\n            commaRoundTrip,\n            strictNullHandling,\n            skipNulls,\n            generateArrayPrefix === 'comma' && encodeValuesOnly && isArray(obj) ? null : encoder,\n            filter,\n            sort,\n            allowDots,\n            serializeDate,\n            format,\n            formatter,\n            encodeValuesOnly,\n            charset,\n            valueSideChannel\n        ));\n    }\n\n    return values;\n};\n\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.encoder !== null && typeof opts.encoder !== 'undefined' && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    var format = formats['default'];\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formats.formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    var formatter = formats.formatters[format];\n\n    var filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        format: format,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = normalizeStringifyOptions(opts);\n\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (opts && opts.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = opts.arrayFormat;\n    } else if (opts && 'indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n    if (opts && 'commaRoundTrip' in opts && typeof opts.commaRoundTrip !== 'boolean') {\n        throw new TypeError('`commaRoundTrip` must be a boolean, or absent');\n    }\n    var commaRoundTrip = generateArrayPrefix === 'comma' && opts && opts.commaRoundTrip;\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (options.sort) {\n        objKeys.sort(options.sort);\n    }\n\n    var sideChannel = getSideChannel();\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        pushToArray(keys, stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            commaRoundTrip,\n            options.strictNullHandling,\n            options.skipNulls,\n            options.encode ? options.encoder : null,\n            options.filter,\n            options.sort,\n            options.allowDots,\n            options.serializeDate,\n            options.format,\n            options.formatter,\n            options.encodeValuesOnly,\n            options.charset,\n            sideChannel\n        ));\n    }\n\n    var joined = keys.join(options.delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        } else {\n            // encodeURIComponent('\u2713')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n", "'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    allowSparse: false,\n    arrayLimit: 20,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    comma: false,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    ignoreQueryPrefix: false,\n    interpretNumericEntities: false,\n    parameterLimit: 1000,\n    parseArrays: true,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n        return String.fromCharCode(parseInt(numberStr, 10));\n    });\n};\n\nvar parseArrayValue = function (val, options) {\n    if (val && typeof val === 'string' && options.comma && val.indexOf(',') > -1) {\n        return val.split(',');\n    }\n\n    return val;\n};\n\n// This is what browsers will submit when the \u2713 character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1, or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the \u2713 character, such as us-ascii.\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('\u2713')\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = { __proto__: null };\n\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n    var i;\n\n    var charset = options.charset;\n    if (options.charsetSentinel) {\n        for (i = 0; i < parts.length; ++i) {\n            if (parts[i].indexOf('utf8=') === 0) {\n                if (parts[i] === charsetSentinel) {\n                    charset = 'utf-8';\n                } else if (parts[i] === isoSentinel) {\n                    charset = 'iso-8859-1';\n                }\n                skipIndex = i;\n                i = parts.length; // The eslint settings do not allow break;\n            }\n        }\n    }\n\n    for (i = 0; i < parts.length; ++i) {\n        if (i === skipIndex) {\n            continue;\n        }\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder, charset, 'key');\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset, 'key');\n            val = utils.maybeMap(\n                parseArrayValue(part.slice(pos + 1), options),\n                function (encodedVal) {\n                    return options.decoder(encodedVal, defaults.decoder, charset, 'value');\n                }\n            );\n        }\n\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n            val = interpretNumericEntities(val);\n        }\n\n        if (part.indexOf('[]=') > -1) {\n            val = isArray(val) ? [val] : val;\n        }\n\n        if (has.call(obj, key)) {\n            obj[key] = utils.combine(obj[key], val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options, valuesParsed) {\n    var leaf = valuesParsed ? val : parseArrayValue(val, options);\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]' && options.parseArrays) {\n            obj = [].concat(leaf);\n        } else {\n            obj = options.plainObjects ? Object.create(null) : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var index = parseInt(cleanRoot, 10);\n            if (!options.parseArrays && cleanRoot === '') {\n                obj = { 0: leaf };\n            } else if (\n                !isNaN(index)\n                && root !== cleanRoot\n                && String(index) === cleanRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else if (cleanRoot !== '__proto__') {\n                obj[cleanRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = options.depth > 0 && brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options, valuesParsed);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n\n    return {\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\n        allowSparse: typeof opts.allowSparse === 'boolean' ? opts.allowSparse : defaults.allowSparse,\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\n        // eslint-disable-next-line no-implicit-coercion, no-extra-parens\n        depth: (typeof opts.depth === 'number' || opts.depth === false) ? +opts.depth : defaults.depth,\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\n        parseArrays: opts.parseArrays !== false,\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (str, opts) {\n    var options = normalizeParseOptions(opts);\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options, typeof str === 'string');\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    if (options.allowSparse === true) {\n        return obj;\n    }\n\n    return utils.compact(obj);\n};\n", "'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n", "/*\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n'use strict';\n\nvar punycode = require('punycode');\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n/*\n * define these here so at least they only have to be\n * compiled once on the first module load.\n */\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n  portPattern = /:[0-9]*$/,\n\n  // Special case for a simple path URL\n  simplePathPattern = /^(\\/\\/?(?!\\/)[^?\\s]*)(\\?[^\\s]*)?$/,\n\n  /*\n   * RFC 2396: characters reserved for delimiting URLs.\n   * We actually just auto-escape these.\n   */\n  delims = [\n    '<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'\n  ],\n\n  // RFC 2396: characters not allowed for various reasons.\n  unwise = [\n    '{', '}', '|', '\\\\', '^', '`'\n  ].concat(delims),\n\n  // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n  autoEscape = ['\\''].concat(unwise),\n  /*\n   * Characters that are never ever allowed in a hostname.\n   * Note that any invalid chars are also handled, but these\n   * are the ones that are *expected* to be seen, so we fast-path\n   * them.\n   */\n  nonHostChars = [\n    '%', '/', '?', ';', '#'\n  ].concat(autoEscape),\n  hostEndingChars = [\n    '/', '?', '#'\n  ],\n  hostnameMaxLen = 255,\n  hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n  hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n  // protocols that can allow \"unsafe\" and \"unwise\" chars.\n  unsafeProtocol = {\n    javascript: true,\n    'javascript:': true\n  },\n  // protocols that never have a hostname.\n  hostlessProtocol = {\n    javascript: true,\n    'javascript:': true\n  },\n  // protocols that always contain a // bit.\n  slashedProtocol = {\n    http: true,\n    https: true,\n    ftp: true,\n    gopher: true,\n    file: true,\n    'http:': true,\n    'https:': true,\n    'ftp:': true,\n    'gopher:': true,\n    'file:': true\n  },\n  querystring = require('qs');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && typeof url === 'object' && url instanceof Url) { return url; }\n\n  var u = new Url();\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function (url, parseQueryString, slashesDenoteHost) {\n  if (typeof url !== 'string') {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  /*\n   * Copy chrome, IE, opera backslash-handling behavior.\n   * Back slashes before the query string get converted to forward slashes\n   * See: https://code.google.com/p/chromium/issues/detail?id=25916\n   */\n  var queryIndex = url.indexOf('?'),\n    splitter = queryIndex !== -1 && queryIndex < url.indexOf('#') ? '?' : '#',\n    uSplit = url.split(splitter),\n    slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  /*\n   * trim before proceeding.\n   * This is to support parse stuff like \"  http://foo.com  \\n\"\n   */\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  /*\n   * figure out if it's got a host\n   * user@server is *always* interpreted as a hostname, and url\n   * resolution will treat //foo/bar as host=foo,path=bar because that's\n   * how the browser resolves relative URLs.\n   */\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@/]+@[^@/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] && (slashes || (proto && !slashedProtocol[proto]))) {\n\n    /*\n     * there's a hostname.\n     * the first instance of /, ?, ;, or # ends the host.\n     *\n     * If there is an @ in the hostname, then non-host chars *are* allowed\n     * to the left of the last @ sign, unless some host-ending character\n     * comes *before* the @-sign.\n     * URLs are obnoxious.\n     *\n     * ex:\n     * http://a@b@c/ => user:a@b host:c\n     * http://a@b?@c => user:a host:c path:/?@c\n     */\n\n    /*\n     * v0.12 TODO(isaacs): This is not quite how Chrome does things.\n     * Review our test case against browsers more comprehensively.\n     */\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) { hostEnd = hec; }\n    }\n\n    /*\n     * at this point, either we have an explicit point where the\n     * auth portion cannot go past, or the last @ char is the decider.\n     */\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      /*\n       * atSign must be in auth portion.\n       * http://a@b/c@d => host:b auth:a path:/c@d\n       */\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    /*\n     * Now we have a portion which is definitely the auth.\n     * Pull that off.\n     */\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) { hostEnd = hec; }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) { hostEnd = rest.length; }\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    /*\n     * we've indicated that there is a hostname,\n     * so even if it's empty, it has to be present.\n     */\n    this.hostname = this.hostname || '';\n\n    /*\n     * if hostname begins with [ and ends with ]\n     * assume that it's an IPv6 address.\n     */\n    var ipv6Hostname = this.hostname[0] === '[' && this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) { continue; }\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              /*\n               * we replace non-ASCII char with a temporary placeholder\n               * we need this to make sure size of hostname is not\n               * broken by replacing non-ASCII by nothing\n               */\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      /*\n       * IDNA Support: Returns a punycoded representation of \"domain\".\n       * It only converts parts of the domain name that\n       * have non-ASCII characters, i.e. it doesn't matter if\n       * you call it with a domain that already is ASCII-only.\n       */\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    /*\n     * strip [ and ] from the hostname\n     * the host field still retains them, though\n     */\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  /*\n   * now rest is set to the post-host stuff.\n   * chop off any delim chars.\n   */\n  if (!unsafeProtocol[lowerProto]) {\n\n    /*\n     * First, make 100% sure that any \"autoEscape\" chars get\n     * escaped, even if encodeURIComponent doesn't think they\n     * need to be.\n     */\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1) { continue; }\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) { this.pathname = rest; }\n  if (slashedProtocol[lowerProto] && this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  // to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  /*\n   * ensure it's an object, and not a string url.\n   * If it's an obj, this is a no-op.\n   * this way, you can call url_format() on strings\n   * to clean up potentially wonky urls.\n   */\n  if (typeof obj === 'string') { obj = urlParse(obj); }\n  if (!(obj instanceof Url)) { return Url.prototype.format.call(obj); }\n  return obj.format();\n}\n\nUrl.prototype.format = function () {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n    pathname = this.pathname || '',\n    hash = this.hash || '',\n    host = false,\n    query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ? this.hostname : '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query && typeof this.query === 'object' && Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') { protocol += ':'; }\n\n  /*\n   * only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n   * unless they had them to begin with.\n   */\n  if (this.slashes || (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') { pathname = '/' + pathname; }\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') { hash = '#' + hash; }\n  if (search && search.charAt(0) !== '?') { search = '?' + search; }\n\n  pathname = pathname.replace(/[?#]/g, function (match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function (relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) { return relative; }\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function (relative) {\n  if (typeof relative === 'string') {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  /*\n   * hash is always overridden, no matter what.\n   * even href=\"\" will remove it.\n   */\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol') { result[rkey] = relative[rkey]; }\n    }\n\n    // urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] && result.hostname && !result.pathname) {\n      result.pathname = '/';\n      result.path = result.pathname;\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    /*\n     * if it's a known url protocol, then changing\n     * the protocol does weird things\n     * first, if it's not file:, then we MUST have a host,\n     * and if there was a path\n     * to begin with, then we MUST have a path.\n     * if it is file:, then the host is dropped,\n     * because that's known to be hostless.\n     * anything else is assumed to be absolute.\n     */\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift())) { }\n      if (!relative.host) { relative.host = ''; }\n      if (!relative.hostname) { relative.hostname = ''; }\n      if (relPath[0] !== '') { relPath.unshift(''); }\n      if (relPath.length < 2) { relPath.unshift(''); }\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = result.pathname && result.pathname.charAt(0) === '/',\n    isRelAbs = relative.host || relative.pathname && relative.pathname.charAt(0) === '/',\n    mustEndAbs = isRelAbs || isSourceAbs || (result.host && relative.pathname),\n    removeAllDots = mustEndAbs,\n    srcPath = result.pathname && result.pathname.split('/') || [],\n    relPath = relative.pathname && relative.pathname.split('/') || [],\n    psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  /*\n   * if the url is a non-slashed url, then relative\n   * links like ../.. should be able\n   * to crawl up to the hostname, as well.  This is strange.\n   * result.protocol has already been set by now.\n   * Later on, put the first path part into the host field.\n   */\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') { srcPath[0] = result.host; } else { srcPath.unshift(result.host); }\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') { relPath[0] = relative.host; } else { relPath.unshift(relative.host); }\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = relative.host || relative.host === '' ? relative.host : result.host;\n    result.hostname = relative.hostname || relative.hostname === '' ? relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    /*\n     * it's relative\n     * throw away the existing file, and take the new path instead.\n     */\n    if (!srcPath) { srcPath = []; }\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (relative.search != null) {\n    /*\n     * just pull out the search.\n     * like href='?foo'.\n     * Put this after the other two cases because it simplifies the booleans\n     */\n    if (psychotic) {\n      result.host = srcPath.shift();\n      result.hostname = result.host;\n      /*\n       * occationaly the auth can get stuck only in host\n       * this especially happens in cases like\n       * url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n       */\n      var authInHost = result.host && result.host.indexOf('@') > 0 ? result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.hostname = authInHost.shift();\n        result.host = result.hostname;\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    // to support http.request\n    if (result.pathname !== null || result.search !== null) {\n      result.path = (result.pathname ? result.pathname : '') + (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    /*\n     * no path at all.  easy.\n     * we've already handled the other stuff above.\n     */\n    result.pathname = null;\n    // to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  /*\n   * if a url ENDs in . or .., then it must get a trailing slash.\n   * however, if it ends in anything else non-slashy,\n   * then it must NOT get a trailing slash.\n   */\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (result.host || relative.host || srcPath.length > 1) && (last === '.' || last === '..') || last === '';\n\n  /*\n   * strip single dots, resolve double dots to parent dir\n   * if the path tries to go above the root, `up` ends up > 0\n   */\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' && (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' || (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = isAbsolute ? '' : srcPath.length ? srcPath.shift() : '';\n    result.host = result.hostname;\n    /*\n     * occationaly the auth can get stuck only in host\n     * this especially happens in cases like\n     * url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n     */\n    var authInHost = result.host && result.host.indexOf('@') > 0 ? result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.hostname = authInHost.shift();\n      result.host = result.hostname;\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (srcPath.length > 0) {\n    result.pathname = srcPath.join('/');\n  } else {\n    result.pathname = null;\n    result.path = null;\n  }\n\n  // to support request.http\n  if (result.pathname !== null || result.search !== null) {\n    result.path = (result.pathname ? result.pathname : '') + (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function () {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) { this.hostname = host; }\n};\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Observable = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n// === Symbol Support ===\nvar hasSymbols = function () {\n  return typeof Symbol === 'function';\n};\n\nvar hasSymbol = function (name) {\n  return hasSymbols() && Boolean(Symbol[name]);\n};\n\nvar getSymbol = function (name) {\n  return hasSymbol(name) ? Symbol[name] : '@@' + name;\n};\n\nif (hasSymbols() && !hasSymbol('observable')) {\n  Symbol.observable = Symbol('observable');\n}\n\nvar SymbolIterator = getSymbol('iterator');\nvar SymbolObservable = getSymbol('observable');\nvar SymbolSpecies = getSymbol('species'); // === Abstract Operations ===\n\nfunction getMethod(obj, key) {\n  var value = obj[key];\n  if (value == null) return undefined;\n  if (typeof value !== 'function') throw new TypeError(value + ' is not a function');\n  return value;\n}\n\nfunction getSpecies(obj) {\n  var ctor = obj.constructor;\n\n  if (ctor !== undefined) {\n    ctor = ctor[SymbolSpecies];\n\n    if (ctor === null) {\n      ctor = undefined;\n    }\n  }\n\n  return ctor !== undefined ? ctor : Observable;\n}\n\nfunction isObservable(x) {\n  return x instanceof Observable; // SPEC: Brand check\n}\n\nfunction hostReportError(e) {\n  if (hostReportError.log) {\n    hostReportError.log(e);\n  } else {\n    setTimeout(function () {\n      throw e;\n    });\n  }\n}\n\nfunction enqueue(fn) {\n  Promise.resolve().then(function () {\n    try {\n      fn();\n    } catch (e) {\n      hostReportError(e);\n    }\n  });\n}\n\nfunction cleanupSubscription(subscription) {\n  var cleanup = subscription._cleanup;\n  if (cleanup === undefined) return;\n  subscription._cleanup = undefined;\n\n  if (!cleanup) {\n    return;\n  }\n\n  try {\n    if (typeof cleanup === 'function') {\n      cleanup();\n    } else {\n      var unsubscribe = getMethod(cleanup, 'unsubscribe');\n\n      if (unsubscribe) {\n        unsubscribe.call(cleanup);\n      }\n    }\n  } catch (e) {\n    hostReportError(e);\n  }\n}\n\nfunction closeSubscription(subscription) {\n  subscription._observer = undefined;\n  subscription._queue = undefined;\n  subscription._state = 'closed';\n}\n\nfunction flushSubscription(subscription) {\n  var queue = subscription._queue;\n\n  if (!queue) {\n    return;\n  }\n\n  subscription._queue = undefined;\n  subscription._state = 'ready';\n\n  for (var i = 0; i < queue.length; ++i) {\n    notifySubscription(subscription, queue[i].type, queue[i].value);\n    if (subscription._state === 'closed') break;\n  }\n}\n\nfunction notifySubscription(subscription, type, value) {\n  subscription._state = 'running';\n  var observer = subscription._observer;\n\n  try {\n    var m = getMethod(observer, type);\n\n    switch (type) {\n      case 'next':\n        if (m) m.call(observer, value);\n        break;\n\n      case 'error':\n        closeSubscription(subscription);\n        if (m) m.call(observer, value);else throw value;\n        break;\n\n      case 'complete':\n        closeSubscription(subscription);\n        if (m) m.call(observer);\n        break;\n    }\n  } catch (e) {\n    hostReportError(e);\n  }\n\n  if (subscription._state === 'closed') cleanupSubscription(subscription);else if (subscription._state === 'running') subscription._state = 'ready';\n}\n\nfunction onNotify(subscription, type, value) {\n  if (subscription._state === 'closed') return;\n\n  if (subscription._state === 'buffering') {\n    subscription._queue.push({\n      type: type,\n      value: value\n    });\n\n    return;\n  }\n\n  if (subscription._state !== 'ready') {\n    subscription._state = 'buffering';\n    subscription._queue = [{\n      type: type,\n      value: value\n    }];\n    enqueue(function () {\n      return flushSubscription(subscription);\n    });\n    return;\n  }\n\n  notifySubscription(subscription, type, value);\n}\n\nvar Subscription =\n/*#__PURE__*/\nfunction () {\n  function Subscription(observer, subscriber) {\n    _classCallCheck(this, Subscription);\n\n    // ASSERT: observer is an object\n    // ASSERT: subscriber is callable\n    this._cleanup = undefined;\n    this._observer = observer;\n    this._queue = undefined;\n    this._state = 'initializing';\n    var subscriptionObserver = new SubscriptionObserver(this);\n\n    try {\n      this._cleanup = subscriber.call(undefined, subscriptionObserver);\n    } catch (e) {\n      subscriptionObserver.error(e);\n    }\n\n    if (this._state === 'initializing') this._state = 'ready';\n  }\n\n  _createClass(Subscription, [{\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      if (this._state !== 'closed') {\n        closeSubscription(this);\n        cleanupSubscription(this);\n      }\n    }\n  }, {\n    key: \"closed\",\n    get: function () {\n      return this._state === 'closed';\n    }\n  }]);\n\n  return Subscription;\n}();\n\nvar SubscriptionObserver =\n/*#__PURE__*/\nfunction () {\n  function SubscriptionObserver(subscription) {\n    _classCallCheck(this, SubscriptionObserver);\n\n    this._subscription = subscription;\n  }\n\n  _createClass(SubscriptionObserver, [{\n    key: \"next\",\n    value: function next(value) {\n      onNotify(this._subscription, 'next', value);\n    }\n  }, {\n    key: \"error\",\n    value: function error(value) {\n      onNotify(this._subscription, 'error', value);\n    }\n  }, {\n    key: \"complete\",\n    value: function complete() {\n      onNotify(this._subscription, 'complete');\n    }\n  }, {\n    key: \"closed\",\n    get: function () {\n      return this._subscription._state === 'closed';\n    }\n  }]);\n\n  return SubscriptionObserver;\n}();\n\nvar Observable =\n/*#__PURE__*/\nfunction () {\n  function Observable(subscriber) {\n    _classCallCheck(this, Observable);\n\n    if (!(this instanceof Observable)) throw new TypeError('Observable cannot be called as a function');\n    if (typeof subscriber !== 'function') throw new TypeError('Observable initializer must be a function');\n    this._subscriber = subscriber;\n  }\n\n  _createClass(Observable, [{\n    key: \"subscribe\",\n    value: function subscribe(observer) {\n      if (typeof observer !== 'object' || observer === null) {\n        observer = {\n          next: observer,\n          error: arguments[1],\n          complete: arguments[2]\n        };\n      }\n\n      return new Subscription(observer, this._subscriber);\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(fn) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        if (typeof fn !== 'function') {\n          reject(new TypeError(fn + ' is not a function'));\n          return;\n        }\n\n        function done() {\n          subscription.unsubscribe();\n          resolve();\n        }\n\n        var subscription = _this.subscribe({\n          next: function (value) {\n            try {\n              fn(value, done);\n            } catch (e) {\n              reject(e);\n              subscription.unsubscribe();\n            }\n          },\n          error: reject,\n          complete: resolve\n        });\n      });\n    }\n  }, {\n    key: \"map\",\n    value: function map(fn) {\n      var _this2 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n      var C = getSpecies(this);\n      return new C(function (observer) {\n        return _this2.subscribe({\n          next: function (value) {\n            try {\n              value = fn(value);\n            } catch (e) {\n              return observer.error(e);\n            }\n\n            observer.next(value);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: \"filter\",\n    value: function filter(fn) {\n      var _this3 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n      var C = getSpecies(this);\n      return new C(function (observer) {\n        return _this3.subscribe({\n          next: function (value) {\n            try {\n              if (!fn(value)) return;\n            } catch (e) {\n              return observer.error(e);\n            }\n\n            observer.next(value);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: \"reduce\",\n    value: function reduce(fn) {\n      var _this4 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n      var C = getSpecies(this);\n      var hasSeed = arguments.length > 1;\n      var hasValue = false;\n      var seed = arguments[1];\n      var acc = seed;\n      return new C(function (observer) {\n        return _this4.subscribe({\n          next: function (value) {\n            var first = !hasValue;\n            hasValue = true;\n\n            if (!first || hasSeed) {\n              try {\n                acc = fn(acc, value);\n              } catch (e) {\n                return observer.error(e);\n              }\n            } else {\n              acc = value;\n            }\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            if (!hasValue && !hasSeed) return observer.error(new TypeError('Cannot reduce an empty sequence'));\n            observer.next(acc);\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: \"concat\",\n    value: function concat() {\n      var _this5 = this;\n\n      for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n        sources[_key] = arguments[_key];\n      }\n\n      var C = getSpecies(this);\n      return new C(function (observer) {\n        var subscription;\n        var index = 0;\n\n        function startNext(next) {\n          subscription = next.subscribe({\n            next: function (v) {\n              observer.next(v);\n            },\n            error: function (e) {\n              observer.error(e);\n            },\n            complete: function () {\n              if (index === sources.length) {\n                subscription = undefined;\n                observer.complete();\n              } else {\n                startNext(C.from(sources[index++]));\n              }\n            }\n          });\n        }\n\n        startNext(_this5);\n        return function () {\n          if (subscription) {\n            subscription.unsubscribe();\n            subscription = undefined;\n          }\n        };\n      });\n    }\n  }, {\n    key: \"flatMap\",\n    value: function flatMap(fn) {\n      var _this6 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n      var C = getSpecies(this);\n      return new C(function (observer) {\n        var subscriptions = [];\n\n        var outer = _this6.subscribe({\n          next: function (value) {\n            if (fn) {\n              try {\n                value = fn(value);\n              } catch (e) {\n                return observer.error(e);\n              }\n            }\n\n            var inner = C.from(value).subscribe({\n              next: function (value) {\n                observer.next(value);\n              },\n              error: function (e) {\n                observer.error(e);\n              },\n              complete: function () {\n                var i = subscriptions.indexOf(inner);\n                if (i >= 0) subscriptions.splice(i, 1);\n                completeIfDone();\n              }\n            });\n            subscriptions.push(inner);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            completeIfDone();\n          }\n        });\n\n        function completeIfDone() {\n          if (outer.closed && subscriptions.length === 0) observer.complete();\n        }\n\n        return function () {\n          subscriptions.forEach(function (s) {\n            return s.unsubscribe();\n          });\n          outer.unsubscribe();\n        };\n      });\n    }\n  }, {\n    key: SymbolObservable,\n    value: function () {\n      return this;\n    }\n  }], [{\n    key: \"from\",\n    value: function from(x) {\n      var C = typeof this === 'function' ? this : Observable;\n      if (x == null) throw new TypeError(x + ' is not an object');\n      var method = getMethod(x, SymbolObservable);\n\n      if (method) {\n        var observable = method.call(x);\n        if (Object(observable) !== observable) throw new TypeError(observable + ' is not an object');\n        if (isObservable(observable) && observable.constructor === C) return observable;\n        return new C(function (observer) {\n          return observable.subscribe(observer);\n        });\n      }\n\n      if (hasSymbol('iterator')) {\n        method = getMethod(x, SymbolIterator);\n\n        if (method) {\n          return new C(function (observer) {\n            enqueue(function () {\n              if (observer.closed) return;\n              var _iteratorNormalCompletion = true;\n              var _didIteratorError = false;\n              var _iteratorError = undefined;\n\n              try {\n                for (var _iterator = method.call(x)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                  var _item = _step.value;\n                  observer.next(_item);\n                  if (observer.closed) return;\n                }\n              } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion && _iterator.return != null) {\n                    _iterator.return();\n                  }\n                } finally {\n                  if (_didIteratorError) {\n                    throw _iteratorError;\n                  }\n                }\n              }\n\n              observer.complete();\n            });\n          });\n        }\n      }\n\n      if (Array.isArray(x)) {\n        return new C(function (observer) {\n          enqueue(function () {\n            if (observer.closed) return;\n\n            for (var i = 0; i < x.length; ++i) {\n              observer.next(x[i]);\n              if (observer.closed) return;\n            }\n\n            observer.complete();\n          });\n        });\n      }\n\n      throw new TypeError(x + ' is not observable');\n    }\n  }, {\n    key: \"of\",\n    value: function of() {\n      for (var _len2 = arguments.length, items = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        items[_key2] = arguments[_key2];\n      }\n\n      var C = typeof this === 'function' ? this : Observable;\n      return new C(function (observer) {\n        enqueue(function () {\n          if (observer.closed) return;\n\n          for (var i = 0; i < items.length; ++i) {\n            observer.next(items[i]);\n            if (observer.closed) return;\n          }\n\n          observer.complete();\n        });\n      });\n    }\n  }, {\n    key: SymbolSpecies,\n    get: function () {\n      return this;\n    }\n  }]);\n\n  return Observable;\n}();\n\nexports.Observable = Observable;\n\nif (hasSymbols()) {\n  Object.defineProperty(Observable, Symbol('extensions'), {\n    value: {\n      symbol: SymbolObservable,\n      hostReportError: hostReportError\n    },\n    configurable: true\n  });\n}", "module.exports = require('./lib/Observable.js').Observable;\n", "import { SourceData } from \"@aws-sdk/types\";\n\nexport function isEmptyData(data: SourceData): boolean {\n  if (typeof data === \"string\") {\n    return data.length === 0;\n  }\n\n  return data.byteLength === 0;\n}\n", "export const SHA_256_HASH: { name: \"SHA-256\" } = { name: \"SHA-256\" };\n\nexport const SHA_256_HMAC_ALGO: { name: \"HMAC\"; hash: { name: \"SHA-256\" } } = {\n  name: \"HMAC\",\n  hash: SHA_256_HASH\n};\n\nexport const EMPTY_DATA_SHA_256 = new Uint8Array([\n  227,\n  176,\n  196,\n  66,\n  152,\n  252,\n  28,\n  20,\n  154,\n  251,\n  244,\n  200,\n  153,\n  111,\n  185,\n  36,\n  39,\n  174,\n  65,\n  228,\n  100,\n  155,\n  147,\n  76,\n  164,\n  149,\n  153,\n  27,\n  120,\n  82,\n  184,\n  85\n]);\n", "/**\n * Converts a JS string from its native UCS-2/UTF-16 representation into a\n * Uint8Array of the bytes used to represent the equivalent characters in UTF-8.\n *\n * Cribbed from the `goog.crypt.stringToUtf8ByteArray` function in the Google\n * Closure library, though updated to use typed arrays.\n */\nexport const fromUtf8 = (input: string): Uint8Array => {\n  const bytes: Array<number> = [];\n  for (let i = 0, len = input.length; i < len; i++) {\n    const value = input.charCodeAt(i);\n    if (value < 0x80) {\n      bytes.push(value);\n    } else if (value < 0x800) {\n      bytes.push((value >> 6) | 0b11000000, (value & 0b111111) | 0b10000000);\n    } else if (i + 1 < input.length && (value & 0xfc00) === 0xd800 && (input.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {\n      const surrogatePair = 0x10000 + ((value & 0b1111111111) << 10) + (input.charCodeAt(++i) & 0b1111111111);\n      bytes.push(\n        (surrogatePair >> 18) | 0b11110000,\n        ((surrogatePair >> 12) & 0b111111) | 0b10000000,\n        ((surrogatePair >> 6) & 0b111111) | 0b10000000,\n        (surrogatePair & 0b111111) | 0b10000000\n      );\n    } else {\n      bytes.push((value >> 12) | 0b11100000, ((value >> 6) & 0b111111) | 0b10000000, (value & 0b111111) | 0b10000000);\n    }\n  }\n\n  return Uint8Array.from(bytes);\n};\n\n/**\n * Converts a typed array of bytes containing UTF-8 data into a native JS\n * string.\n *\n * Partly cribbed from the `goog.crypt.utf8ByteArrayToString` function in the\n * Google Closure library, though updated to use typed arrays and to better\n * handle astral plane code points.\n */\nexport const toUtf8 = (input: Uint8Array): string => {\n  let decoded = \"\";\n  for (let i = 0, len = input.length; i < len; i++) {\n    const byte = input[i];\n    if (byte < 0x80) {\n      decoded += String.fromCharCode(byte);\n    } else if (0b11000000 <= byte && byte < 0b11100000) {\n      const nextByte = input[++i];\n      decoded += String.fromCharCode(((byte & 0b11111) << 6) | (nextByte & 0b111111));\n    } else if (0b11110000 <= byte && byte < 0b101101101) {\n      const surrogatePair = [byte, input[++i], input[++i], input[++i]];\n      const encoded = \"%\" + surrogatePair.map((byteValue) => byteValue.toString(16)).join(\"%\");\n      decoded += decodeURIComponent(encoded);\n    } else {\n      decoded += String.fromCharCode(\n        ((byte & 0b1111) << 12) | ((input[++i] & 0b111111) << 6) | (input[++i] & 0b111111)\n      );\n    }\n  }\n\n  return decoded;\n};\n", "/**\n * A declaration of the global TextEncoder and TextDecoder constructors.\n *\n * @see https://encoding.spec.whatwg.org/\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nnamespace Encoding {\n  interface TextDecoderOptions {\n    fatal?: boolean;\n    ignoreBOM?: boolean;\n  }\n\n  interface TextDecodeOptions {\n    stream?: boolean;\n  }\n\n  interface TextDecoder {\n    readonly encoding: string;\n    readonly fatal: boolean;\n    readonly ignoreBOM: boolean;\n    decode(input?: ArrayBuffer | ArrayBufferView, options?: TextDecodeOptions): string;\n  }\n\n  export interface TextDecoderConstructor {\n    new (label?: string, options?: TextDecoderOptions): TextDecoder;\n  }\n\n  interface TextEncoder {\n    readonly encoding: \"utf-8\";\n    encode(input?: string): Uint8Array;\n  }\n\n  export interface TextEncoderConstructor {\n    new (): TextEncoder;\n  }\n}\n\ndeclare const TextDecoder: Encoding.TextDecoderConstructor;\n\ndeclare const TextEncoder: Encoding.TextEncoderConstructor;\n\nexport function fromUtf8(input: string): Uint8Array {\n  return new TextEncoder().encode(input);\n}\n\nexport function toUtf8(input: Uint8Array): string {\n  return new TextDecoder(\"utf-8\").decode(input);\n}\n", "import { fromUtf8 as jsFromUtf8, toUtf8 as jsToUtf8 } from \"./pureJs\";\nimport { fromUtf8 as textEncoderFromUtf8, toUtf8 as textEncoderToUtf8 } from \"./whatwgEncodingApi\";\n\ndeclare const TextDecoder: Function | undefined;\ndeclare const TextEncoder: Function | undefined;\n\nexport const fromUtf8 = (input: string): Uint8Array =>\n  typeof TextEncoder === \"function\" ? textEncoderFromUtf8(input) : jsFromUtf8(input);\n\nexport const toUtf8 = (input: Uint8Array): string =>\n  typeof TextDecoder === \"function\" ? textEncoderToUtf8(input) : jsToUtf8(input);\n", "const fallbackWindow = {};\nexport function locateWindow() {\n    if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else if (typeof self !== \"undefined\") {\n        return self;\n    }\n    return fallbackWindow;\n}\n", "import { isEmptyData } from \"./isEmptyData\";\nimport { SHA_256_HMAC_ALGO } from \"./constants\";\nimport { Hash, SourceData } from \"@aws-sdk/types\";\nimport { fromUtf8 } from \"@aws-sdk/util-utf8-browser\";\nimport { CryptoOperation, Key, MsWindow } from \"@aws-crypto/ie11-detection\";\nimport { locateWindow } from \"@aws-sdk/util-locate-window\";\n\nexport class Sha256 implements Hash {\n  private operation: Promise<CryptoOperation>;\n\n  constructor(secret?: SourceData) {\n    if (secret) {\n      this.operation = getKeyPromise(secret).then(keyData =>\n        (locateWindow() as MsWindow).msCrypto.subtle.sign(\n          SHA_256_HMAC_ALGO,\n          keyData\n        )\n      );\n      this.operation.catch(() => {});\n    } else {\n      this.operation = Promise.resolve(\n        (locateWindow() as MsWindow).msCrypto.subtle.digest(\"SHA-256\")\n      );\n    }\n  }\n\n  update(toHash: SourceData): void {\n    if (isEmptyData(toHash)) {\n      return;\n    }\n\n    this.operation = this.operation.then(operation => {\n      operation.onerror = () => {\n        this.operation = Promise.reject(\n          new Error(\"Error encountered updating hash\")\n        );\n      };\n      operation.process(toArrayBufferView(toHash));\n\n      return operation;\n    });\n    this.operation.catch(() => {});\n  }\n\n  digest(): Promise<Uint8Array> {\n    return this.operation.then<Uint8Array>(\n      operation =>\n        new Promise((resolve, reject) => {\n          operation.onerror = () => {\n            reject(new Error(\"Error encountered finalizing hash\"));\n          };\n          operation.oncomplete = () => {\n            if (operation.result) {\n              resolve(new Uint8Array(operation.result));\n            }\n            reject(new Error(\"Error encountered finalizing hash\"));\n          };\n\n          operation.finish();\n        })\n    );\n  }\n}\n\nfunction getKeyPromise(secret: SourceData): Promise<Key> {\n  return new Promise((resolve, reject) => {\n    const keyOperation = (locateWindow() as MsWindow).msCrypto.subtle.importKey(\n      \"raw\",\n      toArrayBufferView(secret),\n      SHA_256_HMAC_ALGO,\n      false,\n      [\"sign\"]\n    );\n\n    keyOperation.oncomplete = () => {\n      if (keyOperation.result) {\n        resolve(keyOperation.result);\n      }\n\n      reject(new Error(\"ImportKey completed without importing key.\"));\n    };\n    keyOperation.onerror = () => {\n      reject(new Error(\"ImportKey failed to import key.\"));\n    };\n  });\n}\n\nfunction toArrayBufferView(data: SourceData): Uint8Array {\n  if (typeof data === \"string\") {\n    return fromUtf8(data);\n  }\n\n  if (ArrayBuffer.isView(data)) {\n    return new Uint8Array(\n      data.buffer,\n      data.byteOffset,\n      data.byteLength / Uint8Array.BYTES_PER_ELEMENT\n    );\n  }\n\n  return new Uint8Array(data);\n}\n", "// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { SourceData } from \"@aws-sdk/types\";\nimport { fromUtf8 as fromUtf8Browser } from \"@aws-sdk/util-utf8-browser\";\n\n// Quick polyfill\nconst fromUtf8 =\n  typeof Buffer !== \"undefined\" && Buffer.from\n    ? (input: string) => Buffer.from(input, \"utf8\")\n    : fromUtf8Browser;\n\nexport function convertToBuffer(data: SourceData): Uint8Array {\n  // Already a Uint8, do nothing\n  if (data instanceof Uint8Array) return data;\n\n  if (typeof data === \"string\") {\n    return fromUtf8(data);\n  }\n\n  if (ArrayBuffer.isView(data)) {\n    return new Uint8Array(\n      data.buffer,\n      data.byteOffset,\n      data.byteLength / Uint8Array.BYTES_PER_ELEMENT\n    );\n  }\n\n  return new Uint8Array(data);\n}\n", "// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { SourceData } from \"@aws-sdk/types\";\n\nexport function isEmptyData(data: SourceData): boolean {\n  if (typeof data === \"string\") {\n    return data.length === 0;\n  }\n\n  return data.byteLength === 0;\n}\n", "// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nexport function numToUint8(num: number) {\n  return new Uint8Array([\n    (num & 0xff000000) >> 24,\n    (num & 0x00ff0000) >> 16,\n    (num & 0x0000ff00) >> 8,\n    num & 0x000000ff,\n  ]);\n}\n", "// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\n// IE 11 does not support Array.from, so we do it manually\nexport function uint32ArrayFrom(a_lookUpTable: Array<number>): Uint32Array {\n  if (!Array.from) {\n    const return_array = new Uint32Array(a_lookUpTable.length)\n    let a_index = 0\n    while (a_index < a_lookUpTable.length) {\n      return_array[a_index] = a_lookUpTable[a_index]\n    }\n    return return_array\n  }\n  return Uint32Array.from(a_lookUpTable)\n}\n", "// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nexport { convertToBuffer } from \"./convertToBuffer\";\nexport { isEmptyData } from \"./isEmptyData\";\nexport { numToUint8 } from \"./numToUint8\";\nexport {uint32ArrayFrom} from './uint32ArrayFrom';\n", "import { Hash, SourceData } from \"@aws-sdk/types\";\nimport { isEmptyData, convertToBuffer } from \"@aws-crypto/util\";\nimport {\n  EMPTY_DATA_SHA_256,\n  SHA_256_HASH,\n  SHA_256_HMAC_ALGO,\n} from \"./constants\";\nimport { locateWindow } from \"@aws-sdk/util-locate-window\";\n\nexport class Sha256 implements Hash {\n  private readonly key: Promise<CryptoKey> | undefined;\n  private toHash: Uint8Array = new Uint8Array(0);\n\n  constructor(secret?: SourceData) {\n    if (secret !== void 0) {\n      this.key = new Promise((resolve, reject) => {\n        locateWindow()\n          .crypto.subtle.importKey(\n            \"raw\",\n            convertToBuffer(secret),\n            SHA_256_HMAC_ALGO,\n            false,\n            [\"sign\"]\n          )\n          .then(resolve, reject);\n      });\n      this.key.catch(() => {});\n    }\n  }\n\n  update(data: SourceData): void {\n    if (isEmptyData(data)) {\n      return;\n    }\n\n    const update = convertToBuffer(data);\n    const typedArray = new Uint8Array(\n      this.toHash.byteLength + update.byteLength\n    );\n    typedArray.set(this.toHash, 0);\n    typedArray.set(update, this.toHash.byteLength);\n    this.toHash = typedArray;\n  }\n\n  digest(): Promise<Uint8Array> {\n    if (this.key) {\n      return this.key.then((key) =>\n        locateWindow()\n          .crypto.subtle.sign(SHA_256_HMAC_ALGO, key, this.toHash)\n          .then((data) => new Uint8Array(data))\n      );\n    }\n\n    if (isEmptyData(this.toHash)) {\n      return Promise.resolve(EMPTY_DATA_SHA_256);\n    }\n\n    return Promise.resolve()\n      .then(() =>\n        locateWindow().crypto.subtle.digest(SHA_256_HASH, this.toHash)\n      )\n      .then((data) => Promise.resolve(new Uint8Array(data)));\n  }\n}\n", "/**\n * @internal\n */\nexport const BLOCK_SIZE: number = 64;\n\n/**\n * @internal\n */\nexport const DIGEST_LENGTH: number = 32;\n\n/**\n * @internal\n */\nexport const KEY = new Uint32Array([\n  0x428a2f98,\n  0x71374491,\n  0xb5c0fbcf,\n  0xe9b5dba5,\n  0x3956c25b,\n  0x59f111f1,\n  0x923f82a4,\n  0xab1c5ed5,\n  0xd807aa98,\n  0x12835b01,\n  0x243185be,\n  0x550c7dc3,\n  0x72be5d74,\n  0x80deb1fe,\n  0x9bdc06a7,\n  0xc19bf174,\n  0xe49b69c1,\n  0xefbe4786,\n  0x0fc19dc6,\n  0x240ca1cc,\n  0x2de92c6f,\n  0x4a7484aa,\n  0x5cb0a9dc,\n  0x76f988da,\n  0x983e5152,\n  0xa831c66d,\n  0xb00327c8,\n  0xbf597fc7,\n  0xc6e00bf3,\n  0xd5a79147,\n  0x06ca6351,\n  0x14292967,\n  0x27b70a85,\n  0x2e1b2138,\n  0x4d2c6dfc,\n  0x53380d13,\n  0x650a7354,\n  0x766a0abb,\n  0x81c2c92e,\n  0x92722c85,\n  0xa2bfe8a1,\n  0xa81a664b,\n  0xc24b8b70,\n  0xc76c51a3,\n  0xd192e819,\n  0xd6990624,\n  0xf40e3585,\n  0x106aa070,\n  0x19a4c116,\n  0x1e376c08,\n  0x2748774c,\n  0x34b0bcb5,\n  0x391c0cb3,\n  0x4ed8aa4a,\n  0x5b9cca4f,\n  0x682e6ff3,\n  0x748f82ee,\n  0x78a5636f,\n  0x84c87814,\n  0x8cc70208,\n  0x90befffa,\n  0xa4506ceb,\n  0xbef9a3f7,\n  0xc67178f2\n]);\n\n/**\n * @internal\n */\nexport const INIT = [\n  0x6a09e667,\n  0xbb67ae85,\n  0x3c6ef372,\n  0xa54ff53a,\n  0x510e527f,\n  0x9b05688c,\n  0x1f83d9ab,\n  0x5be0cd19\n];\n\n/**\n * @internal\n */\nexport const MAX_HASHABLE_LENGTH = 2 ** 53 - 1;\n", "import {\n  BLOCK_SIZE,\n  DIGEST_LENGTH,\n  INIT,\n  KEY,\n  MAX_HASHABLE_LENGTH\n} from \"./constants\";\n\n/**\n * @internal\n */\nexport class RawSha256 {\n  private state: Int32Array = Int32Array.from(INIT);\n  private temp: Int32Array = new Int32Array(64);\n  private buffer: Uint8Array = new Uint8Array(64);\n  private bufferLength: number = 0;\n  private bytesHashed: number = 0;\n\n  /**\n   * @internal\n   */\n  finished: boolean = false;\n\n  update(data: Uint8Array): void {\n    if (this.finished) {\n      throw new Error(\"Attempted to update an already finished hash.\");\n    }\n\n    let position = 0;\n    let { byteLength } = data;\n    this.bytesHashed += byteLength;\n\n    if (this.bytesHashed * 8 > MAX_HASHABLE_LENGTH) {\n      throw new Error(\"Cannot hash more than 2^53 - 1 bits\");\n    }\n\n    while (byteLength > 0) {\n      this.buffer[this.bufferLength++] = data[position++];\n      byteLength--;\n\n      if (this.bufferLength === BLOCK_SIZE) {\n        this.hashBuffer();\n        this.bufferLength = 0;\n      }\n    }\n  }\n\n  digest(): Uint8Array {\n    if (!this.finished) {\n      const bitsHashed = this.bytesHashed * 8;\n      const bufferView = new DataView(\n        this.buffer.buffer,\n        this.buffer.byteOffset,\n        this.buffer.byteLength\n      );\n\n      const undecoratedLength = this.bufferLength;\n      bufferView.setUint8(this.bufferLength++, 0x80);\n\n      // Ensure the final block has enough room for the hashed length\n      if (undecoratedLength % BLOCK_SIZE >= BLOCK_SIZE - 8) {\n        for (let i = this.bufferLength; i < BLOCK_SIZE; i++) {\n          bufferView.setUint8(i, 0);\n        }\n        this.hashBuffer();\n        this.bufferLength = 0;\n      }\n\n      for (let i = this.bufferLength; i < BLOCK_SIZE - 8; i++) {\n        bufferView.setUint8(i, 0);\n      }\n      bufferView.setUint32(\n        BLOCK_SIZE - 8,\n        Math.floor(bitsHashed / 0x100000000),\n        true\n      );\n      bufferView.setUint32(BLOCK_SIZE - 4, bitsHashed);\n\n      this.hashBuffer();\n\n      this.finished = true;\n    }\n\n    // The value in state is little-endian rather than big-endian, so flip\n    // each word into a new Uint8Array\n    const out = new Uint8Array(DIGEST_LENGTH);\n    for (let i = 0; i < 8; i++) {\n      out[i * 4] = (this.state[i] >>> 24) & 0xff;\n      out[i * 4 + 1] = (this.state[i] >>> 16) & 0xff;\n      out[i * 4 + 2] = (this.state[i] >>> 8) & 0xff;\n      out[i * 4 + 3] = (this.state[i] >>> 0) & 0xff;\n    }\n\n    return out;\n  }\n\n  private hashBuffer(): void {\n    const { buffer, state } = this;\n\n    let state0 = state[0],\n      state1 = state[1],\n      state2 = state[2],\n      state3 = state[3],\n      state4 = state[4],\n      state5 = state[5],\n      state6 = state[6],\n      state7 = state[7];\n\n    for (let i = 0; i < BLOCK_SIZE; i++) {\n      if (i < 16) {\n        this.temp[i] =\n          ((buffer[i * 4] & 0xff) << 24) |\n          ((buffer[i * 4 + 1] & 0xff) << 16) |\n          ((buffer[i * 4 + 2] & 0xff) << 8) |\n          (buffer[i * 4 + 3] & 0xff);\n      } else {\n        let u = this.temp[i - 2];\n        const t1 =\n          ((u >>> 17) | (u << 15)) ^ ((u >>> 19) | (u << 13)) ^ (u >>> 10);\n\n        u = this.temp[i - 15];\n        const t2 =\n          ((u >>> 7) | (u << 25)) ^ ((u >>> 18) | (u << 14)) ^ (u >>> 3);\n\n        this.temp[i] =\n          ((t1 + this.temp[i - 7]) | 0) + ((t2 + this.temp[i - 16]) | 0);\n      }\n\n      const t1 =\n        ((((((state4 >>> 6) | (state4 << 26)) ^\n          ((state4 >>> 11) | (state4 << 21)) ^\n          ((state4 >>> 25) | (state4 << 7))) +\n          ((state4 & state5) ^ (~state4 & state6))) |\n          0) +\n          ((state7 + ((KEY[i] + this.temp[i]) | 0)) | 0)) |\n        0;\n\n      const t2 =\n        ((((state0 >>> 2) | (state0 << 30)) ^\n          ((state0 >>> 13) | (state0 << 19)) ^\n          ((state0 >>> 22) | (state0 << 10))) +\n          ((state0 & state1) ^ (state0 & state2) ^ (state1 & state2))) |\n        0;\n\n      state7 = state6;\n      state6 = state5;\n      state5 = state4;\n      state4 = (state3 + t1) | 0;\n      state3 = state2;\n      state2 = state1;\n      state1 = state0;\n      state0 = (t1 + t2) | 0;\n    }\n\n    state[0] += state0;\n    state[1] += state1;\n    state[2] += state2;\n    state[3] += state3;\n    state[4] += state4;\n    state[5] += state5;\n    state[6] += state6;\n    state[7] += state7;\n  }\n}\n", "import { BLOCK_SIZE } from \"./constants\";\nimport { RawSha256 } from \"./RawSha256\";\nimport { Hash, SourceData } from \"@aws-sdk/types\";\nimport { isEmptyData, convertToBuffer } from \"@aws-crypto/util\";\n\nexport class Sha256 implements Hash {\n  private readonly hash = new RawSha256();\n  private readonly outer?: RawSha256;\n  private error: any;\n\n  constructor(secret?: SourceData) {\n    if (secret) {\n      this.outer = new RawSha256();\n      const inner = bufferFromSecret(secret);\n      const outer = new Uint8Array(BLOCK_SIZE);\n      outer.set(inner);\n\n      for (let i = 0; i < BLOCK_SIZE; i++) {\n        inner[i] ^= 0x36;\n        outer[i] ^= 0x5c;\n      }\n\n      this.hash.update(inner);\n      this.outer.update(outer);\n\n      // overwrite the copied key in memory\n      for (let i = 0; i < inner.byteLength; i++) {\n        inner[i] = 0;\n      }\n    }\n  }\n\n  update(toHash: SourceData): void {\n    if (isEmptyData(toHash) || this.error) {\n      return;\n    }\n\n    try {\n      this.hash.update(convertToBuffer(toHash));\n    } catch (e) {\n      this.error = e;\n    }\n  }\n\n  /* This synchronous method keeps compatibility\n   * with the v2 aws-sdk.\n   */\n  digestSync(): Uint8Array {\n    if (this.error) {\n      throw this.error;\n    }\n\n    if (this.outer) {\n      if (!this.outer.finished) {\n        this.outer.update(this.hash.digest());\n      }\n\n      return this.outer.digest();\n    }\n\n    return this.hash.digest();\n  }\n\n  /* The underlying digest method here is synchronous.\n   * To keep the same interface with the other hash functions\n   * the default is to expose this as an async method.\n   * However, it can sometimes be useful to have a sync method.\n   */\n  async digest(): Promise<Uint8Array> {\n    return this.digestSync();\n  }\n}\n\nfunction bufferFromSecret(secret: SourceData): Uint8Array {\n  let input = convertToBuffer(secret);\n\n  if (input.byteLength > BLOCK_SIZE) {\n    const bufferHash = new RawSha256();\n    bufferHash.update(input);\n    input = bufferHash.digest();\n  }\n\n  const buffer = new Uint8Array(BLOCK_SIZE);\n  buffer.set(input);\n  return buffer;\n}\n", "export * from \"./jsSha256\";\n", "type SubtleCryptoMethod =\n  | \"decrypt\"\n  | \"digest\"\n  | \"encrypt\"\n  | \"exportKey\"\n  | \"generateKey\"\n  | \"importKey\"\n  | \"sign\"\n  | \"verify\";\n\nconst subtleCryptoMethods: Array<SubtleCryptoMethod> = [\n  \"decrypt\",\n  \"digest\",\n  \"encrypt\",\n  \"exportKey\",\n  \"generateKey\",\n  \"importKey\",\n  \"sign\",\n  \"verify\"\n];\n\nexport function supportsWebCrypto(window: Window): boolean {\n  if (\n    supportsSecureRandom(window) &&\n    typeof window.crypto.subtle === \"object\"\n  ) {\n    const { subtle } = window.crypto;\n\n    return supportsSubtleCrypto(subtle);\n  }\n\n  return false;\n}\n\nexport function supportsSecureRandom(window: Window): boolean {\n  if (typeof window === \"object\" && typeof window.crypto === \"object\") {\n    const { getRandomValues } = window.crypto;\n\n    return typeof getRandomValues === \"function\";\n  }\n\n  return false;\n}\n\nexport function supportsSubtleCrypto(subtle: SubtleCrypto) {\n  return (\n    subtle &&\n    subtleCryptoMethods.every(\n      methodName => typeof subtle[methodName] === \"function\"\n    )\n  );\n}\n\nexport async function supportsZeroByteGCM(subtle: SubtleCrypto) {\n  if (!supportsSubtleCrypto(subtle)) return false;\n  try {\n    const key = await subtle.generateKey(\n      { name: \"AES-GCM\", length: 128 },\n      false,\n      [\"encrypt\"]\n    );\n    const zeroByteAuthTag = await subtle.encrypt(\n      {\n        name: \"AES-GCM\",\n        iv: new Uint8Array(Array(12)),\n        additionalData: new Uint8Array(Array(16)),\n        tagLength: 128\n      },\n      key,\n      new Uint8Array(0)\n    );\n    return zeroByteAuthTag.byteLength === 16;\n  } catch {\n    return false;\n  }\n}\n", "export * from \"./supportsWebCrypto\";\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=CryptoOperation.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=Key.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=KeyOperation.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=MsSubtleCrypto.js.map", "import { MsSubtleCrypto } from \"./MsSubtleCrypto\";\n\ntype SubtleCryptoMethod =\n  | \"decrypt\"\n  | \"digest\"\n  | \"encrypt\"\n  | \"exportKey\"\n  | \"generateKey\"\n  | \"importKey\"\n  | \"sign\"\n  | \"verify\";\n\nconst msSubtleCryptoMethods: Array<SubtleCryptoMethod> = [\n  \"decrypt\",\n  \"digest\",\n  \"encrypt\",\n  \"exportKey\",\n  \"generateKey\",\n  \"importKey\",\n  \"sign\",\n  \"verify\"\n];\n\n/**\n * The value accessible as `window.msCrypto` in Internet Explorer 11.\n */\nexport interface MsCrypto {\n  getRandomValues: (toFill: Uint8Array) => void;\n  subtle: MsSubtleCrypto;\n}\n\n/**\n * The `window` object in Internet Explorer 11. This interface does not\n * exhaustively document the prefixed features of `window` in IE11.\n */\nexport interface MsWindow extends Window {\n  MSInputMethodContext: any;\n  msCrypto: MsCrypto;\n}\n\nfunction quacksLikeAnMsWindow(window: Window): window is MsWindow {\n  return \"MSInputMethodContext\" in window && \"msCrypto\" in window;\n}\n\n/**\n * Determines if the provided window is (or is like) the window object one would\n * expect to encounter in Internet Explorer 11.\n */\nexport function isMsWindow(window: Window): window is MsWindow {\n  if (quacksLikeAnMsWindow(window) && window.msCrypto.subtle !== undefined) {\n    const { getRandomValues, subtle } = window.msCrypto;\n    return msSubtleCryptoMethods\n      .map<Function>(methodName => subtle[methodName])\n      .concat(getRandomValues)\n      .every(method => typeof method === \"function\");\n  }\n\n  return false;\n}\n", "export * from \"./CryptoOperation\";\nexport * from \"./Key\";\nexport * from \"./KeyOperation\";\nexport * from \"./MsSubtleCrypto\";\nexport * from \"./MsWindow\";\n", "import { Sha256 as Ie11Sha256 } from \"./ie11Sha256\";\nimport { Sha256 as WebCryptoSha256 } from \"./webCryptoSha256\";\nimport { Sha256 as JsSha256 } from \"@aws-crypto/sha256-js\";\nimport { Hash, SourceData } from \"@aws-sdk/types\";\nimport { supportsWebCrypto } from \"@aws-crypto/supports-web-crypto\";\nimport { isMsWindow } from \"@aws-crypto/ie11-detection\";\nimport { locateWindow } from \"@aws-sdk/util-locate-window\";\n\nexport class Sha256 implements Hash {\n  private readonly hash: Hash;\n\n  constructor(secret?: SourceData) {\n    if (supportsWebCrypto(locateWindow())) {\n      this.hash = new WebCryptoSha256(secret);\n    } else if (isMsWindow(locateWindow())) {\n      this.hash = new Ie11Sha256(secret);\n    } else {\n      this.hash = new JsSha256(secret);\n    }\n  }\n\n  update(data: SourceData, encoding?: \"utf8\" | \"ascii\" | \"latin1\"): void {\n    this.hash.update(data, encoding);\n  }\n\n  digest(): Promise<Uint8Array> {\n    return this.hash.digest();\n  }\n}\n", "export * from \"./crossPlatformSha256\";\nexport { Sha256 as Ie11Sha256 } from \"./ie11Sha256\";\nexport { Sha256 as WebCryptoSha256 } from \"./webCryptoSha256\";\n", "// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n", "/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]]\n  ]).join('');\n}\n\nmodule.exports = bytesToUuid;\n", "var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/uuidjs/uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n", "var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n", "var v1 = require('./v1');\nvar v4 = require('./v4');\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n", "/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar decode = decodeURIComponent;\nvar encode = encodeURIComponent;\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {}\n  var opt = options || {};\n  var pairs = str.split(';')\n  var dec = opt.decode || decode;\n\n  for (var i = 0; i < pairs.length; i++) {\n    var pair = pairs[i];\n    var index = pair.indexOf('=')\n\n    // skip things that don't look like key=value\n    if (index < 0) {\n      continue;\n    }\n\n    var key = pair.substring(0, index).trim()\n\n    // only assign once\n    if (undefined == obj[key]) {\n      var val = pair.substring(index + 1, pair.length).trim()\n\n      // quoted values\n      if (val[0] === '\"') {\n        val = val.slice(1, -1)\n      }\n\n      obj[key] = tryDecode(val, dec);\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n\n    if (isNaN(maxAge) || !isFinite(maxAge)) {\n      throw new TypeError('option maxAge is invalid')\n    }\n\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    if (typeof opt.expires.toUTCString !== 'function') {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + opt.expires.toUTCString();\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string'\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      case 'none':\n        str += '; SameSite=None';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n", "/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\n// Logging constants\nconst AWS_CLOUDWATCH_BASE_BUFFER_SIZE = 26;\nconst AWS_CLOUDWATCH_MAX_BATCH_EVENT_SIZE = 1048576;\nconst AWS_CLOUDWATCH_MAX_EVENT_SIZE = 256000;\nconst AWS_CLOUDWATCH_CATEGORY = 'Logging';\nconst AWS_CLOUDWATCH_PROVIDER_NAME = 'AWSCloudWatch';\nconst NO_CREDS_ERROR_STRING = 'No credentials';\nconst RETRY_ERROR_CODES = [\n\t'ResourceNotFoundException',\n\t'InvalidSequenceTokenException',\n];\n\nexport {\n\tAWS_CLOUDWATCH_BASE_BUFFER_SIZE,\n\tAWS_CLOUDWATCH_CATEGORY,\n\tAWS_CLOUDWATCH_MAX_BATCH_EVENT_SIZE,\n\tAWS_CLOUDWATCH_MAX_EVENT_SIZE,\n\tAWS_CLOUDWATCH_PROVIDER_NAME,\n\tNO_CREDS_ERROR_STRING,\n\tRETRY_ERROR_CODES,\n};\n", "/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nimport { InputLogEvent } from '@aws-sdk/client-cloudwatch-logs';\nimport { LoggingProvider } from '../types';\nimport { AWS_CLOUDWATCH_CATEGORY } from '../Util/Constants';\nimport { Logger } from './logger-interface';\n\nconst LOG_LEVELS = {\n\tVERBOSE: 1,\n\tDEBUG: 2,\n\tINFO: 3,\n\tWARN: 4,\n\tERROR: 5,\n};\n\nexport enum LOG_TYPE {\n\tDEBUG = 'DEBUG',\n\tERROR = 'ERROR',\n\tINFO = 'INFO',\n\tWARN = 'WARN',\n\tVERBOSE = 'VERBOSE',\n}\n\n/**\n * Write logs\n * @class Logger\n */\nexport class ConsoleLogger implements Logger {\n\tname: string;\n\tlevel: LOG_TYPE | string;\n\tprivate _pluggables: LoggingProvider[];\n\tprivate _config: object;\n\n\t/**\n\t * @constructor\n\t * @param {string} name - Name of the logger\n\t */\n\tconstructor(name: string, level: LOG_TYPE | string = LOG_TYPE.WARN) {\n\t\tthis.name = name;\n\t\tthis.level = level;\n\t\tthis._pluggables = [];\n\t}\n\n\tstatic LOG_LEVEL = null;\n\n\t_padding(n) {\n\t\treturn n < 10 ? '0' + n : '' + n;\n\t}\n\n\t_ts() {\n\t\tconst dt = new Date();\n\t\treturn (\n\t\t\t[this._padding(dt.getMinutes()), this._padding(dt.getSeconds())].join(\n\t\t\t\t':'\n\t\t\t) +\n\t\t\t'.' +\n\t\t\tdt.getMilliseconds()\n\t\t);\n\t}\n\n\tconfigure(config?: object) {\n\t\tif (!config) return this._config;\n\n\t\tthis._config = config;\n\n\t\treturn this._config;\n\t}\n\n\t/**\n\t * Write log\n\t * @method\n\t * @memeberof Logger\n\t * @param {LOG_TYPE|string} type - log type, default INFO\n\t * @param {string|object} msg - Logging message or object\n\t */\n\t_log(type: LOG_TYPE | string, ...msg) {\n\t\tlet logger_level_name = this.level;\n\t\tif (ConsoleLogger.LOG_LEVEL) {\n\t\t\tlogger_level_name = ConsoleLogger.LOG_LEVEL;\n\t\t}\n\t\tif (typeof (<any>window) !== 'undefined' && (<any>window).LOG_LEVEL) {\n\t\t\tlogger_level_name = (<any>window).LOG_LEVEL;\n\t\t}\n\t\tconst logger_level = LOG_LEVELS[logger_level_name];\n\t\tconst type_level = LOG_LEVELS[type];\n\t\tif (!(type_level >= logger_level)) {\n\t\t\t// Do nothing if type is not greater than or equal to logger level (handle undefined)\n\t\t\treturn;\n\t\t}\n\n\t\tlet log = console.log.bind(console);\n\t\tif (type === LOG_TYPE.ERROR && console.error) {\n\t\t\tlog = console.error.bind(console);\n\t\t}\n\t\tif (type === LOG_TYPE.WARN && console.warn) {\n\t\t\tlog = console.warn.bind(console);\n\t\t}\n\n\t\tconst prefix = `[${type}] ${this._ts()} ${this.name}`;\n\t\tlet message = '';\n\n\t\tif (msg.length === 1 && typeof msg[0] === 'string') {\n\t\t\tmessage = `${prefix} - ${msg[0]}`;\n\t\t\tlog(message);\n\t\t} else if (msg.length === 1) {\n\t\t\tmessage = `${prefix} ${msg[0]}`;\n\t\t\tlog(prefix, msg[0]);\n\t\t} else if (typeof msg[0] === 'string') {\n\t\t\tlet obj = msg.slice(1);\n\t\t\tif (obj.length === 1) {\n\t\t\t\tobj = obj[0];\n\t\t\t}\n\t\t\tmessage = `${prefix} - ${msg[0]} ${obj}`;\n\t\t\tlog(`${prefix} - ${msg[0]}`, obj);\n\t\t} else {\n\t\t\tmessage = `${prefix} ${msg}`;\n\t\t\tlog(prefix, msg);\n\t\t}\n\n\t\tfor (const plugin of this._pluggables) {\n\t\t\tconst logEvent: InputLogEvent = { message, timestamp: Date.now() };\n\t\t\tplugin.pushLogs([logEvent]);\n\t\t}\n\t}\n\n\t/**\n\t * Write General log. Default to INFO\n\t * @method\n\t * @memeberof Logger\n\t * @param {string|object} msg - Logging message or object\n\t */\n\tlog(...msg) {\n\t\tthis._log(LOG_TYPE.INFO, ...msg);\n\t}\n\n\t/**\n\t * Write INFO log\n\t * @method\n\t * @memeberof Logger\n\t * @param {string|object} msg - Logging message or object\n\t */\n\tinfo(...msg) {\n\t\tthis._log(LOG_TYPE.INFO, ...msg);\n\t}\n\n\t/**\n\t * Write WARN log\n\t * @method\n\t * @memeberof Logger\n\t * @param {string|object} msg - Logging message or object\n\t */\n\twarn(...msg) {\n\t\tthis._log(LOG_TYPE.WARN, ...msg);\n\t}\n\n\t/**\n\t * Write ERROR log\n\t * @method\n\t * @memeberof Logger\n\t * @param {string|object} msg - Logging message or object\n\t */\n\terror(...msg) {\n\t\tthis._log(LOG_TYPE.ERROR, ...msg);\n\t}\n\n\t/**\n\t * Write DEBUG log\n\t * @method\n\t * @memeberof Logger\n\t * @param {string|object} msg - Logging message or object\n\t */\n\tdebug(...msg) {\n\t\tthis._log(LOG_TYPE.DEBUG, ...msg);\n\t}\n\n\t/**\n\t * Write VERBOSE log\n\t * @method\n\t * @memeberof Logger\n\t * @param {string|object} msg - Logging message or object\n\t */\n\tverbose(...msg) {\n\t\tthis._log(LOG_TYPE.VERBOSE, ...msg);\n\t}\n\n\taddPluggable(pluggable: LoggingProvider) {\n\t\tif (pluggable && pluggable.getCategoryName() === AWS_CLOUDWATCH_CATEGORY) {\n\t\t\tthis._pluggables.push(pluggable);\n\t\t\tpluggable.configure(this._config);\n\t\t}\n\t}\n\n\tlistPluggables() {\n\t\treturn this._pluggables;\n\t}\n}\n", "import { ConsoleLogger as LoggerClass } from './Logger';\n\nconst logger = new LoggerClass('Amplify');\n\nexport class AmplifyClass {\n\t// Everything that is `register`ed is tracked here\n\tprivate _components = [];\n\tprivate _config = {};\n\n\t// All modules (with `getModuleName()`) are stored here for dependency injection\n\tprivate _modules = {};\n\n\t// for backward compatibility to avoid breaking change\n\t// if someone is using like Amplify.Auth\n\tAuth = null;\n\tAnalytics = null;\n\tAPI = null;\n\tCredentials = null;\n\tStorage = null;\n\tI18n = null;\n\tCache = null;\n\tPubSub = null;\n\tInteractions = null;\n\tPushnotification = null;\n\tUI = null;\n\tXR = null;\n\tPredictions = null;\n\tDataStore = null;\n\tGeo = null;\n\n\tLogger = LoggerClass;\n\tServiceWorker = null;\n\n\tregister(comp) {\n\t\tlogger.debug('component registered in amplify', comp);\n\t\tthis._components.push(comp);\n\t\tif (typeof comp.getModuleName === 'function') {\n\t\t\tthis._modules[comp.getModuleName()] = comp;\n\t\t\tthis[comp.getModuleName()] = comp;\n\t\t} else {\n\t\t\tlogger.debug('no getModuleName method for component', comp);\n\t\t}\n\n\t\t// Finally configure this new component(category) loaded\n\t\t// With the new modularization changes in Amplify V3, all the Amplify\n\t\t// component are not loaded/registered right away but when they are\n\t\t// imported (and hence instantiated) in the client's app. This ensures\n\t\t// that all new components imported get correctly configured with the\n\t\t// configuration that Amplify.configure() was called with.\n\t\tcomp.configure(this._config);\n\t}\n\n\tconfigure(config?) {\n\t\tif (!config) return this._config;\n\n\t\tthis._config = Object.assign(this._config, config);\n\t\tlogger.debug('amplify config', this._config);\n\n\t\t// Dependency Injection via property-setting.\n\t\t// This avoids introducing a public method/interface/setter that's difficult to remove later.\n\t\t// Plus, it reduces `if` statements within the `constructor` and `configure` of each module\n\t\tObject.entries(this._modules).forEach(([Name, comp]) => {\n\t\t\t// e.g. Auth.*\n\t\t\tObject.keys(comp).forEach(property => {\n\t\t\t\t// e.g. Auth[\"Credentials\"] = this._modules[\"Credentials\"] when set\n\t\t\t\tif (this._modules[property]) {\n\t\t\t\t\tcomp[property] = this._modules[property];\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tthis._components.map(comp => {\n\t\t\tcomp.configure(this._config);\n\t\t});\n\n\t\treturn this._config;\n\t}\n\n\taddPluggable(pluggable) {\n\t\tif (\n\t\t\tpluggable &&\n\t\t\tpluggable['getCategory'] &&\n\t\t\ttypeof pluggable['getCategory'] === 'function'\n\t\t) {\n\t\t\tthis._components.map(comp => {\n\t\t\t\tif (\n\t\t\t\t\tcomp['addPluggable'] &&\n\t\t\t\t\ttypeof comp['addPluggable'] === 'function'\n\t\t\t\t) {\n\t\t\t\t\tcomp.addPluggable(pluggable);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport const Amplify = new AmplifyClass();\n\n/**\n * @deprecated use named import\n */\nexport default Amplify;\n", "// generated by genversion\nexport const version = '4.7.14';\n", "/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { version } from './version';\n\nconst BASE_USER_AGENT = `aws-amplify/${version}`;\n\nexport const Platform = {\n\tuserAgent: `${BASE_USER_AGENT} js`,\n\tproduct: '',\n\tnavigator: null,\n\tisReactNative: false,\n};\nif (typeof navigator !== 'undefined' && navigator.product) {\n\tPlatform.product = navigator.product || '';\n\tPlatform.navigator = navigator || null;\n\tswitch (navigator.product) {\n\t\tcase 'ReactNative':\n\t\t\tPlatform.userAgent = `${BASE_USER_AGENT} react-native`;\n\t\t\tPlatform.isReactNative = true;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tPlatform.userAgent = `${BASE_USER_AGENT} js`;\n\t\t\tPlatform.isReactNative = false;\n\t\t\tbreak;\n\t}\n}\n\nexport const getAmplifyUserAgent = (content?: string) => {\n\treturn `${Platform.userAgent}${content ? content : ''}`;\n};\n\n/**\n * @deprecated use named import\n */\nexport default Platform;\n", "/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { ConsoleLogger as Logger } from '../Logger';\n\nconst logger = new Logger('ClientDevice_Browser');\n\nexport function clientInfo() {\n\tif (typeof window === 'undefined') {\n\t\treturn {};\n\t}\n\n\treturn browserClientInfo();\n}\n\nfunction browserClientInfo() {\n\tif (typeof window === 'undefined') {\n\t\tlogger.warn('No window object available to get browser client info');\n\t\treturn {};\n\t}\n\n\tconst nav = window.navigator;\n\tif (!nav) {\n\t\tlogger.warn('No navigator object available to get browser client info');\n\t\treturn {};\n\t}\n\n\tconst { platform, product, vendor, userAgent, language } = nav;\n\tconst type = browserType(userAgent);\n\tconst timezone = browserTimezone();\n\n\treturn {\n\t\tplatform,\n\t\tmake: product || vendor,\n\t\tmodel: type.type,\n\t\tversion: type.version,\n\t\tappVersion: [type.type, type.version].join('/'),\n\t\tlanguage,\n\t\ttimezone,\n\t};\n}\n\nexport function dimension() {\n\tif (typeof window === 'undefined') {\n\t\tlogger.warn('No window object available to get browser client info');\n\t\treturn { width: 320, height: 320 };\n\t}\n\n\treturn {\n\t\twidth: window.innerWidth,\n\t\theight: window.innerHeight,\n\t};\n}\n\nfunction browserTimezone() {\n\tconst tzMatch = /\\(([A-Za-z\\s].*)\\)/.exec(new Date().toString());\n\treturn tzMatch ? tzMatch[1] || '' : '';\n}\n\nexport function browserType(userAgent: string) {\n\tconst operaMatch = /.+(Opera[\\s[A-Z]*|OPR[\\sA-Z]*)\\/([0-9\\.]+).*/i.exec(\n\t\tuserAgent\n\t);\n\tif (operaMatch) {\n\t\treturn { type: operaMatch[1], version: operaMatch[2] };\n\t}\n\n\tconst ieMatch = /.+(Trident|Edge)\\/([0-9\\.]+).*/i.exec(userAgent);\n\tif (ieMatch) {\n\t\treturn { type: ieMatch[1], version: ieMatch[2] };\n\t}\n\n\tconst cfMatch = /.+(Chrome|Firefox|FxiOS)\\/([0-9\\.]+).*/i.exec(userAgent);\n\tif (cfMatch) {\n\t\treturn { type: cfMatch[1], version: cfMatch[2] };\n\t}\n\n\tconst sMatch = /.+(Safari)\\/([0-9\\.]+).*/i.exec(userAgent);\n\tif (sMatch) {\n\t\treturn { type: sMatch[1], version: sMatch[2] };\n\t}\n\n\tconst awkMatch = /.+(AppleWebKit)\\/([0-9\\.]+).*/i.exec(userAgent);\n\tif (awkMatch) {\n\t\treturn { type: awkMatch[1], version: awkMatch[2] };\n\t}\n\n\tconst anyMatch = /.*([A-Z]+)\\/([0-9\\.]+).*/i.exec(userAgent);\n\tif (anyMatch) {\n\t\treturn { type: anyMatch[1], version: anyMatch[2] };\n\t}\n\n\treturn { type: '', version: '' };\n}\n", "/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nimport { clientInfo, dimension } from './browser';\n\nexport class ClientDevice {\n\tstatic clientInfo() {\n\t\treturn clientInfo();\n\t}\n\n\tstatic dimension() {\n\t\treturn dimension();\n\t}\n}\n\n/**\n * @deprecated use named import\n */\nexport default ClientDevice;\n", "/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nexport function missingConfig(name: string) {\n\treturn new Error('Missing config value of ' + name);\n}\nexport function invalidParameter(name: string) {\n\treturn new Error('Invalid parameter value of ' + name);\n}\n", "/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nimport { ConsoleLogger as Logger } from './Logger';\n\nconst logger = new Logger('Hub');\n\nconst AMPLIFY_SYMBOL = (typeof Symbol !== 'undefined' &&\ntypeof Symbol.for === 'function'\n\t? Symbol.for('amplify_default')\n\t: '@@amplify_default') as Symbol;\ninterface IPattern {\n\tpattern: RegExp;\n\tcallback: HubCallback;\n}\n\ninterface IListener {\n\tname: string;\n\tcallback: HubCallback;\n}\n\nexport type HubCapsule = {\n\tchannel: string;\n\tpayload: HubPayload;\n\tsource: string;\n\tpatternInfo?: string[];\n};\n\nexport type HubPayload = {\n\tevent: string;\n\tdata?: any;\n\tmessage?: string;\n};\n\nexport type HubCallback = (capsule: HubCapsule) => void;\n\nexport type LegacyCallback = { onHubCapsule: HubCallback };\n\nfunction isLegacyCallback(callback: any): callback is LegacyCallback {\n\treturn (<LegacyCallback>callback).onHubCapsule !== undefined;\n}\n\nexport class HubClass {\n\tname: string;\n\tprivate listeners: IListener[] = [];\n\tprivate patterns: IPattern[] = [];\n\n\tprotectedChannels = [\n\t\t'core',\n\t\t'auth',\n\t\t'api',\n\t\t'analytics',\n\t\t'interactions',\n\t\t'pubsub',\n\t\t'storage',\n\t\t'ui',\n\t\t'xr',\n\t];\n\n\tconstructor(name: string) {\n\t\tthis.name = name;\n\t}\n\n\t// Note - Need to pass channel as a reference for removal to work and not anonymous function\n\tremove(channel: string | RegExp, listener: HubCallback) {\n\t\tif (channel instanceof RegExp) {\n\t\t\tconst pattern = this.patterns.find(\n\t\t\t\t({ pattern }) => pattern.source === channel.source\n\t\t\t);\n\t\t\tif (!pattern) {\n\t\t\t\tlogger.warn(`No listeners for ${channel}`);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.patterns = [...this.patterns.filter(x => x !== pattern)];\n\t\t} else {\n\t\t\tconst holder = this.listeners[channel];\n\t\t\tif (!holder) {\n\t\t\t\tlogger.warn(`No listeners for ${channel}`);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.listeners[channel] = [\n\t\t\t\t...holder.filter(({ callback }) => callback !== listener),\n\t\t\t];\n\t\t}\n\t}\n\n\tdispatch(\n\t\tchannel: string,\n\t\tpayload: HubPayload,\n\t\tsource: string = '',\n\t\tampSymbol?: Symbol\n\t) {\n\t\tif (this.protectedChannels.indexOf(channel) > -1) {\n\t\t\tconst hasAccess = ampSymbol === AMPLIFY_SYMBOL;\n\n\t\t\tif (!hasAccess) {\n\t\t\t\tlogger.warn(\n\t\t\t\t\t`WARNING: ${channel} is protected and dispatching on it can have unintended consequences`\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tconst capsule: HubCapsule = {\n\t\t\tchannel,\n\t\t\tpayload: { ...payload },\n\t\t\tsource,\n\t\t\tpatternInfo: [],\n\t\t};\n\n\t\ttry {\n\t\t\tthis._toListeners(capsule);\n\t\t} catch (e) {\n\t\t\tlogger.error(e);\n\t\t}\n\t}\n\n\tlisten(\n\t\tchannel: string | RegExp,\n\t\tcallback?: HubCallback | LegacyCallback,\n\t\tlistenerName = 'noname'\n\t) {\n\t\tlet cb: HubCallback;\n\t\t// Check for legacy onHubCapsule callback for backwards compatability\n\t\tif (isLegacyCallback(callback)) {\n\t\t\tlogger.warn(\n\t\t\t\t`WARNING onHubCapsule is Deprecated. Please pass in a callback.`\n\t\t\t);\n\t\t\tcb = callback.onHubCapsule.bind(callback);\n\t\t} else if (typeof callback !== 'function') {\n\t\t\tthrow new Error('No callback supplied to Hub');\n\t\t} else {\n\t\t\tcb = callback;\n\t\t}\n\n\t\tif (channel instanceof RegExp) {\n\t\t\tthis.patterns.push({\n\t\t\t\tpattern: channel,\n\t\t\t\tcallback: cb,\n\t\t\t});\n\t\t} else {\n\t\t\tlet holder = this.listeners[channel];\n\n\t\t\tif (!holder) {\n\t\t\t\tholder = [];\n\t\t\t\tthis.listeners[channel] = holder;\n\t\t\t}\n\n\t\t\tholder.push({\n\t\t\t\tname: listenerName,\n\t\t\t\tcallback: cb,\n\t\t\t});\n\t\t}\n\n\t\treturn () => {\n\t\t\tthis.remove(channel, cb);\n\t\t};\n\t}\n\n\tprivate _toListeners(capsule: HubCapsule) {\n\t\tconst { channel, payload } = capsule;\n\t\tconst holder = this.listeners[channel];\n\n\t\tif (holder) {\n\t\t\tholder.forEach(listener => {\n\t\t\t\tlogger.debug(`Dispatching to ${channel} with `, payload);\n\t\t\t\ttry {\n\t\t\t\t\tlistener.callback(capsule);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tlogger.error(e);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (this.patterns.length > 0) {\n\t\t\tif (!payload.message) {\n\t\t\t\tlogger.warn(`Cannot perform pattern matching without a message key`);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst payloadStr = payload.message;\n\n\t\t\tthis.patterns.forEach(pattern => {\n\t\t\t\tconst match = payloadStr.match(pattern.pattern);\n\t\t\t\tif (match) {\n\t\t\t\t\tconst [, ...groups] = match;\n\t\t\t\t\tconst dispatchingCapsule: HubCapsule = {\n\t\t\t\t\t\t...capsule,\n\t\t\t\t\t\tpatternInfo: groups,\n\t\t\t\t\t};\n\t\t\t\t\ttry {\n\t\t\t\t\t\tpattern.callback(dispatchingCapsule);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tlogger.error(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n\n/*We export a __default__ instance of HubClass to use it as a \npseudo Singleton for the main messaging bus, however you can still create\nyour own instance of HubClass() for a separate \"private bus\" of events.*/\nexport const Hub = new HubClass('__default__');\n/**\n * @deprecated use named import\n */\nexport default Hub;\n", "/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nimport { I18nOptions } from './types';\nimport { ConsoleLogger as Logger } from '../Logger';\n\nconst logger = new Logger('I18n');\n\n/**\n * Language transition class\n */\nexport class I18n {\n\t/**\n\t * @private\n\t */\n\t_options: I18nOptions = null;\n\n\t/**\n\t * @private\n\t */\n\t_lang = null;\n\n\t/**\n\t * @private\n\t */\n\t_dict = {};\n\n\t/**\n\t * @constructor\n\t * Initialize with configurations\n\t * @param {Object} options\n\t */\n\tconstructor(options: I18nOptions) {\n\t\tthis._options = Object.assign({}, options);\n\t\tthis._lang = this._options.language;\n\n\t\tif (\n\t\t\t!this._lang &&\n\t\t\ttypeof window !== 'undefined' &&\n\t\t\twindow &&\n\t\t\twindow.navigator\n\t\t) {\n\t\t\tthis._lang = window.navigator.language;\n\t\t}\n\n\t\tlogger.debug(this._lang);\n\t}\n\n\t/**\n\t * @method\n\t * Explicitly setting language\n\t * @param {String} lang\n\t */\n\tsetLanguage(lang: string) {\n\t\tthis._lang = lang;\n\t}\n\n\t/**\n\t * @method\n\t * Get value\n\t * @param {String} key\n\t * @param {String} defVal - Default value\n\t */\n\tget(key, defVal = undefined) {\n\t\tif (!this._lang) {\n\t\t\treturn typeof defVal !== 'undefined' ? defVal : key;\n\t\t}\n\n\t\tconst lang = this._lang;\n\t\tlet val = this.getByLanguage(key, lang);\n\t\tif (val) {\n\t\t\treturn val;\n\t\t}\n\n\t\tif (lang.indexOf('-') > 0) {\n\t\t\tval = this.getByLanguage(key, lang.split('-')[0]);\n\t\t}\n\t\tif (val) {\n\t\t\treturn val;\n\t\t}\n\n\t\treturn typeof defVal !== 'undefined' ? defVal : key;\n\t}\n\n\t/**\n\t * @method\n\t * Get value according to specified language\n\t * @param {String} key\n\t * @param {String} language - Specified langurage to be used\n\t * @param {String} defVal - Default value\n\t */\n\tgetByLanguage(key, language, defVal = null) {\n\t\tif (!language) {\n\t\t\treturn defVal;\n\t\t}\n\n\t\tconst lang_dict = this._dict[language];\n\t\tif (!lang_dict) {\n\t\t\treturn defVal;\n\t\t}\n\n\t\treturn lang_dict[key];\n\t}\n\n\t/**\n\t * @method\n\t * Add vocabularies for one language\n\t * @param {String} language - Language of the dictionary\n\t * @param {Object} vocabularies - Object that has key-value as dictionary entry\n\t */\n\tputVocabulariesForLanguage(language, vocabularies) {\n\t\tlet lang_dict = this._dict[language];\n\t\tif (!lang_dict) {\n\t\t\tlang_dict = this._dict[language] = {};\n\t\t}\n\t\tObject.assign(lang_dict, vocabularies);\n\t}\n\n\t/**\n\t * @method\n\t * Add vocabularies for one language\n\t * @param {Object} vocabularies - Object that has language as key,\n\t *                                vocabularies of each language as value\n\t */\n\tputVocabularies(vocabularies) {\n\t\tObject.keys(vocabularies).map(key => {\n\t\t\tthis.putVocabulariesForLanguage(key, vocabularies[key]);\n\t\t});\n\t}\n}\n", "/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nimport { I18n as I18nClass } from './I18n';\n\nimport { ConsoleLogger as Logger } from '../Logger';\nimport { Amplify } from '../Amplify';\n\nconst logger = new Logger('I18n');\n\nlet _config = null;\nlet _i18n = null;\n\n/**\n * Export I18n APIs\n */\nexport class I18n {\n\t/**\n\t * @static\n\t * @method\n\t * Configure I18n part\n\t * @param {Object} config - Configuration of the I18n\n\t */\n\tstatic configure(config) {\n\t\tlogger.debug('configure I18n');\n\t\tif (!config) {\n\t\t\treturn _config;\n\t\t}\n\n\t\t_config = Object.assign({}, _config, config.I18n || config);\n\n\t\tI18n.createInstance();\n\n\t\treturn _config;\n\t}\n\n\tstatic getModuleName() {\n\t\treturn 'I18n';\n\t}\n\n\t/**\n\t * @static\n\t * @method\n\t * Create an instance of I18n for the library\n\t */\n\tstatic createInstance() {\n\t\tlogger.debug('create I18n instance');\n\t\tif (_i18n) {\n\t\t\treturn;\n\t\t}\n\t\t_i18n = new I18nClass(_config);\n\t}\n\n\t/**\n\t * @static @method\n\t * Explicitly setting language\n\t * @param {String} lang\n\t */\n\tstatic setLanguage(lang) {\n\t\tI18n.checkConfig();\n\n\t\treturn _i18n.setLanguage(lang);\n\t}\n\n\t/**\n\t * @static @method\n\t * Get value\n\t * @param {String} key\n\t * @param {String} defVal - Default value\n\t */\n\tstatic get(key, defVal?) {\n\t\tif (!I18n.checkConfig()) {\n\t\t\treturn typeof defVal === 'undefined' ? key : defVal;\n\t\t}\n\n\t\treturn _i18n.get(key, defVal);\n\t}\n\n\t/**\n\t * @static\n\t * @method\n\t * Add vocabularies for one language\n\t * @param {String} langurage - Language of the dictionary\n\t * @param {Object} vocabularies - Object that has key-value as dictionary entry\n\t */\n\tstatic putVocabulariesForLanguage(language, vocabularies) {\n\t\tI18n.checkConfig();\n\n\t\treturn _i18n.putVocabulariesForLanguage(language, vocabularies);\n\t}\n\n\t/**\n\t * @static\n\t * @method\n\t * Add vocabularies for one language\n\t * @param {Object} vocabularies - Object that has language as key,\n\t *                                vocabularies of each language as value\n\t */\n\tstatic putVocabularies(vocabularies) {\n\t\tI18n.checkConfig();\n\n\t\treturn _i18n.putVocabularies(vocabularies);\n\t}\n\n\tpublic static checkConfig() {\n\t\tif (!_i18n) {\n\t\t\t_i18n = new I18nClass(_config);\n\t\t}\n\n\t\treturn true;\n\t}\n}\n\nAmplify.register(I18n);\n\n/**\n * @deprecated use named import\n */\nexport default I18n;\n", "/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nconst MIME_MAP = [\n\t{ type: 'text/plain', ext: 'txt' },\n\t{ type: 'text/html', ext: 'html' },\n\t{ type: 'text/javascript', ext: 'js' },\n\t{ type: 'text/css', ext: 'css' },\n\t{ type: 'text/csv', ext: 'csv' },\n\t{ type: 'text/yaml', ext: 'yml' },\n\t{ type: 'text/yaml', ext: 'yaml' },\n\t{ type: 'text/calendar', ext: 'ics' },\n\t{ type: 'text/calendar', ext: 'ical' },\n\n\t{ type: 'image/apng', ext: 'apng' },\n\t{ type: 'image/bmp', ext: 'bmp' },\n\t{ type: 'image/gif', ext: 'gif' },\n\t{ type: 'image/x-icon', ext: 'ico' },\n\t{ type: 'image/x-icon', ext: 'cur' },\n\t{ type: 'image/jpeg', ext: 'jpg' },\n\t{ type: 'image/jpeg', ext: 'jpeg' },\n\t{ type: 'image/jpeg', ext: 'jfif' },\n\t{ type: 'image/jpeg', ext: 'pjp' },\n\t{ type: 'image/jpeg', ext: 'pjpeg' },\n\t{ type: 'image/png', ext: 'png' },\n\t{ type: 'image/svg+xml', ext: 'svg' },\n\t{ type: 'image/tiff', ext: 'tif' },\n\t{ type: 'image/tiff', ext: 'tiff' },\n\t{ type: 'image/webp', ext: 'webp' },\n\n\t{ type: 'application/json', ext: 'json' },\n\t{ type: 'application/xml', ext: 'xml' },\n\t{ type: 'application/x-sh', ext: 'sh' },\n\t{ type: 'application/zip', ext: 'zip' },\n\t{ type: 'application/x-rar-compressed', ext: 'rar' },\n\t{ type: 'application/x-tar', ext: 'tar' },\n\t{ type: 'application/x-bzip', ext: 'bz' },\n\t{ type: 'application/x-bzip2', ext: 'bz2' },\n\t{ type: 'application/pdf', ext: 'pdf' },\n\t{ type: 'application/java-archive', ext: 'jar' },\n\t{ type: 'application/msword', ext: 'doc' },\n\t{ type: 'application/vnd.ms-excel', ext: 'xls' },\n\t{ type: 'application/vnd.ms-excel', ext: 'xlsx' },\n\n\t{ type: 'message/rfc822', ext: 'eml' },\n];\n\nexport const isEmpty = (obj = {}) => Object.keys(obj).length === 0;\n\nexport const sortByField = (list, field, dir) => {\n\tif (!list || !list.sort) {\n\t\treturn false;\n\t}\n\n\tconst dirX = dir && dir === 'desc' ? -1 : 1;\n\tlist.sort(function(a, b) {\n\t\tconst a_val = a[field];\n\t\tconst b_val = b[field];\n\n\t\tif (typeof b_val === 'undefined') {\n\t\t\treturn typeof a_val === 'undefined' ? 0 : 1 * dirX;\n\t\t}\n\n\t\tif (typeof a_val === 'undefined') {\n\t\t\treturn -1 * dirX;\n\t\t}\n\n\t\tif (a_val < b_val) {\n\t\t\treturn -1 * dirX;\n\t\t}\n\t\tif (a_val > b_val) {\n\t\t\treturn 1 * dirX;\n\t\t}\n\n\t\treturn 0;\n\t});\n\n\treturn true;\n};\n\nexport const objectLessAttributes = (obj, less) => {\n\tconst ret = Object.assign({}, obj);\n\tif (less) {\n\t\tif (typeof less === 'string') {\n\t\t\tdelete ret[less];\n\t\t} else {\n\t\t\tless.forEach(attr => {\n\t\t\t\tdelete ret[attr];\n\t\t\t});\n\t\t}\n\t}\n\n\treturn ret;\n};\n\nexport const filenameToContentType = (\n\tfilename,\n\tdefVal = 'application/octet-stream'\n) => {\n\tconst name = filename.toLowerCase();\n\n\tconst filtered = MIME_MAP.filter(mime => name.endsWith('.' + mime.ext));\n\treturn filtered.length > 0 ? filtered[0].type : defVal;\n};\n\nexport const isTextFile = contentType => {\n\tconst type = contentType.toLowerCase();\n\tif (type.startsWith('text/')) {\n\t\treturn true;\n\t}\n\treturn (\n\t\t'application/json' === type ||\n\t\t'application/xml' === type ||\n\t\t'application/sh' === type\n\t);\n};\n\nexport const generateRandomString = () => {\n\tlet result = '';\n\tconst chars =\n\t\t'0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\tfor (let i = 32; i > 0; i -= 1) {\n\t\tresult += chars[Math.floor(Math.random() * chars.length)];\n\t}\n\treturn result;\n};\n\nexport const makeQuerablePromise = promise => {\n\tif (promise.isResolved) return promise;\n\n\tlet isPending = true;\n\tlet isRejected = false;\n\tlet isFullfilled = false;\n\n\tconst result = promise.then(\n\t\tdata => {\n\t\t\tisFullfilled = true;\n\t\t\tisPending = false;\n\t\t\treturn data;\n\t\t},\n\t\te => {\n\t\t\tisRejected = true;\n\t\t\tisPending = false;\n\t\t\tthrow e;\n\t\t}\n\t);\n\n\tresult.isFullfilled = () => isFullfilled;\n\tresult.isPending = () => isPending;\n\tresult.isRejected = () => isRejected;\n\n\treturn result;\n};\n\nexport const isWebWorker = () => {\n\tif (typeof self === 'undefined') {\n\t\treturn false;\n\t}\n\tconst selfContext = self as { WorkerGlobalScope? };\n\treturn typeof selfContext.WorkerGlobalScope !== 'undefined' &&\n\t\tself instanceof selfContext.WorkerGlobalScope;\n};\n\nexport const browserOrNode = () => {\n\tconst isBrowser =\n\t\ttypeof window !== 'undefined' && typeof window.document !== 'undefined';\n\tconst isNode =\n\t\ttypeof process !== 'undefined' &&\n\t\tprocess.versions != null &&\n\t\tprocess.versions.node != null;\n\n\treturn {\n\t\tisBrowser,\n\t\tisNode,\n\t};\n};\n\n/**\n * transfer the first letter of the keys to lowercase\n * @param {Object} obj - the object need to be transferred\n * @param {Array} whiteListForItself - whitelist itself from being transferred\n * @param {Array} whiteListForChildren - whitelist its children keys from being transferred\n */\nexport const transferKeyToLowerCase = (\n\tobj,\n\twhiteListForItself = [],\n\twhiteListForChildren = []\n) => {\n\tif (!isStrictObject(obj)) return obj;\n\tconst ret = {};\n\n\tfor (const key in obj) {\n\t\tif (obj.hasOwnProperty(key)) {\n\t\t\tconst transferedKey = whiteListForItself.includes(key)\n\t\t\t\t? key\n\t\t\t\t: key[0].toLowerCase() + key.slice(1);\n\n\t\t\tret[transferedKey] = whiteListForChildren.includes(key)\n\t\t\t\t? obj[key]\n\t\t\t\t: transferKeyToLowerCase(\n\t\t\t\t\t\tobj[key],\n\t\t\t\t\t\twhiteListForItself,\n\t\t\t\t\t\twhiteListForChildren\n\t\t\t\t  );\n\t\t}\n\t}\n\n\treturn ret;\n};\n\n/**\n * transfer the first letter of the keys to lowercase\n * @param {Object} obj - the object need to be transferred\n * @param {Array} whiteListForItself - whitelist itself from being transferred\n * @param {Array} whiteListForChildren - whitelist its children keys from being transferred\n */\nexport const transferKeyToUpperCase = (\n\tobj,\n\twhiteListForItself = [],\n\twhiteListForChildren = []\n) => {\n\tif (!isStrictObject(obj)) return obj;\n\tconst ret = {};\n\n\tfor (const key in obj) {\n\t\tif (obj.hasOwnProperty(key)) {\n\t\t\tconst transferredKey = whiteListForItself.includes(key)\n\t\t\t\t? key\n\t\t\t\t: key[0].toUpperCase() + key.slice(1);\n\n\t\t\tret[transferredKey] = whiteListForChildren.includes(key)\n\t\t\t\t? obj[key]\n\t\t\t\t: transferKeyToUpperCase(\n\t\t\t\t\t\tobj[key],\n\t\t\t\t\t\twhiteListForItself,\n\t\t\t\t\t\twhiteListForChildren\n\t\t\t\t  );\n\t\t}\n\t}\n\treturn ret;\n};\n\n/**\n * Return true if the object is a strict object\n * which means it's not Array, Function, Number, String, Boolean or Null\n * @param obj the Object\n */\nexport const isStrictObject = obj => {\n\treturn (\n\t\tobj instanceof Object &&\n\t\t!(obj instanceof Array) &&\n\t\t!(obj instanceof Function) &&\n\t\t!(obj instanceof Number) &&\n\t\t!(obj instanceof String) &&\n\t\t!(obj instanceof Boolean)\n\t);\n};\n\n/**\n * @deprecated use per-function imports\n */\nexport class JS {\n\tstatic isEmpty = isEmpty;\n\tstatic sortByField = sortByField;\n\tstatic objectLessAttributes = objectLessAttributes;\n\tstatic filenameToContentType = filenameToContentType;\n\tstatic isTextFile = isTextFile;\n\tstatic generateRandomString = generateRandomString;\n\tstatic makeQuerablePromise = makeQuerablePromise;\n\tstatic isWebWorker = isWebWorker;\n\tstatic browserOrNode = browserOrNode;\n\tstatic transferKeyToLowerCase = transferKeyToLowerCase;\n\tstatic transferKeyToUpperCase = transferKeyToUpperCase;\n\tstatic isStrictObject = isStrictObject;\n}\n\n/**\n * @deprecated use per-function imports\n */\nexport default JS;\n", "/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nimport { ConsoleLogger as Logger } from './Logger';\nimport { Sha256 as jsSha256 } from '@aws-crypto/sha256-js';\nimport { toHex } from '@aws-sdk/util-hex-encoding';\nimport { parse, format } from 'url';\nimport { DateUtils } from './Util';\n\nconst logger = new Logger('Signer');\n\nconst DEFAULT_ALGORITHM = 'AWS4-HMAC-SHA256';\nconst IOT_SERVICE_NAME = 'iotdevicegateway';\n\nconst encrypt = function(key, src) {\n\tconst hash = new jsSha256(key);\n\thash.update(src);\n\treturn hash.digestSync();\n};\n\nconst hash = function(src) {\n\tconst arg = src || '';\n\tconst hash = new jsSha256();\n\thash.update(arg);\n\treturn toHex(hash.digestSync());\n};\n\n/**\n * @private\n * RFC 3986 compliant version of encodeURIComponent\n */\nconst escape_RFC3986 = function(component) {\n\treturn component.replace(/[!'()*]/g, function(c) {\n\t\treturn '%' + c.charCodeAt(0).toString(16).toUpperCase();\n\t});\n};\n\n/**\n * @private\n * Create canonical query string\n *\n */\nconst canonical_query = function(query) {\n\tif (!query || query.length === 0) {\n\t\treturn '';\n\t}\n\n\treturn query\n\t\t.split('&')\n\t\t.map(e => {\n\t\t\tconst key_val = e.split('=');\n\n\t\t\tif (key_val.length === 1) {\n\t\t\t\treturn e;\n\t\t\t} else {\n\t\t\t\tconst reencoded_val = escape_RFC3986(key_val[1]);\n\t\t\t\treturn key_val[0] + '=' + reencoded_val;\n\t\t\t}\n\t\t})\n\t\t.sort((a, b) => {\n\t\t\tconst key_a = a.split('=')[0];\n\t\t\tconst key_b = b.split('=')[0];\n\t\t\tif (key_a === key_b) {\n\t\t\t\treturn a < b ? -1 : 1;\n\t\t\t} else {\n\t\t\t\treturn key_a < key_b ? -1 : 1;\n\t\t\t}\n\t\t})\n\t\t.join('&');\n};\n\n/**\n* @private\n* Create canonical headers\n*\n<pre>\nCanonicalHeaders =\n    CanonicalHeadersEntry0 + CanonicalHeadersEntry1 + ... + CanonicalHeadersEntryN\nCanonicalHeadersEntry =\n    Lowercase(HeaderName) + ':' + Trimall(HeaderValue) + '\\n'\n</pre>\n*/\nconst canonical_headers = function(headers) {\n\tif (!headers || Object.keys(headers).length === 0) {\n\t\treturn '';\n\t}\n\n\treturn (\n\t\tObject.keys(headers)\n\t\t\t.map(function(key) {\n\t\t\t\treturn {\n\t\t\t\t\tkey: key.toLowerCase(),\n\t\t\t\t\tvalue: headers[key] ? headers[key].trim().replace(/\\s+/g, ' ') : '',\n\t\t\t\t};\n\t\t\t})\n\t\t\t.sort(function(a, b) {\n\t\t\t\treturn a.key < b.key ? -1 : 1;\n\t\t\t})\n\t\t\t.map(function(item) {\n\t\t\t\treturn item.key + ':' + item.value;\n\t\t\t})\n\t\t\t.join('\\n') + '\\n'\n\t);\n};\n\n/**\n * List of header keys included in the canonical headers.\n * @access private\n */\nconst signed_headers = function(headers) {\n\treturn Object.keys(headers)\n\t\t.map(function(key) {\n\t\t\treturn key.toLowerCase();\n\t\t})\n\t\t.sort()\n\t\t.join(';');\n};\n\n/**\n* @private\n* Create canonical request\n* Refer to\n* {@link http://docs.aws.amazon.com/general/latest/gr/sigv4-create-canonical-request.html|Create a Canonical Request}\n*\n<pre>\nCanonicalRequest =\n    HTTPRequestMethod + '\\n' +\n    CanonicalURI + '\\n' +\n    CanonicalQueryString + '\\n' +\n    CanonicalHeaders + '\\n' +\n    SignedHeaders + '\\n' +\n    HexEncode(Hash(RequestPayload))\n</pre>\n*/\nconst canonical_request = function(request) {\n\tconst url_info = parse(request.url);\n\n\treturn [\n\t\trequest.method || '/',\n\t\tencodeURIComponent(url_info.pathname).replace(/%2F/gi, '/'),\n\t\tcanonical_query(url_info.query),\n\t\tcanonical_headers(request.headers),\n\t\tsigned_headers(request.headers),\n\t\thash(request.data),\n\t].join('\\n');\n};\n\nconst parse_service_info = function(request) {\n\tconst url_info = parse(request.url),\n\t\thost = url_info.host;\n\n\tconst matched = host.match(/([^\\.]+)\\.(?:([^\\.]*)\\.)?amazonaws\\.com$/);\n\tlet parsed = (matched || []).slice(1, 3);\n\n\tif (parsed[1] === 'es') {\n\t\t// Elastic Search\n\t\tparsed = parsed.reverse();\n\t}\n\n\treturn {\n\t\tservice: request.service || parsed[0],\n\t\tregion: request.region || parsed[1],\n\t};\n};\n\nconst credential_scope = function(d_str, region, service) {\n\treturn [d_str, region, service, 'aws4_request'].join('/');\n};\n\n/**\n* @private\n* Create a string to sign\n* Refer to\n* {@link http://docs.aws.amazon.com/general/latest/gr/sigv4-create-string-to-sign.html|Create String to Sign}\n*\n<pre>\nStringToSign =\n    Algorithm + \\n +\n    RequestDateTime + \\n +\n    CredentialScope + \\n +\n    HashedCanonicalRequest\n</pre>\n*/\nconst string_to_sign = function(algorithm, canonical_request, dt_str, scope) {\n\treturn [algorithm, dt_str, scope, hash(canonical_request)].join('\\n');\n};\n\n/**\n* @private\n* Create signing key\n* Refer to\n* {@link http://docs.aws.amazon.com/general/latest/gr/sigv4-calculate-signature.html|Calculate Signature}\n*\n<pre>\nkSecret = your secret access key\nkDate = HMAC(\"AWS4\" + kSecret, Date)\nkRegion = HMAC(kDate, Region)\nkService = HMAC(kRegion, Service)\nkSigning = HMAC(kService, \"aws4_request\")\n</pre>\n*/\nconst get_signing_key = function(secret_key, d_str, service_info) {\n\tlogger.debug(service_info);\n\tconst k = 'AWS4' + secret_key,\n\t\tk_date = encrypt(k, d_str),\n\t\tk_region = encrypt(k_date, service_info.region),\n\t\tk_service = encrypt(k_region, service_info.service),\n\t\tk_signing = encrypt(k_service, 'aws4_request');\n\n\treturn k_signing;\n};\n\nconst get_signature = function(signing_key, str_to_sign) {\n\treturn toHex(encrypt(signing_key, str_to_sign));\n};\n\n/**\n * @private\n * Create authorization header\n * Refer to\n * {@link http://docs.aws.amazon.com/general/latest/gr/sigv4-add-signature-to-request.html|Add the Signing Information}\n */\nconst get_authorization_header = function(\n\talgorithm,\n\taccess_key,\n\tscope,\n\tsigned_headers,\n\tsignature\n) {\n\treturn [\n\t\talgorithm + ' ' + 'Credential=' + access_key + '/' + scope,\n\t\t'SignedHeaders=' + signed_headers,\n\t\t'Signature=' + signature,\n\t].join(', ');\n};\n\nexport class Signer {\n\t/**\n    * Sign a HTTP request, add 'Authorization' header to request param\n    * @method sign\n    * @memberof Signer\n    * @static\n    *\n    * @param {object} request - HTTP request object\n    <pre>\n    request: {\n        method: GET | POST | PUT ...\n        url: ...,\n        headers: {\n            header1: ...\n        },\n        data: data\n    }\n    </pre>\n    * @param {object} access_info - AWS access credential info\n    <pre>\n    access_info: {\n        access_key: ...,\n        secret_key: ...,\n        session_token: ...\n    }\n    </pre>\n    * @param {object} [service_info] - AWS service type and region, optional,\n    *                                  if not provided then parse out from url\n    <pre>\n    service_info: {\n        service: ...,\n        region: ...\n    }\n    </pre>\n    *\n    * @returns {object} Signed HTTP request\n    */\n\tstatic sign(request, access_info, service_info = null) {\n\t\trequest.headers = request.headers || {};\n\n\t\tif (request.body && !request.data) {\n\t\t\tthrow new Error(\n\t\t\t\t'The attribute \"body\" was found on the request object. Please use the attribute \"data\" instead.'\n\t\t\t);\n\t\t}\n\n\t\t// datetime string and date string\n\t\tconst dt = DateUtils.getDateWithClockOffset(),\n\t\t\tdt_str = dt.toISOString().replace(/[:\\-]|\\.\\d{3}/g, ''),\n\t\t\td_str = dt_str.substr(0, 8);\n\n\t\tconst url_info = parse(request.url);\n\t\trequest.headers['host'] = url_info.host;\n\t\trequest.headers['x-amz-date'] = dt_str;\n\t\tif (access_info.session_token) {\n\t\t\trequest.headers['X-Amz-Security-Token'] = access_info.session_token;\n\t\t}\n\n\t\t// Task 1: Create a Canonical Request\n\t\tconst request_str = canonical_request(request);\n\t\tlogger.debug(request_str);\n\n\t\t// Task 2: Create a String to Sign\n\t\tconst serviceInfo = service_info || parse_service_info(request),\n\t\t\tscope = credential_scope(d_str, serviceInfo.region, serviceInfo.service),\n\t\t\tstr_to_sign = string_to_sign(\n\t\t\t\tDEFAULT_ALGORITHM,\n\t\t\t\trequest_str,\n\t\t\t\tdt_str,\n\t\t\t\tscope\n\t\t\t);\n\n\t\t// Task 3: Calculate the Signature\n\t\tconst signing_key = get_signing_key(\n\t\t\t\taccess_info.secret_key,\n\t\t\t\td_str,\n\t\t\t\tserviceInfo\n\t\t\t),\n\t\t\tsignature = get_signature(signing_key, str_to_sign);\n\n\t\t// Task 4: Adding the Signing information to the Request\n\t\tconst authorization_header = get_authorization_header(\n\t\t\tDEFAULT_ALGORITHM,\n\t\t\taccess_info.access_key,\n\t\t\tscope,\n\t\t\tsigned_headers(request.headers),\n\t\t\tsignature\n\t\t);\n\t\trequest.headers['Authorization'] = authorization_header;\n\n\t\treturn request;\n\t}\n\n\tstatic signUrl(\n\t\turlToSign: string,\n\t\taccessInfo: any,\n\t\tserviceInfo?: any,\n\t\texpiration?: number\n\t): string;\n\tstatic signUrl(\n\t\trequest: any,\n\t\taccessInfo: any,\n\t\tserviceInfo?: any,\n\t\texpiration?: number\n\t): string;\n\tstatic signUrl(\n\t\turlOrRequest: string | any,\n\t\taccessInfo: any,\n\t\tserviceInfo?: any,\n\t\texpiration?: number\n\t): string {\n\t\tconst urlToSign: string =\n\t\t\ttypeof urlOrRequest === 'object' ? urlOrRequest.url : urlOrRequest;\n\t\tconst method: string =\n\t\t\ttypeof urlOrRequest === 'object' ? urlOrRequest.method : 'GET';\n\t\tconst body: any =\n\t\t\ttypeof urlOrRequest === 'object' ? urlOrRequest.body : undefined;\n\n\t\tconst now = DateUtils.getDateWithClockOffset()\n\t\t\t.toISOString()\n\t\t\t.replace(/[:\\-]|\\.\\d{3}/g, '');\n\t\tconst today = now.substr(0, 8);\n\t\t// Intentionally discarding search\n\t\tconst { search, ...parsedUrl } = parse(urlToSign, true, true);\n\t\tconst { host } = parsedUrl;\n\t\tconst signedHeaders = { host };\n\n\t\tconst { region, service } =\n\t\t\tserviceInfo || parse_service_info({ url: format(parsedUrl) });\n\t\tconst credentialScope = credential_scope(today, region, service);\n\n\t\t// IoT service does not allow the session token in the canonical request\n\t\t// https://docs.aws.amazon.com/general/latest/gr/sigv4-add-signature-to-request.html\n\t\tconst sessionTokenRequired =\n\t\t\taccessInfo.session_token && service !== IOT_SERVICE_NAME;\n\t\tconst queryParams = {\n\t\t\t'X-Amz-Algorithm': DEFAULT_ALGORITHM,\n\t\t\t'X-Amz-Credential': [accessInfo.access_key, credentialScope].join('/'),\n\t\t\t'X-Amz-Date': now.substr(0, 16),\n\t\t\t...(sessionTokenRequired\n\t\t\t\t? { 'X-Amz-Security-Token': `${accessInfo.session_token}` }\n\t\t\t\t: {}),\n\t\t\t...(expiration ? { 'X-Amz-Expires': `${expiration}` } : {}),\n\t\t\t'X-Amz-SignedHeaders': Object.keys(signedHeaders).join(','),\n\t\t};\n\n\t\tconst canonicalRequest = canonical_request({\n\t\t\tmethod,\n\t\t\turl: format({\n\t\t\t\t...parsedUrl,\n\t\t\t\tquery: {\n\t\t\t\t\t...parsedUrl.query,\n\t\t\t\t\t...queryParams,\n\t\t\t\t},\n\t\t\t}),\n\t\t\theaders: signedHeaders,\n\t\t\tdata: body,\n\t\t});\n\n\t\tconst stringToSign = string_to_sign(\n\t\t\tDEFAULT_ALGORITHM,\n\t\t\tcanonicalRequest,\n\t\t\tnow,\n\t\t\tcredentialScope\n\t\t);\n\n\t\tconst signing_key = get_signing_key(accessInfo.secret_key, today, {\n\t\t\tregion,\n\t\t\tservice,\n\t\t});\n\t\tconst signature = get_signature(signing_key, stringToSign);\n\n\t\tconst additionalQueryParams = {\n\t\t\t'X-Amz-Signature': signature,\n\t\t\t...(accessInfo.session_token && {\n\t\t\t\t'X-Amz-Security-Token': accessInfo.session_token,\n\t\t\t}),\n\t\t};\n\n\t\tconst result = format({\n\t\t\tprotocol: parsedUrl.protocol,\n\t\t\tslashes: true,\n\t\t\thostname: parsedUrl.hostname,\n\t\t\tport: parsedUrl.port,\n\t\t\tpathname: parsedUrl.pathname,\n\t\t\tquery: {\n\t\t\t\t...parsedUrl.query,\n\t\t\t\t...queryParams,\n\t\t\t\t...additionalQueryParams,\n\t\t\t},\n\t\t});\n\n\t\treturn result;\n\t}\n}\n\n/**\n * @deprecated use per-function import\n */\nexport default Signer;\n", "const SHORT_TO_HEX: { [key: number]: string } = {};\nconst HEX_TO_SHORT: { [key: string]: number } = {};\n\nfor (let i = 0; i < 256; i++) {\n  let encodedByte = i.toString(16).toLowerCase();\n  if (encodedByte.length === 1) {\n    encodedByte = `0${encodedByte}`;\n  }\n\n  SHORT_TO_HEX[i] = encodedByte;\n  HEX_TO_SHORT[encodedByte] = i;\n}\n\n/**\n * Converts a hexadecimal encoded string to a Uint8Array of bytes.\n *\n * @param encoded The hexadecimal encoded string\n */\nexport function fromHex(encoded: string): Uint8Array {\n  if (encoded.length % 2 !== 0) {\n    throw new Error(\"Hex encoded strings must have an even number length\");\n  }\n\n  const out = new Uint8Array(encoded.length / 2);\n  for (let i = 0; i < encoded.length; i += 2) {\n    const encodedByte = encoded.substr(i, 2).toLowerCase();\n    if (encodedByte in HEX_TO_SHORT) {\n      out[i / 2] = HEX_TO_SHORT[encodedByte];\n    } else {\n      throw new Error(`Cannot decode unrecognized sequence ${encodedByte} as hexadecimal`);\n    }\n  }\n\n  return out;\n}\n\n/**\n * Converts a Uint8Array of binary data to a hexadecimal encoded string.\n *\n * @param bytes The binary data to encode\n */\nexport function toHex(bytes: Uint8Array): string {\n  let out = \"\";\n  for (let i = 0; i < bytes.byteLength; i++) {\n    out += SHORT_TO_HEX[bytes[i]];\n  }\n\n  return out;\n}\n", "import { DelayFunction } from '../types';\nimport { ConsoleLogger as Logger } from '../Logger/ConsoleLogger';\nconst logger = new Logger('Util');\n\nexport class NonRetryableError extends Error {\n\tpublic readonly nonRetryable = true;\n\tconstructor(message: string) {\n\t\tsuper(message);\n\t}\n}\n\nconst isNonRetryableError = (obj: any): obj is NonRetryableError => {\n\tconst key: keyof NonRetryableError = 'nonRetryable';\n\treturn obj && obj[key];\n};\n\n/**\n * @private\n * Internal use of Amplify only\n */\nexport async function retry<T>(\n\tfunctionToRetry: (...args: any[]) => T,\n\targs: any[],\n\tdelayFn: DelayFunction,\n\tonTerminate?: Promise<void>\n): Promise<T> {\n\tif (typeof functionToRetry !== 'function') {\n\t\tthrow Error('functionToRetry must be a function');\n\t}\n\n\treturn new Promise(async (resolve, reject) => {\n\t\tlet attempt = 0;\n\t\tlet terminated = false;\n\t\tlet timeout: any;\n\t\tlet wakeUp: any = () => {}; // will be replaced with a resolver()\n\n\t\t// used after the loop if terminated while waiting for a timer.\n\t\tlet lastError: Error;\n\n\t\tonTerminate &&\n\t\t\tonTerminate.then(() => {\n\t\t\t\t// signal not to try anymore.\n\t\t\t\tterminated = true;\n\n\t\t\t\t// stop sleeping if we're sleeping.\n\t\t\t\tclearTimeout(timeout);\n\t\t\t\twakeUp();\n\t\t\t});\n\n\t\twhile (!terminated) {\n\t\t\tattempt++;\n\n\t\t\tlogger.debug(\n\t\t\t\t`${\n\t\t\t\t\tfunctionToRetry.name\n\t\t\t\t} attempt #${attempt} with this vars: ${JSON.stringify(args)}`\n\t\t\t);\n\n\t\t\ttry {\n\t\t\t\treturn resolve(await functionToRetry(...args));\n\t\t\t} catch (err) {\n\t\t\t\tlastError = err;\n\t\t\t\tlogger.debug(`error on ${functionToRetry.name}`, err);\n\n\t\t\t\tif (isNonRetryableError(err)) {\n\t\t\t\t\tlogger.debug(`${functionToRetry.name} non retryable error`, err);\n\t\t\t\t\treturn reject(err);\n\t\t\t\t}\n\n\t\t\t\tconst retryIn = delayFn(attempt, args, err);\n\t\t\t\tlogger.debug(`${functionToRetry.name} retrying in ${retryIn} ms`);\n\n\t\t\t\t// we check `terminated` again here because it could have flipped\n\t\t\t\t// in the time it took `functionToRetry` to return.\n\t\t\t\tif (retryIn === false || terminated) {\n\t\t\t\t\treturn reject(err);\n\t\t\t\t} else {\n\t\t\t\t\tawait new Promise(r => {\n\t\t\t\t\t\twakeUp = r; // export wakeUp for onTerminate handling\n\t\t\t\t\t\ttimeout = setTimeout(wakeUp, retryIn);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// reached if terminated while waiting for a timer.\n\t\treject(lastError);\n\t});\n}\n\nconst MAX_DELAY_MS = 5 * 60 * 1000;\n\n/**\n * @private\n * Internal use of Amplify only\n */\nexport function jitteredBackoff(\n\tmaxDelayMs: number = MAX_DELAY_MS\n): DelayFunction {\n\tconst BASE_TIME_MS = 100;\n\tconst JITTER_FACTOR = 100;\n\n\treturn attempt => {\n\t\tconst delay = 2 ** attempt * BASE_TIME_MS + JITTER_FACTOR * Math.random();\n\t\treturn delay > maxDelayMs ? false : delay;\n\t};\n}\n\n/**\n * @private\n * Internal use of Amplify only\n */\nexport const jitteredExponentialRetry = <T>(\n\tfunctionToRetry: (...args: any[]) => T,\n\targs: any[],\n\tmaxDelayMs: number = MAX_DELAY_MS,\n\tonTerminate?: Promise<void>\n): Promise<T> =>\n\tretry(functionToRetry, args, jitteredBackoff(maxDelayMs), onTerminate);\n", "/*!\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 Christian Speckner <cnspeckn@googlemail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\ninterface MutexInterface {\n\tacquire(): Promise<MutexInterface.Releaser>;\n\n\trunExclusive<T>(callback: MutexInterface.Worker<T>): Promise<T>;\n\n\tisLocked(): boolean;\n}\n\nnamespace MutexInterface {\n\texport interface Releaser {\n\t\t(): void;\n\t}\n\n\texport interface Worker<T> {\n\t\t(): Promise<T> | T;\n\t}\n}\n\nclass Mutex implements MutexInterface {\n\tisLocked(): boolean {\n\t\treturn this._pending;\n\t}\n\n\tacquire(): Promise<MutexInterface.Releaser> {\n\t\tconst ticket = new Promise<MutexInterface.Releaser>(resolve =>\n\t\t\tthis._queue.push(resolve)\n\t\t);\n\n\t\tif (!this._pending) {\n\t\t\tthis._dispatchNext();\n\t\t}\n\n\t\treturn ticket;\n\t}\n\n\trunExclusive<T>(callback: MutexInterface.Worker<T>): Promise<T> {\n\t\treturn this.acquire().then(release => {\n\t\t\tlet result: T | Promise<T>;\n\n\t\t\ttry {\n\t\t\t\tresult = callback();\n\t\t\t} catch (e) {\n\t\t\t\trelease();\n\t\t\t\tthrow e;\n\t\t\t}\n\n\t\t\treturn Promise.resolve(result).then(\n\t\t\t\t(x: T) => (release(), x),\n\t\t\t\te => {\n\t\t\t\t\trelease();\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n\n\tprivate _dispatchNext(): void {\n\t\tif (this._queue.length > 0) {\n\t\t\tthis._pending = true;\n\t\t\tthis._queue.shift()!(this._dispatchNext.bind(this));\n\t\t} else {\n\t\t\tthis._pending = false;\n\t\t}\n\t}\n\n\tprivate _queue: Array<(release: MutexInterface.Releaser) => void> = [];\n\tprivate _pending = false;\n}\n\nexport default Mutex;\n", "/* tslint:disable */\n\nimport zenObservable from 'zen-observable';\n\nnamespace Observable {\n\n}\n\nimport { ZenObservable } from './types';\n\nexport { ZenObservable };\n\nexport type Observer<T> = ZenObservable.Observer<T>;\nexport type Subscriber<T> = ZenObservable.Subscriber<T>;\nexport type ObservableLike<T> = ZenObservable.ObservableLike<T>;\n\nexport const Observable: {\n  new <T>(subscriber: Subscriber<T>): Observable<T>;\n  from<R>(\n    observable: Observable<R> | ZenObservable.ObservableLike<R> | ArrayLike<R>,\n  ): Observable<R>;\n  of<R>(...args: Array<R>): Observable<R>;\n} = <any>zenObservable;\n\nexport interface Observable<T> {\n  subscribe(\n    observerOrNext: ((value: T) => void) | ZenObservable.Observer<T>,\n    error?: (error: any) => void,\n    complete?: () => void,\n  ): ZenObservable.Subscription;\n\n  forEach(fn: (value: T) => void): Promise<void>;\n\n  map<R>(fn: (value: T) => R): Observable<R>;\n\n  filter(fn: (value: T) => boolean): Observable<T>;\n\n  reduce<R = T>(\n    fn: (previousValue: R | T, currentValue: T) => R | T,\n    initialValue?: R | T,\n  ): Observable<R | T>;\n\n  flatMap<R>(fn: (value: T) => ZenObservable.ObservableLike<R>): Observable<R>;\n\n  from<R>(\n    observable: Observable<R> | ZenObservable.ObservableLike<R> | ArrayLike<R>,\n  ): Observable<R>;\n  of<R>(...args: Array<R>): Observable<R>;\n}\n", "import { browserOrNode, isWebWorker } from '@aws-amplify/core';\nimport Observable, { ZenObservable } from 'zen-observable-ts';\n\ntype NetworkStatus = {\n\tonline: boolean;\n};\n\nexport default class ReachabilityNavigator implements Reachability {\n\tprivate static _observers: Array<\n\t\tZenObservable.SubscriptionObserver<NetworkStatus>\n\t> = [];\n\n\tnetworkMonitor(netInfo?: any): Observable<NetworkStatus> {\n\t\tif (browserOrNode().isNode) {\n\t\t\treturn Observable.from([{ online: true }]);\n\t\t}\n\n\t\tconst globalObj = isWebWorker() ? self : window;\n\n\t\treturn new Observable(observer => {\n\t\t\tobserver.next({ online: globalObj.navigator.onLine });\n\n\t\t\tconst notifyOnline = () => observer.next({ online: true });\n\t\t\tconst notifyOffline = () => observer.next({ online: false });\n\n\t\t\tglobalObj.addEventListener('online', notifyOnline);\n\t\t\tglobalObj.addEventListener('offline', notifyOffline);\n\n\t\t\tReachabilityNavigator._observers.push(observer);\n\n\t\t\treturn () => {\n\t\t\t\tglobalObj.removeEventListener('online', notifyOnline);\n\t\t\t\tglobalObj.removeEventListener('offline', notifyOffline);\n\n\t\t\t\tReachabilityNavigator._observers = ReachabilityNavigator._observers.filter(\n\t\t\t\t\t_observer => _observer !== observer\n\t\t\t\t);\n\t\t\t};\n\t\t});\n\t}\n\n\t// expose observers to simulate offline mode for integration testing\n\tprivate static _observerOverride(status: NetworkStatus): void {\n\t\tfor (const observer of ReachabilityNavigator._observers) {\n\t\t\tif (observer.closed) {\n\t\t\t\tReachabilityNavigator._observers = ReachabilityNavigator._observers.filter(\n\t\t\t\t\t_observer => _observer !== observer\n\t\t\t\t);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tobserver.next(status);\n\t\t}\n\t}\n}\n\ninterface Reachability {\n\tnetworkMonitor(netInfo?: any): Observable<NetworkStatus>;\n}\n", "/**\n * Date & time utility functions to abstract the `aws-sdk` away from users.\n * (v2 => v3 modularization is a breaking change)\n *\n * @see https://github.com/aws/aws-sdk-js/blob/6edf586dcc1de7fe8fbfbbd9a0d2b1847921e6e1/lib/util.js#L262\n */\n\n// Comment - TODO: remove\n\nconst FIVE_MINUTES_IN_MS = 1000 * 60 * 5;\n\nexport const DateUtils = {\n\t/**\n\t * Milliseconds to offset the date to compensate for clock skew between device & services\n\t */\n\tclockOffset: 0,\n\n\tgetDateWithClockOffset() {\n\t\tif (DateUtils.clockOffset) {\n\t\t\treturn new Date(new Date().getTime() + DateUtils.clockOffset);\n\t\t} else {\n\t\t\treturn new Date();\n\t\t}\n\t},\n\n\t/**\n\t * @returns {number} Clock offset in milliseconds\n\t */\n\tgetClockOffset() {\n\t\treturn DateUtils.clockOffset;\n\t},\n\n\tgetHeaderStringFromDate(date: Date = DateUtils.getDateWithClockOffset()) {\n\t\treturn date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n\t},\n\n\tgetDateFromHeaderString(header: string) {\n\t\tconst [, year, month, day, hour, minute, second] = header.match(\n\t\t\t/^(\\d{4})(\\d{2})(\\d{2})T(\\d{2})(\\d{2})(\\d{2}).+/\n\t\t);\n\n\t\treturn new Date(\n\t\t\tDate.UTC(\n\t\t\t\tNumber(year),\n\t\t\t\tNumber(month) - 1,\n\t\t\t\tNumber(day),\n\t\t\t\tNumber(hour),\n\t\t\t\tNumber(minute),\n\t\t\t\tNumber(second)\n\t\t\t)\n\t\t);\n\t},\n\n\tisClockSkewed(serverDate: Date) {\n\t\t// API gateway permits client calls that are off by no more than \u00B15 minutes\n\t\treturn (\n\t\t\tMath.abs(\n\t\t\t\tserverDate.getTime() - DateUtils.getDateWithClockOffset().getTime()\n\t\t\t) >= FIVE_MINUTES_IN_MS\n\t\t);\n\t},\n\n\tisClockSkewError(error: any) {\n\t\tif (!error.response || !error.response.headers) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst { headers } = error.response;\n\n\t\treturn Boolean(\n\t\t\t['BadRequestException', 'InvalidSignatureException'].includes(\n\t\t\t\theaders['x-amzn-errortype']\n\t\t\t) &&\n\t\t\t\t(headers.date || headers.Date)\n\t\t);\n\t},\n\n\t/**\n\t * @param {number} offset Clock offset in milliseconds\n\t */\n\tsetClockOffset(offset: number) {\n\t\tDateUtils.clockOffset = offset;\n\t},\n};\n", "export function urlSafeEncode(str: string) {\n\treturn str\n\t\t.split('')\n\t\t.map(char =>\n\t\t\tchar\n\t\t\t\t.charCodeAt(0)\n\t\t\t\t.toString(16)\n\t\t\t\t.padStart(2, '0')\n\t\t)\n\t\t.join('');\n}\n\nexport function urlSafeDecode(hex: string) {\n\treturn hex\n\t\t.match(/.{2}/g)\n\t\t.map(char => String.fromCharCode(parseInt(char, 16)))\n\t\t.join('');\n}\n", "/**\n * @private For internal Amplify use.\n *\n * Creates a new scope for promises, observables, and other types of work or\n * processes that may be running in the background. This manager provides\n * an singular entrypoint to request termination and await completion.\n *\n * As work completes on its own prior to close, the manager removes them\n * from the registry to avoid holding references to completed jobs.\n */\nexport class BackgroundProcessManager {\n\t/**\n\t * A string indicating whether the manager is accepting new work (\"Open\"),\n\t * waiting for work to complete (\"Closing\"), or fully done with all\n\t * submitted work and *not* accepting new jobs (\"Closed\").\n\t */\n\tprivate _state = BackgroundProcessManagerState.Open;\n\n\tprivate _closingPromise: Promise<PromiseSettledResult<any>[]> | undefined;\n\n\t/**\n\t * The list of outstanding jobs we'll need to wait for upon `close()`\n\t */\n\tprivate jobs = new Set<JobEntry>();\n\n\t/**\n\t * Creates a new manager for promises, observables, and other types\n\t * of work that may be running in the background. This manager provides\n\t * a centralized mechanism to request termination and await completion.\n\t */\n\tconstructor() {}\n\n\t/**\n\t * Executes an async `job` function, passing the return value through to\n\t * the caller, registering it as a running job in the manager. When the\n\t * manager *closes*, it will `await` the job.\n\t *\n\t * @param job The function to execute.\n\t * @param description Optional description to help identify pending jobs.\n\t * @returns The return value from the given function.\n\t */\n\tadd<T>(job: () => Promise<T>, description?: string): Promise<T>;\n\n\t/**\n\t * Executes an async `job` function, passing the return value through to\n\t * the caller, registering it as a running job in the manager. When the\n\t * manager *closes*, it will request termination by resolving the\n\t * provided `onTerminate` promise. It will then `await` the job, so it is\n\t * important that the job still `resolve()` or `reject()` when responding\n\t * to a termination request.\n\t *\n\t * @param job The function to execute.\n\t * @param description Optional description to help identify pending jobs.\n\t * @returns The return value from the given function.\n\t */\n\tadd<T>(\n\t\tjob: (onTerminate: Promise<void>) => Promise<T>,\n\t\tdescription?: string\n\t): Promise<T>;\n\n\t/**\n\t * Create a no-op job, registers it with the manager, and returns hooks\n\t * to the caller to signal the job's completion and respond to termination\n\t * requests.\n\t *\n\t * When the manager closes, the no-op job will be `await`-ed, so its\n\t * important to always `resolve()` or `reject()` when done responding to an\n\t * `onTerminate` signal.\n\t * @param description Optional description to help identify pending jobs.\n\t * @returns Job promise hooks + onTerminate signaling promise\n\t */\n\tadd(description?: string): {\n\t\tresolve: (value?: unknown) => void;\n\t\treject: (reason?: any) => void;\n\t\tonTerminate: Promise<void>;\n\t};\n\n\t/**\n\t * Adds another job manager to await on at the time of closing. the inner\n\t * manager's termination is signaled when this manager's `close()` is\n\t * called for.\n\t *\n\t * @param job The inner job manager to await.\n\t * @param description Optional description to help identify pending jobs.\n\t */\n\tadd(job: BackgroundProcessManager, description?: string);\n\n\tadd(jobOrDescription?, optionalDescription?) {\n\t\tlet job;\n\t\tlet description: string;\n\n\t\tif (typeof jobOrDescription === 'string') {\n\t\t\tjob = undefined;\n\t\t\tdescription = jobOrDescription;\n\t\t} else {\n\t\t\tjob = jobOrDescription;\n\t\t\tdescription = optionalDescription;\n\t\t}\n\n\t\tconst error = this.closedFailure(description);\n\t\tif (error) return error;\n\n\t\tif (job === undefined) {\n\t\t\treturn this.addHook(description);\n\t\t} else if (typeof job === 'function') {\n\t\t\treturn this.addFunction(job, description);\n\t\t} else if (job instanceof BackgroundProcessManager) {\n\t\t\treturn this.addManager(job, description);\n\t\t} else {\n\t\t\tthrow new Error(\n\t\t\t\t'If `job` is provided, it must be an Observable, Function, or BackgroundProcessManager.'\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Adds a **cleaner** function that doesn't immediately get executed.\n\t * Instead, the caller gets a **terminate** function back. The *cleaner* is\n\t * invoked only once the mananger *closes* or the returned **terminate**\n\t * function is called.\n\t *\n\t * @param clean The cleanup function.\n\t * @param description Optional description to help identify pending jobs.\n\t * @returns A terminate function.\n\t */\n\taddCleaner<T>(\n\t\tclean: () => Promise<T>,\n\t\tdescription?: string\n\t): () => Promise<void> {\n\t\tconst { resolve, onTerminate } = this.addHook(description);\n\n\t\tconst proxy = async () => {\n\t\t\tawait clean();\n\t\t\tresolve();\n\t\t};\n\n\t\tonTerminate.then(proxy);\n\n\t\treturn proxy;\n\t}\n\n\tprivate addFunction<T>(\n\t\tjob: () => Promise<T>,\n\t\tdescription?: string\n\t): Promise<T>;\n\tprivate addFunction<T>(\n\t\tjob: (onTerminate: Promise<void>) => Promise<T>,\n\t\tdescription?: string\n\t): Promise<T>;\n\tprivate addFunction(job, description) {\n\t\t// the function we call when we want to try to terminate this job.\n\t\tlet terminate;\n\n\t\t// the promise the job can opt into listening to for termination.\n\t\tconst onTerminate = new Promise(resolve => {\n\t\t\tterminate = resolve;\n\t\t});\n\n\t\t// finally! start the job.\n\t\tconst jobResult = job(onTerminate);\n\n\t\t// depending on what the job gives back, register the result\n\t\t// so we can monitor for completion.\n\t\tif (typeof jobResult?.then === 'function') {\n\t\t\tthis.registerPromise(jobResult, terminate, description);\n\t\t}\n\n\t\t// At the end of the day, or you know, method call, it doesn't matter\n\t\t// what the return value is at all; we just pass it through to the\n\t\t// caller.\n\t\treturn jobResult;\n\t}\n\n\tprivate addManager(manager: BackgroundProcessManager, description?: string) {\n\t\tthis.addCleaner(async () => await manager.close(), description);\n\t}\n\n\t/**\n\t * Creates and registers a fabricated job for processes that need to operate\n\t * with callbacks/hooks. The returned `resolve` and `reject`\n\t * functions can be used to signal the job is done successfully or not.\n\t * The returned `onTerminate` is a promise that will resolve when the\n\t * manager is requesting the termination of the job.\n\t *\n\t * @param description Optional description to help identify pending jobs.\n\t * @returns `{ resolve, reject, onTerminate }`\n\t */\n\tprivate addHook(description?: string) {\n\t\t// the resolve/reject functions we'll provide to the caller to signal\n\t\t// the state of the job.\n\t\tlet resolve!: (value?: unknown) => void;\n\t\tlet reject!: (reason?: any) => void;\n\n\t\t// the underlying promise we'll use to manage it, pretty much like\n\t\t// any other promise.\n\t\tconst promise = new Promise((res, rej) => {\n\t\t\tresolve = res;\n\t\t\treject = rej;\n\t\t});\n\n\t\t// the function we call when we want to try to terminate this job.\n\t\tlet terminate;\n\n\t\t// the promise the job can opt into listening to for termination.\n\t\tconst onTerminate = new Promise(resolveTerminate => {\n\t\t\tterminate = resolveTerminate;\n\t\t});\n\n\t\tthis.registerPromise(promise, terminate, description);\n\n\t\treturn {\n\t\t\tresolve,\n\t\t\treject,\n\t\t\tonTerminate,\n\t\t};\n\t}\n\n\t/**\n\t * Adds a Promise based job to the list of jobs for monitoring and listens\n\t * for either a success or failure, upon which the job is considered \"done\"\n\t * and removed from the registry.\n\t *\n\t * @param promise A promise that is on its way to being returned to a\n\t * caller, which needs to be tracked as a background job.\n\t * @param terminate The termination function to register, which can be\n\t * invoked to request the job stop.\n\t * @param description Optional description to help identify pending jobs.\n\t */\n\tprivate registerPromise<T extends Promise<any>>(\n\t\tpromise: T,\n\t\tterminate: () => void,\n\t\tdescription?: string\n\t) {\n\t\tconst jobEntry = { promise, terminate, description };\n\t\tthis.jobs.add(jobEntry);\n\n\t\t// in all of my testing, it is safe to multi-subscribe to a promise.\n\t\t// so, rather than create another layer of promising, we're just going\n\t\t// to hook into the promise we already have, and when it's done\n\t\t// (successfully or not), we no longer need to wait for it upon close.\n\n\t\t//\n\t\t// sorry this is a bit hand-wavy:\n\t\t//\n\t\t// i believe we use `.then` and `.catch` instead of `.finally` because\n\t\t// `.finally` is invoked in a different order in the sequence, and this\n\t\t// breaks assumptions throughout and causes failures.\n\t\tpromise\n\t\t\t.then(() => {\n\t\t\t\tthis.jobs.delete(jobEntry);\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\tthis.jobs.delete(jobEntry);\n\t\t\t});\n\t}\n\n\t/**\n\t * The number of jobs being waited on.\n\t *\n\t * We don't use this for anything. It's just informational for the caller,\n\t * and can be used in logging and testing.\n\t *\n\t * @returns the number of jobs.\n\t */\n\tget length() {\n\t\treturn this.jobs.size;\n\t}\n\n\t/**\n\t * The execution state of the manager. One of:\n\t *\n\t * 1. \"Open\" -> Accepting new jobs\n\t * 1. \"Closing\" -> Not accepting new work. Waiting for jobs to complete.\n\t * 1. \"Closed\" -> Not accepting new work. All submitted jobs are complete.\n\t */\n\tget state() {\n\t\treturn this._state;\n\t}\n\n\t/**\n\t * The registered `description` of all still-pending jobs.\n\t *\n\t * @returns descriptions as an array.\n\t */\n\tget pending() {\n\t\treturn Array.from(this.jobs).map(job => job.description);\n\t}\n\n\t/**\n\t * Whether the manager is accepting new jobs.\n\t */\n\tget isOpen() {\n\t\treturn this._state === BackgroundProcessManagerState.Open;\n\t}\n\n\t/**\n\t * Whether the manager is rejecting new work, but still waiting for\n\t * submitted work to complete.\n\t */\n\tget isClosing() {\n\t\treturn this._state === BackgroundProcessManagerState.Closing;\n\t}\n\n\t/**\n\t * Whether the manager is rejecting work and done waiting for submitted\n\t * work to complete.\n\t */\n\tget isClosed() {\n\t\treturn this._state === BackgroundProcessManagerState.Closed;\n\t}\n\n\tprivate closedFailure(description: string) {\n\t\tif (!this.isOpen) {\n\t\t\treturn Promise.reject(\n\t\t\t\tnew BackgroundManagerNotOpenError(\n\t\t\t\t\t[\n\t\t\t\t\t\t`The manager is ${this.state}.`,\n\t\t\t\t\t\t`You tried to add \"${description}\".`,\n\t\t\t\t\t\t`Pending jobs: [\\n${this.pending\n\t\t\t\t\t\t\t.map(t => '    ' + t)\n\t\t\t\t\t\t\t.join(',\\n')}\\n]`,\n\t\t\t\t\t].join('\\n')\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Signals jobs to stop (for those that accept interruptions) and waits\n\t * for confirmation that jobs have stopped.\n\t *\n\t * This immediately puts the manager into a closing state and just begins\n\t * to reject new work. After all work in the manager is complete, the\n\t * manager goes into a `Completed` state and `close()` returns.\n\t *\n\t * This call is idempotent.\n\t *\n\t * If the manager is already closing or closed, `finalCleaup` is not executed.\n\t *\n\t * @param onClosed\n\t * @returns The settled results of each still-running job's promise. If the\n\t * manager is already closed, this will contain the results as of when the\n\t * manager's `close()` was called in an `Open` state.\n\t */\n\tasync close() {\n\t\tif (this.isOpen) {\n\t\t\tthis._state = BackgroundProcessManagerState.Closing;\n\t\t\tfor (const job of Array.from(this.jobs)) {\n\t\t\t\ttry {\n\t\t\t\t\tjob.terminate();\n\t\t\t\t} catch (error) {\n\t\t\t\t\t// Due to potential races with a job's natural completion, it's\n\t\t\t\t\t// reasonable to expect the termination call to fail. Hence,\n\t\t\t\t\t// not logging as an error.\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t`Failed to send termination signal to job. Error: ${error.message}`,\n\t\t\t\t\t\tjob\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Use `allSettled()` because we want to wait for all to finish. We do\n\t\t\t// not want to stop waiting if there is a failure.\n\t\t\tthis._closingPromise = Promise.allSettled(\n\t\t\t\tArray.from(this.jobs).map(j => j.promise)\n\t\t\t);\n\n\t\t\tawait this._closingPromise;\n\t\t\tthis._state = BackgroundProcessManagerState.Closed;\n\t\t}\n\n\t\treturn this._closingPromise as any;\n\t}\n\n\t/**\n\t * Signals the manager to start accepting work (again) and returns once\n\t * the manager is ready to do so.\n\t *\n\t * If the state is already `Open`, this call is a no-op.\n\t *\n\t * If the state is `Closed`, this call simply updates state and returns.\n\t *\n\t * If the state is `Closing`, this call waits for completion before it\n\t * updates the state and returns.\n\t */\n\tasync open() {\n\t\tif (this.isClosing) {\n\t\t\tawait this.close();\n\t\t}\n\n\t\tthis._state = BackgroundProcessManagerState.Open;\n\t}\n}\n\n/**\n *\n */\nexport class BackgroundManagerNotOpenError extends Error {\n\tconstructor(message: string) {\n\t\tsuper(`BackgroundManagerNotOpenError: ${message}`);\n\t}\n}\n\n/**\n * All possible states a `BackgroundProcessManager` instance can be in.\n */\nexport enum BackgroundProcessManagerState {\n\t/**\n\t * Accepting new jobs.\n\t */\n\tOpen = 'Open',\n\n\t/**\n\t * Not accepting new jobs. Waiting for submitted jobs to complete.\n\t */\n\tClosing = 'Closing',\n\n\t/**\n\t * Not accepting new jobs. All submitted jobs are complete.\n\t */\n\tClosed = 'Closed',\n}\n\n/**\n * Completely internal to `BackgroundProcessManager`, and describes the structure of\n * an entry in the jobs registry.\n */\ntype JobEntry = {\n\t/**\n\t * The underlying promise provided by the job function to wait for.\n\t */\n\tpromise: Promise<any>;\n\n\t/**\n\t * Request the termination of the job.\n\t */\n\tterminate: () => void;\n\n\t/**\n\t * An object provided by the caller that can be used to identify the description\n\t * of the job, which can otherwise be unclear from the `promise` and\n\t * `terminate` function. The `description` can be a string. (May be extended\n\t * later to also support object refs.)\n\t *\n\t * Useful for troubleshooting why a manager is waiting for long periods of time\n\t * on `close()`.\n\t */\n\tdescription?: string;\n};\n", "import { AmplifyConfig } from './types';\nimport { ConsoleLogger as Logger } from './Logger';\n\nconst logger = new Logger('Parser');\n\nexport const parseMobileHubConfig = (config): AmplifyConfig => {\n\tconst amplifyConfig: AmplifyConfig = {};\n\t// Analytics\n\tif (config['aws_mobile_analytics_app_id']) {\n\t\tconst Analytics = {\n\t\t\tAWSPinpoint: {\n\t\t\t\tappId: config['aws_mobile_analytics_app_id'],\n\t\t\t\tregion: config['aws_mobile_analytics_app_region'],\n\t\t\t},\n\t\t};\n\t\tamplifyConfig.Analytics = Analytics;\n\t}\n\n\t// Auth\n\tif (config['aws_cognito_identity_pool_id'] || config['aws_user_pools_id']) {\n\t\tamplifyConfig.Auth = {\n\t\t\tuserPoolId: config['aws_user_pools_id'],\n\t\t\tuserPoolWebClientId: config['aws_user_pools_web_client_id'],\n\t\t\tregion: config['aws_cognito_region'],\n\t\t\tidentityPoolId: config['aws_cognito_identity_pool_id'],\n\t\t\tidentityPoolRegion: config['aws_cognito_region'],\n\t\t\tmandatorySignIn: config['aws_mandatory_sign_in'] === 'enable',\n\t\t\tsignUpVerificationMethod:\n\t\t\t\tconfig['aws_cognito_sign_up_verification_method'] || 'code',\n\t\t};\n\t}\n\n\t// Storage\n\tlet storageConfig;\n\tif (config['aws_user_files_s3_bucket']) {\n\t\tstorageConfig = {\n\t\t\tAWSS3: {\n\t\t\t\tbucket: config['aws_user_files_s3_bucket'],\n\t\t\t\tregion: config['aws_user_files_s3_bucket_region'],\n\t\t\t\tdangerouslyConnectToHttpEndpointForTesting:\n\t\t\t\t\tconfig[\n\t\t\t\t\t\t'aws_user_files_s3_dangerously_connect_to_http_endpoint_for_testing'\n\t\t\t\t\t],\n\t\t\t},\n\t\t};\n\t} else {\n\t\tstorageConfig = config ? config.Storage || config : {};\n\t}\n\n\t// Logging\n\tif (config['Logging']) {\n\t\tamplifyConfig.Logging = {\n\t\t\t...config['Logging'],\n\t\t\tregion: config['aws_project_region'],\n\t\t};\n\t}\n\n\t// Geo\n\tif (config['geo']) {\n\t\tamplifyConfig.Geo = Object.assign({}, config.geo);\n\t\tif (config.geo['amazon_location_service']) {\n\t\t\tamplifyConfig.Geo = {\n\t\t\t\tAmazonLocationService: config.geo['amazon_location_service'],\n\t\t\t};\n\t\t}\n\t}\n\n\tamplifyConfig.Analytics = Object.assign(\n\t\t{},\n\t\tamplifyConfig.Analytics,\n\t\tconfig.Analytics\n\t);\n\tamplifyConfig.Auth = Object.assign({}, amplifyConfig.Auth, config.Auth);\n\tamplifyConfig.Storage = Object.assign({}, storageConfig);\n\tamplifyConfig.Logging = Object.assign(\n\t\t{},\n\t\tamplifyConfig.Logging,\n\t\tconfig.Logging\n\t);\n\tlogger.debug('parse config', config, 'to amplifyconfig', amplifyConfig);\n\treturn amplifyConfig;\n};\n\n/**\n * @deprecated use per-function export\n */\nexport class Parser {\n\tstatic parseMobilehubConfig = parseMobileHubConfig;\n}\n\n/**\n * @deprecated use per-function export\n */\nexport default Parser;\n", "/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.unshift(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.unshift(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport function __addDisposableResource(env, value, async) {\r\n    if (value !== null && value !== void 0) {\r\n        if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\r\n        var dispose;\r\n        if (async) {\r\n            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\r\n            dispose = value[Symbol.asyncDispose];\r\n        }\r\n        if (dispose === void 0) {\r\n            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\r\n            dispose = value[Symbol.dispose];\r\n        }\r\n        if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\r\n        env.stack.push({ value: value, dispose: dispose, async: async });\r\n    }\r\n    else if (async) {\r\n        env.stack.push({ async: true });\r\n    }\r\n    return value;\r\n}\r\n\r\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\r\n\r\nexport function __disposeResources(env) {\r\n    function fail(e) {\r\n        env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\r\n        env.hasError = true;\r\n    }\r\n    function next() {\r\n        while (env.stack.length) {\r\n            var rec = env.stack.pop();\r\n            try {\r\n                var result = rec.dispose && rec.dispose.call(rec.value);\r\n                if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\r\n            }\r\n            catch (e) {\r\n                fail(e);\r\n            }\r\n        }\r\n        if (env.hasError) throw env.error;\r\n    }\r\n    return next();\r\n}\r\n\r\nexport default {\r\n    __extends: __extends,\r\n    __assign: __assign,\r\n    __rest: __rest,\r\n    __decorate: __decorate,\r\n    __param: __param,\r\n    __metadata: __metadata,\r\n    __awaiter: __awaiter,\r\n    __generator: __generator,\r\n    __createBinding: __createBinding,\r\n    __exportStar: __exportStar,\r\n    __values: __values,\r\n    __read: __read,\r\n    __spread: __spread,\r\n    __spreadArrays: __spreadArrays,\r\n    __spreadArray: __spreadArray,\r\n    __await: __await,\r\n    __asyncGenerator: __asyncGenerator,\r\n    __asyncDelegator: __asyncDelegator,\r\n    __asyncValues: __asyncValues,\r\n    __makeTemplateObject: __makeTemplateObject,\r\n    __importStar: __importStar,\r\n    __importDefault: __importDefault,\r\n    __classPrivateFieldGet: __classPrivateFieldGet,\r\n    __classPrivateFieldSet: __classPrivateFieldSet,\r\n    __classPrivateFieldIn: __classPrivateFieldIn,\r\n    __addDisposableResource: __addDisposableResource,\r\n    __disposeResources: __disposeResources,\r\n};\r\n", "import packageInfo from \"./package.json\";\n\nimport { Sha256 } from \"@aws-crypto/sha256-browser\";\nimport { FetchHttpHandler, streamCollector } from \"@aws-sdk/fetch-http-handler\";\nimport { invalidProvider } from \"@aws-sdk/invalid-dependency\";\nimport { DEFAULT_MAX_ATTEMPTS } from \"@aws-sdk/middleware-retry\";\nimport { fromBase64, toBase64 } from \"@aws-sdk/util-base64-browser\";\nimport { calculateBodyLength } from \"@aws-sdk/util-body-length-browser\";\nimport { defaultUserAgent } from \"@aws-sdk/util-user-agent-browser\";\nimport { fromUtf8, toUtf8 } from \"@aws-sdk/util-utf8-browser\";\nimport { ClientDefaults } from \"./CloudWatchLogsClient\";\nimport { ClientSharedValues } from \"./runtimeConfig.shared\";\n\n/**\n * @internal\n */\nexport const ClientDefaultValues: Required<ClientDefaults> = {\n  ...ClientSharedValues,\n  runtime: \"browser\",\n  base64Decoder: fromBase64,\n  base64Encoder: toBase64,\n  bodyLengthChecker: calculateBodyLength,\n  credentialDefaultProvider: (_: unknown) => () => Promise.reject(new Error(\"Credential is missing\")),\n  defaultUserAgentProvider: defaultUserAgent({\n    serviceId: ClientSharedValues.serviceId,\n    clientVersion: packageInfo.version,\n  }),\n  maxAttempts: DEFAULT_MAX_ATTEMPTS,\n  region: invalidProvider(\"Region is missing\"),\n  requestHandler: new FetchHttpHandler(),\n  sha256: Sha256,\n  streamCollector,\n  utf8Decoder: fromUtf8,\n  utf8Encoder: toUtf8,\n};\n", "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n", "import { HeaderBag, HttpMessage, HttpResponse as IHttpResponse } from \"@aws-sdk/types\";\n\ntype HttpResponseOptions = Partial<HttpMessage> & {\n  statusCode: number;\n};\n\nexport interface HttpResponse extends IHttpResponse {}\n\nexport class HttpResponse {\n  public statusCode: number;\n  public headers: HeaderBag;\n  public body?: any;\n\n  constructor(options: HttpResponseOptions) {\n    this.statusCode = options.statusCode;\n    this.headers = options.headers || {};\n    this.body = options.body;\n  }\n\n  static isInstance(response: unknown): response is HttpResponse {\n    //determine if response is a valid HttpResponse\n    if (!response) return false;\n    const resp = response as any;\n    return typeof resp.statusCode === \"number\" && typeof resp.headers === \"object\";\n  }\n}\n", "import { Endpoint, HeaderBag, HttpMessage, HttpRequest as IHttpRequest, QueryParameterBag } from \"@aws-sdk/types\";\n\ntype HttpRequestOptions = Partial<HttpMessage> & Partial<Endpoint> & { method?: string };\n\nexport interface HttpRequest extends IHttpRequest {}\n\nexport class HttpRequest implements HttpMessage, Endpoint {\n  public method: string;\n  public protocol: string;\n  public hostname: string;\n  public port?: number;\n  public path: string;\n  public query: QueryParameterBag;\n  public headers: HeaderBag;\n  public body?: any;\n\n  constructor(options: HttpRequestOptions) {\n    this.method = options.method || \"GET\";\n    this.hostname = options.hostname || \"localhost\";\n    this.port = options.port;\n    this.query = options.query || {};\n    this.headers = options.headers || {};\n    this.body = options.body;\n    this.protocol = options.protocol\n      ? options.protocol.substr(-1) !== \":\"\n        ? `${options.protocol}:`\n        : options.protocol\n      : \"https:\";\n    this.path = options.path ? (options.path.charAt(0) !== \"/\" ? `/${options.path}` : options.path) : \"/\";\n  }\n\n  static isInstance(request: unknown): request is HttpRequest {\n    //determine if request is a valid httpRequest\n    if (!request) return false;\n    const req: any = request;\n    return (\n      \"method\" in req &&\n      \"protocol\" in req &&\n      \"hostname\" in req &&\n      \"path\" in req &&\n      typeof req[\"query\"] === \"object\" &&\n      typeof req[\"headers\"] === \"object\"\n    );\n  }\n\n  clone(): HttpRequest {\n    const cloned = new HttpRequest({\n      ...this,\n      headers: { ...this.headers },\n    });\n    if (cloned.query) cloned.query = cloneQuery(cloned.query);\n    return cloned;\n  }\n}\n\nfunction cloneQuery(query: QueryParameterBag): QueryParameterBag {\n  return Object.keys(query).reduce((carry: QueryParameterBag, paramName: string) => {\n    const param = query[paramName];\n    return {\n      ...carry,\n      [paramName]: Array.isArray(param) ? [...param] : param,\n    };\n  }, {});\n}\n", "export const escapeUri = (uri: string): string =>\n  // AWS percent-encodes some extra non-standard characters in a URI\n  encodeURIComponent(uri).replace(/[!'()*]/g, hexEncode);\n\nconst hexEncode = (c: string) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`;\n", "import { QueryParameterBag } from \"@aws-sdk/types\";\nimport { escapeUri } from \"@aws-sdk/util-uri-escape\";\n\nexport function buildQueryString(query: QueryParameterBag): string {\n  const parts: string[] = [];\n  for (let key of Object.keys(query).sort()) {\n    const value = query[key];\n    key = escapeUri(key);\n    if (Array.isArray(value)) {\n      for (let i = 0, iLen = value.length; i < iLen; i++) {\n        parts.push(`${key}=${escapeUri(value[i])}`);\n      }\n    } else {\n      let qsEntry = key;\n      if (value || typeof value === \"string\") {\n        qsEntry += `=${escapeUri(value)}`;\n      }\n      parts.push(qsEntry);\n    }\n  }\n\n  return parts.join(\"&\");\n}\n", "export function requestTimeout(timeoutInMs = 0): Promise<never> {\n  return new Promise((resolve, reject) => {\n    if (timeoutInMs) {\n      setTimeout(() => {\n        const timeoutError = new Error(`Request did not complete within ${timeoutInMs} ms`);\n        timeoutError.name = \"TimeoutError\";\n        reject(timeoutError);\n      }, timeoutInMs);\n    }\n  });\n}\n", "import { HttpHandler, HttpRequest, HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { buildQueryString } from \"@aws-sdk/querystring-builder\";\nimport { HeaderBag, HttpHandlerOptions } from \"@aws-sdk/types\";\n\nimport { requestTimeout } from \"./request-timeout\";\n\ndeclare let AbortController: any;\n\n/**\n * Represents the http options that can be passed to a browser http client.\n */\nexport interface FetchHttpHandlerOptions {\n  /**\n   * The number of milliseconds a request can take before being automatically\n   * terminated.\n   */\n  requestTimeout?: number;\n}\n\nexport class FetchHttpHandler implements HttpHandler {\n  private readonly requestTimeout?: number;\n\n  constructor({ requestTimeout }: FetchHttpHandlerOptions = {}) {\n    this.requestTimeout = requestTimeout;\n  }\n\n  destroy(): void {\n    // Do nothing. TLS and HTTP/2 connection pooling is handled by the browser.\n  }\n\n  handle(request: HttpRequest, { abortSignal }: HttpHandlerOptions = {}): Promise<{ response: HttpResponse }> {\n    const requestTimeoutInMs = this.requestTimeout;\n\n    // if the request was already aborted, prevent doing extra work\n    if (abortSignal?.aborted) {\n      const abortError = new Error(\"Request aborted\");\n      abortError.name = \"AbortError\";\n      return Promise.reject(abortError);\n    }\n\n    let path = request.path;\n    if (request.query) {\n      const queryString = buildQueryString(request.query);\n      if (queryString) {\n        path += `?${queryString}`;\n      }\n    }\n\n    const { port, method } = request;\n    const url = `${request.protocol}//${request.hostname}${port ? `:${port}` : \"\"}${path}`;\n    // Request constructor doesn't allow GET/HEAD request with body\n    // ref: https://github.com/whatwg/fetch/issues/551\n    const body = method === \"GET\" || method === \"HEAD\" ? undefined : request.body;\n    const requestOptions: RequestInit = {\n      body,\n      headers: new Headers(request.headers),\n      method: method,\n    };\n\n    // some browsers support abort signal\n    if (typeof AbortController !== \"undefined\") {\n      (requestOptions as any)[\"signal\"] = abortSignal;\n    }\n\n    const fetchRequest = new Request(url, requestOptions);\n    const raceOfPromises = [\n      fetch(fetchRequest).then((response) => {\n        const fetchHeaders: any = response.headers;\n        const transformedHeaders: HeaderBag = {};\n\n        for (const pair of <Array<string[]>>fetchHeaders.entries()) {\n          transformedHeaders[pair[0]] = pair[1];\n        }\n\n        const hasReadableStream = response.body !== undefined;\n\n        // Return the response with buffered body\n        if (!hasReadableStream) {\n          return response.blob().then((body) => ({\n            response: new HttpResponse({\n              headers: transformedHeaders,\n              statusCode: response.status,\n              body,\n            }),\n          }));\n        }\n        // Return the response with streaming body\n        return {\n          response: new HttpResponse({\n            headers: transformedHeaders,\n            statusCode: response.status,\n            body: response.body,\n          }),\n        };\n      }),\n      requestTimeout(requestTimeoutInMs),\n    ];\n    if (abortSignal) {\n      raceOfPromises.push(\n        new Promise<never>((resolve, reject) => {\n          abortSignal.onabort = () => {\n            const abortError = new Error(\"Request aborted\");\n            abortError.name = \"AbortError\";\n            reject(abortError);\n          };\n        })\n      );\n    }\n    return Promise.race(raceOfPromises);\n  }\n}\n", "const alphabetByEncoding: { [key: string]: number } = {};\nconst alphabetByValue: Array<string> = new Array(64);\n\nfor (let i = 0, start = \"A\".charCodeAt(0), limit = \"Z\".charCodeAt(0); i + start <= limit; i++) {\n  const char = String.fromCharCode(i + start);\n  alphabetByEncoding[char] = i;\n  alphabetByValue[i] = char;\n}\n\nfor (let i = 0, start = \"a\".charCodeAt(0), limit = \"z\".charCodeAt(0); i + start <= limit; i++) {\n  const char = String.fromCharCode(i + start);\n  const index = i + 26;\n  alphabetByEncoding[char] = index;\n  alphabetByValue[index] = char;\n}\n\nfor (let i = 0; i < 10; i++) {\n  alphabetByEncoding[i.toString(10)] = i + 52;\n  const char = i.toString(10);\n  const index = i + 52;\n  alphabetByEncoding[char] = index;\n  alphabetByValue[index] = char;\n}\n\nalphabetByEncoding[\"+\"] = 62;\nalphabetByValue[62] = \"+\";\nalphabetByEncoding[\"/\"] = 63;\nalphabetByValue[63] = \"/\";\n\nconst bitsPerLetter = 6;\nconst bitsPerByte = 8;\nconst maxLetterValue = 0b111111;\n\n/**\n * Converts a base-64 encoded string to a Uint8Array of bytes.\n *\n * @param input The base-64 encoded string\n *\n * @see https://tools.ietf.org/html/rfc4648#section-4\n */\nexport function fromBase64(input: string): Uint8Array {\n  let totalByteLength = (input.length / 4) * 3;\n  if (input.substr(-2) === \"==\") {\n    totalByteLength -= 2;\n  } else if (input.substr(-1) === \"=\") {\n    totalByteLength--;\n  }\n  const out = new ArrayBuffer(totalByteLength);\n  const dataView = new DataView(out);\n  for (let i = 0; i < input.length; i += 4) {\n    let bits = 0;\n    let bitLength = 0;\n    for (let j = i, limit = i + 3; j <= limit; j++) {\n      if (input[j] !== \"=\") {\n        bits |= alphabetByEncoding[input[j]] << ((limit - j) * bitsPerLetter);\n        bitLength += bitsPerLetter;\n      } else {\n        bits >>= bitsPerLetter;\n      }\n    }\n\n    const chunkOffset = (i / 4) * 3;\n    bits >>= bitLength % bitsPerByte;\n    const byteLength = Math.floor(bitLength / bitsPerByte);\n    for (let k = 0; k < byteLength; k++) {\n      const offset = (byteLength - k - 1) * bitsPerByte;\n      dataView.setUint8(chunkOffset + k, (bits & (255 << offset)) >> offset);\n    }\n  }\n\n  return new Uint8Array(out);\n}\n\n/**\n * Converts a Uint8Array of binary data to a base-64 encoded string.\n *\n * @param input The binary data to encode\n *\n * @see https://tools.ietf.org/html/rfc4648#section-4\n */\nexport function toBase64(input: Uint8Array): string {\n  let str = \"\";\n  for (let i = 0; i < input.length; i += 3) {\n    let bits = 0;\n    let bitLength = 0;\n    for (let j = i, limit = Math.min(i + 3, input.length); j < limit; j++) {\n      bits |= input[j] << ((limit - j - 1) * bitsPerByte);\n      bitLength += bitsPerByte;\n    }\n\n    const bitClusterCount = Math.ceil(bitLength / bitsPerLetter);\n    bits <<= bitClusterCount * bitsPerLetter - bitLength;\n    for (let k = 1; k <= bitClusterCount; k++) {\n      const offset = (bitClusterCount - k) * bitsPerLetter;\n      str += alphabetByValue[(bits & (maxLetterValue << offset)) >> offset];\n    }\n\n    str += \"==\".slice(0, 4 - bitClusterCount);\n  }\n\n  return str;\n}\n", "import { StreamCollector } from \"@aws-sdk/types\";\nimport { fromBase64 } from \"@aws-sdk/util-base64-browser\";\n\n//reference: https://snack.expo.io/r1JCSWRGU\nexport const streamCollector: StreamCollector = (stream: Blob | ReadableStream): Promise<Uint8Array> => {\n  if (typeof Blob === \"function\" && stream instanceof Blob) {\n    return collectBlob(stream);\n  }\n\n  return collectStream(stream as ReadableStream);\n};\n\nasync function collectBlob(blob: Blob): Promise<Uint8Array> {\n  const base64 = await readToBase64(blob);\n  const arrayBuffer = fromBase64(base64);\n  return new Uint8Array(arrayBuffer);\n}\n\nasync function collectStream(stream: ReadableStream): Promise<Uint8Array> {\n  let res = new Uint8Array(0);\n  const reader = stream.getReader();\n  let isDone = false;\n  while (!isDone) {\n    const { done, value } = await reader.read();\n    if (value) {\n      const prior = res;\n      res = new Uint8Array(prior.length + value.length);\n      res.set(prior);\n      res.set(value, prior.length);\n    }\n    isDone = done;\n  }\n  return res;\n}\n\nfunction readToBase64(blob: Blob): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      // reference: https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readAsDataURL\n      // response from readAsDataURL is always prepended with \"data:*/*;base64,\"\n      if (reader.readyState !== 2) {\n        return reject(new Error(\"Reader aborted too early\"));\n      }\n      const result = (reader.result ?? \"\") as string;\n      // Response can include only 'data:' for empty blob, return empty string in this case.\n      // Otherwise, return the string after ','\n      const commaIndex = result.indexOf(\",\");\n      const dataOffset = commaIndex > -1 ? commaIndex + 1 : result.length;\n      resolve(result.substring(dataOffset));\n    };\n    reader.onabort = () => reject(new Error(\"Read aborted\"));\n    reader.onerror = () => reject(reader.error);\n    // reader.readAsArrayBuffer is not always available\n    reader.readAsDataURL(blob);\n  });\n}\n", "import { Provider } from \"@aws-sdk/types\";\nexport const invalidProvider: (message: string) => Provider<any> = (message: string) => () => Promise.reject(message);\n", "import {\n  AbsoluteLocation,\n  FinalizeHandler,\n  FinalizeHandlerArguments,\n  FinalizeHandlerOutput,\n  FinalizeRequestHandlerOptions,\n  HandlerExecutionContext,\n  MetadataBearer,\n  Pluggable,\n} from \"@aws-sdk/types\";\n\nimport { RetryResolvedConfig } from \"./configurations\";\n\nexport const retryMiddleware = (options: RetryResolvedConfig) => <Output extends MetadataBearer = MetadataBearer>(\n  next: FinalizeHandler<any, Output>,\n  context: HandlerExecutionContext\n): FinalizeHandler<any, Output> => async (\n  args: FinalizeHandlerArguments<any>\n): Promise<FinalizeHandlerOutput<Output>> => {\n  if (options?.retryStrategy?.mode)\n    context.userAgent = [...(context.userAgent || []), [\"cfg/retry-mode\", options.retryStrategy.mode]];\n  return options.retryStrategy.retry(next, args);\n};\n\nexport const retryMiddlewareOptions: FinalizeRequestHandlerOptions & AbsoluteLocation = {\n  name: \"retryMiddleware\",\n  tags: [\"RETRY\"],\n  step: \"finalizeRequest\",\n  priority: \"high\",\n  override: true,\n};\n\nexport const getRetryPlugin = (options: RetryResolvedConfig): Pluggable<any, any> => ({\n  applyToStack: (clientStack) => {\n    clientStack.add(retryMiddleware(options), retryMiddlewareOptions);\n  },\n});\n", "/**\n * The base number of milliseconds to use in calculating a suitable cool-down\n * time when a retryable error is encountered.\n */\nexport const DEFAULT_RETRY_DELAY_BASE = 100;\n\n/**\n * The maximum amount of time (in milliseconds) that will be used as a delay\n * between retry attempts.\n */\nexport const MAXIMUM_RETRY_DELAY = 20 * 1000;\n\n/**\n * The retry delay base (in milliseconds) to use when a throttling error is\n * encountered.\n */\nexport const THROTTLING_RETRY_DELAY_BASE = 500;\n\n/**\n * Initial number of retry tokens in Retry Quota\n */\nexport const INITIAL_RETRY_TOKENS = 500;\n\n/**\n * The total amount of retry tokens to be decremented from retry token balance.\n */\nexport const RETRY_COST = 5;\n\n/**\n * The total amount of retry tokens to be decremented from retry token balance\n * when a throttling error is encountered.\n */\nexport const TIMEOUT_RETRY_COST = 10;\n\n/**\n * The total amount of retry token to be incremented from retry token balance\n * if an SDK operation invocation succeeds without requiring a retry request.\n */\nexport const NO_RETRY_INCREMENT = 1;\n\n/**\n * Header name for SDK invocation ID\n */\nexport const INVOCATION_ID_HEADER = \"amz-sdk-invocation-id\";\n\n/**\n * Header name for request retry information.\n */\nexport const REQUEST_HEADER = \"amz-sdk-request\";\n", "/**\n * Errors encountered when the client clock and server clock cannot agree on the\n * current time.\n *\n * These errors are retryable, assuming the SDK has enabled clock skew\n * correction.\n */\nexport const CLOCK_SKEW_ERROR_CODES = [\n  \"AuthFailure\",\n  \"InvalidSignatureException\",\n  \"RequestExpired\",\n  \"RequestInTheFuture\",\n  \"RequestTimeTooSkewed\",\n  \"SignatureDoesNotMatch\",\n];\n\n/**\n * Errors that indicate the SDK is being throttled.\n *\n * These errors are always retryable.\n */\nexport const THROTTLING_ERROR_CODES = [\n  \"BandwidthLimitExceeded\",\n  \"EC2ThrottledException\",\n  \"LimitExceededException\",\n  \"PriorRequestNotComplete\",\n  \"ProvisionedThroughputExceededException\",\n  \"RequestLimitExceeded\",\n  \"RequestThrottled\",\n  \"RequestThrottledException\",\n  \"SlowDown\",\n  \"ThrottledException\",\n  \"Throttling\",\n  \"ThrottlingException\",\n  \"TooManyRequestsException\",\n  \"TransactionInProgressException\", // DynamoDB\n];\n\n/**\n * Error codes that indicate transient issues\n */\nexport const TRANSIENT_ERROR_CODES = [\"AbortError\", \"TimeoutError\", \"RequestTimeout\", \"RequestTimeoutException\"];\n\n/**\n * Error codes that indicate transient issues\n */\nexport const TRANSIENT_ERROR_STATUS_CODES = [500, 502, 503, 504];\n", "import { SdkError } from \"@aws-sdk/smithy-client\";\n\nimport {\n  CLOCK_SKEW_ERROR_CODES,\n  THROTTLING_ERROR_CODES,\n  TRANSIENT_ERROR_CODES,\n  TRANSIENT_ERROR_STATUS_CODES,\n} from \"./constants\";\n\nexport const isRetryableByTrait = (error: SdkError) => error.$retryable !== undefined;\n\nexport const isClockSkewError = (error: SdkError) => CLOCK_SKEW_ERROR_CODES.includes(error.name);\n\nexport const isThrottlingError = (error: SdkError) =>\n  error.$metadata?.httpStatusCode === 429 ||\n  THROTTLING_ERROR_CODES.includes(error.name) ||\n  error.$retryable?.throttling == true;\n\nexport const isTransientError = (error: SdkError) =>\n  TRANSIENT_ERROR_CODES.includes(error.name) ||\n  TRANSIENT_ERROR_STATUS_CODES.includes(error.$metadata?.httpStatusCode || 0);\n", "import { HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { isThrottlingError } from \"@aws-sdk/service-error-classification\";\nimport { SdkError } from \"@aws-sdk/smithy-client\";\nimport { FinalizeHandler, FinalizeHandlerArguments, MetadataBearer, Provider, RetryStrategy } from \"@aws-sdk/types\";\nimport { v4 } from \"uuid\";\n\nimport {\n  DEFAULT_RETRY_DELAY_BASE,\n  INITIAL_RETRY_TOKENS,\n  INVOCATION_ID_HEADER,\n  REQUEST_HEADER,\n  THROTTLING_RETRY_DELAY_BASE,\n} from \"./constants\";\nimport { getDefaultRetryQuota } from \"./defaultRetryQuota\";\nimport { defaultDelayDecider } from \"./delayDecider\";\nimport { defaultRetryDecider } from \"./retryDecider\";\n\n/**\n * The default value for how many HTTP requests an SDK should make for a\n * single SDK operation invocation before giving up\n */\nexport const DEFAULT_MAX_ATTEMPTS = 3;\n\n/**\n * The default retry algorithm to use.\n */\nexport const DEFAULT_RETRY_MODE = \"standard\";\n\n/**\n * Determines whether an error is retryable based on the number of retries\n * already attempted, the HTTP status code, and the error received (if any).\n *\n * @param error         The error encountered.\n */\nexport interface RetryDecider {\n  (error: SdkError): boolean;\n}\n\n/**\n * Determines the number of milliseconds to wait before retrying an action.\n *\n * @param delayBase The base delay (in milliseconds).\n * @param attempts  The number of times the action has already been tried.\n */\nexport interface DelayDecider {\n  (delayBase: number, attempts: number): number;\n}\n\n/**\n * Interface that specifies the retry quota behavior.\n */\nexport interface RetryQuota {\n  /**\n   * returns true if retry tokens are available from the retry quota bucket.\n   */\n  hasRetryTokens: (error: SdkError) => boolean;\n\n  /**\n   * returns token amount from the retry quota bucket.\n   * throws error is retry tokens are not available.\n   */\n  retrieveRetryTokens: (error: SdkError) => number;\n\n  /**\n   * releases tokens back to the retry quota.\n   */\n  releaseRetryTokens: (releaseCapacityAmount?: number) => void;\n}\n\n/**\n * Strategy options to be passed to StandardRetryStrategy\n */\nexport interface StandardRetryStrategyOptions {\n  retryDecider?: RetryDecider;\n  delayDecider?: DelayDecider;\n  retryQuota?: RetryQuota;\n}\n\nexport class StandardRetryStrategy implements RetryStrategy {\n  private retryDecider: RetryDecider;\n  private delayDecider: DelayDecider;\n  private retryQuota: RetryQuota;\n  public readonly mode = DEFAULT_RETRY_MODE;\n\n  constructor(private readonly maxAttemptsProvider: Provider<number>, options?: StandardRetryStrategyOptions) {\n    this.retryDecider = options?.retryDecider ?? defaultRetryDecider;\n    this.delayDecider = options?.delayDecider ?? defaultDelayDecider;\n    this.retryQuota = options?.retryQuota ?? getDefaultRetryQuota(INITIAL_RETRY_TOKENS);\n  }\n\n  private shouldRetry(error: SdkError, attempts: number, maxAttempts: number) {\n    return attempts < maxAttempts && this.retryDecider(error) && this.retryQuota.hasRetryTokens(error);\n  }\n\n  private async getMaxAttempts() {\n    let maxAttempts: number;\n    try {\n      maxAttempts = await this.maxAttemptsProvider();\n    } catch (error) {\n      maxAttempts = DEFAULT_MAX_ATTEMPTS;\n    }\n    return maxAttempts;\n  }\n\n  async retry<Input extends object, Ouput extends MetadataBearer>(\n    next: FinalizeHandler<Input, Ouput>,\n    args: FinalizeHandlerArguments<Input>\n  ) {\n    let retryTokenAmount;\n    let attempts = 0;\n    let totalDelay = 0;\n\n    const maxAttempts = await this.getMaxAttempts();\n\n    const { request } = args;\n    if (HttpRequest.isInstance(request)) {\n      request.headers[INVOCATION_ID_HEADER] = v4();\n    }\n\n    while (true) {\n      try {\n        if (HttpRequest.isInstance(request)) {\n          request.headers[REQUEST_HEADER] = `attempt=${attempts + 1}; max=${maxAttempts}`;\n        }\n        const { response, output } = await next(args);\n\n        this.retryQuota.releaseRetryTokens(retryTokenAmount);\n        output.$metadata.attempts = attempts + 1;\n        output.$metadata.totalRetryDelay = totalDelay;\n\n        return { response, output };\n      } catch (err) {\n        attempts++;\n        if (this.shouldRetry(err as SdkError, attempts, maxAttempts)) {\n          retryTokenAmount = this.retryQuota.retrieveRetryTokens(err);\n          const delay = this.delayDecider(\n            isThrottlingError(err) ? THROTTLING_RETRY_DELAY_BASE : DEFAULT_RETRY_DELAY_BASE,\n            attempts\n          );\n          totalDelay += delay;\n\n          await new Promise((resolve) => setTimeout(resolve, delay));\n          continue;\n        }\n\n        if (!err.$metadata) {\n          err.$metadata = {};\n        }\n\n        err.$metadata.attempts = attempts;\n        err.$metadata.totalRetryDelay = totalDelay;\n        throw err;\n      }\n    }\n  }\n}\n", "import { SdkError } from \"@aws-sdk/smithy-client\";\n\nimport { NO_RETRY_INCREMENT, RETRY_COST, TIMEOUT_RETRY_COST } from \"./constants\";\nimport { RetryQuota } from \"./defaultStrategy\";\n\nexport const getDefaultRetryQuota = (initialRetryTokens: number): RetryQuota => {\n  const MAX_CAPACITY = initialRetryTokens;\n  let availableCapacity = initialRetryTokens;\n\n  const getCapacityAmount = (error: SdkError) => (error.name === \"TimeoutError\" ? TIMEOUT_RETRY_COST : RETRY_COST);\n\n  const hasRetryTokens = (error: SdkError) => getCapacityAmount(error) <= availableCapacity;\n\n  const retrieveRetryTokens = (error: SdkError) => {\n    if (!hasRetryTokens(error)) {\n      // retryStrategy should stop retrying, and return last error\n      throw new Error(\"No retry token available\");\n    }\n    const capacityAmount = getCapacityAmount(error);\n    availableCapacity -= capacityAmount;\n    return capacityAmount;\n  };\n\n  const releaseRetryTokens = (capacityReleaseAmount?: number) => {\n    availableCapacity += capacityReleaseAmount ?? NO_RETRY_INCREMENT;\n    availableCapacity = Math.min(availableCapacity, MAX_CAPACITY);\n  };\n\n  return Object.freeze({\n    hasRetryTokens,\n    retrieveRetryTokens,\n    releaseRetryTokens,\n  });\n};\n", "import { MAXIMUM_RETRY_DELAY } from \"./constants\";\n\n/**\n * Calculate a capped, fully-jittered exponential backoff time.\n */\nexport const defaultDelayDecider = (delayBase: number, attempts: number) =>\n  Math.floor(Math.min(MAXIMUM_RETRY_DELAY, Math.random() * 2 ** attempts * delayBase));\n", "import {\n  isClockSkewError,\n  isRetryableByTrait,\n  isThrottlingError,\n  isTransientError,\n} from \"@aws-sdk/service-error-classification\";\nimport { SdkError } from \"@aws-sdk/smithy-client\";\n\nexport const defaultRetryDecider = (error: SdkError) => {\n  if (!error) {\n    return false;\n  }\n\n  return isRetryableByTrait(error) || isClockSkewError(error) || isThrottlingError(error) || isTransientError(error);\n};\n", "import { LoadedConfigSelectors } from \"@aws-sdk/node-config-provider\";\nimport { Provider, RetryStrategy } from \"@aws-sdk/types\";\n\nimport { DEFAULT_MAX_ATTEMPTS, DEFAULT_RETRY_MODE, StandardRetryStrategy } from \"./defaultStrategy\";\n\nexport const ENV_MAX_ATTEMPTS = \"AWS_MAX_ATTEMPTS\";\nexport const CONFIG_MAX_ATTEMPTS = \"max_attempts\";\n\nexport const NODE_MAX_ATTEMPT_CONFIG_OPTIONS: LoadedConfigSelectors<number> = {\n  environmentVariableSelector: (env) => {\n    const value = env[ENV_MAX_ATTEMPTS];\n    if (!value) return undefined;\n    const maxAttempt = parseInt(value);\n    if (Number.isNaN(maxAttempt)) {\n      throw new Error(`Environment variable ${ENV_MAX_ATTEMPTS} mast be a number, got \"${value}\"`);\n    }\n    return maxAttempt;\n  },\n  configFileSelector: (profile) => {\n    const value = profile[CONFIG_MAX_ATTEMPTS];\n    if (!value) return undefined;\n    const maxAttempt = parseInt(value);\n    if (Number.isNaN(maxAttempt)) {\n      throw new Error(`Shared config file entry ${CONFIG_MAX_ATTEMPTS} mast be a number, got \"${value}\"`);\n    }\n    return maxAttempt;\n  },\n  default: DEFAULT_MAX_ATTEMPTS,\n};\n\nexport interface RetryInputConfig {\n  /**\n   * The maximum number of times requests that encounter retryable failures should be attempted.\n   */\n  maxAttempts?: number | Provider<number>;\n  /**\n   * The strategy to retry the request. Using built-in exponential backoff strategy by default.\n   */\n  retryStrategy?: RetryStrategy;\n}\n\ninterface PreviouslyResolved {}\nexport interface RetryResolvedConfig {\n  maxAttempts: Provider<number>;\n  retryStrategy: RetryStrategy;\n}\n\nexport const resolveRetryConfig = <T>(input: T & PreviouslyResolved & RetryInputConfig): T & RetryResolvedConfig => {\n  const maxAttempts = normalizeMaxAttempts(input.maxAttempts);\n  return {\n    ...input,\n    maxAttempts,\n    retryStrategy: input.retryStrategy || new StandardRetryStrategy(maxAttempts),\n  };\n};\n\nconst normalizeMaxAttempts = (maxAttempts: number | Provider<number> = DEFAULT_MAX_ATTEMPTS): Provider<number> => {\n  if (typeof maxAttempts === \"number\") {\n    const promisified = Promise.resolve(maxAttempts);\n    return () => promisified;\n  }\n  return maxAttempts;\n};\n\nexport const ENV_RETRY_MODE = \"AWS_RETRY_MODE\";\nexport const CONFIG_RETRY_MODE = \"retry_mode\";\n\nexport const NODE_RETRY_MODE_CONFIG_OPTIONS: LoadedConfigSelectors<string> = {\n  environmentVariableSelector: (env) => env[ENV_RETRY_MODE],\n  configFileSelector: (profile) => profile[CONFIG_RETRY_MODE],\n  default: DEFAULT_RETRY_MODE,\n};\n", "export function calculateBodyLength(body: any): number | undefined {\n  if (typeof body === \"string\") {\n    let len = body.length;\n\n    for (let i = len - 1; i >= 0; i--) {\n      const code = body.charCodeAt(i);\n      if (code > 0x7f && code <= 0x7ff) len++;\n      else if (code > 0x7ff && code <= 0xffff) len += 2;\n    }\n\n    return len;\n  } else if (typeof body.byteLength === \"number\") {\n    // handles Uint8Array, ArrayBuffer, Buffer, and ArrayBufferView\n    return body.byteLength;\n  } else if (typeof body.size === \"number\") {\n    // handles browser File object\n    return body.size;\n  }\n}\n", "// NOTE: this list must be up-to-date with browsers listed in\n// test/acceptance/useragentstrings.yml\nexport const BROWSER_ALIASES_MAP = {\n  'Amazon Silk': 'amazon_silk',\n  'Android Browser': 'android',\n  Bada: 'bada',\n  BlackBerry: 'blackberry',\n  Chrome: 'chrome',\n  Chromium: 'chromium',\n  Electron: 'electron',\n  Epiphany: 'epiphany',\n  Firefox: 'firefox',\n  Focus: 'focus',\n  Generic: 'generic',\n  'Google Search': 'google_search',\n  Googlebot: 'googlebot',\n  'Internet Explorer': 'ie',\n  'K-Meleon': 'k_meleon',\n  Maxthon: 'maxthon',\n  'Microsoft Edge': 'edge',\n  'MZ Browser': 'mz',\n  'NAVER Whale Browser': 'naver',\n  Opera: 'opera',\n  'Opera Coast': 'opera_coast',\n  PhantomJS: 'phantomjs',\n  Puffin: 'puffin',\n  QupZilla: 'qupzilla',\n  QQ: 'qq',\n  QQLite: 'qqlite',\n  Safari: 'safari',\n  Sailfish: 'sailfish',\n  'Samsung Internet for Android': 'samsung_internet',\n  SeaMonkey: 'seamonkey',\n  Sleipnir: 'sleipnir',\n  Swing: 'swing',\n  Tizen: 'tizen',\n  'UC Browser': 'uc',\n  Vivaldi: 'vivaldi',\n  'WebOS Browser': 'webos',\n  WeChat: 'wechat',\n  'Yandex Browser': 'yandex',\n  Roku: 'roku',\n};\n\nexport const BROWSER_MAP = {\n  amazon_silk: 'Amazon Silk',\n  android: 'Android Browser',\n  bada: 'Bada',\n  blackberry: 'BlackBerry',\n  chrome: 'Chrome',\n  chromium: 'Chromium',\n  electron: 'Electron',\n  epiphany: 'Epiphany',\n  firefox: 'Firefox',\n  focus: 'Focus',\n  generic: 'Generic',\n  googlebot: 'Googlebot',\n  google_search: 'Google Search',\n  ie: 'Internet Explorer',\n  k_meleon: 'K-Meleon',\n  maxthon: 'Maxthon',\n  edge: 'Microsoft Edge',\n  mz: 'MZ Browser',\n  naver: 'NAVER Whale Browser',\n  opera: 'Opera',\n  opera_coast: 'Opera Coast',\n  phantomjs: 'PhantomJS',\n  puffin: 'Puffin',\n  qupzilla: 'QupZilla',\n  qq: 'QQ Browser',\n  qqlite: 'QQ Browser Lite',\n  safari: 'Safari',\n  sailfish: 'Sailfish',\n  samsung_internet: 'Samsung Internet for Android',\n  seamonkey: 'SeaMonkey',\n  sleipnir: 'Sleipnir',\n  swing: 'Swing',\n  tizen: 'Tizen',\n  uc: 'UC Browser',\n  vivaldi: 'Vivaldi',\n  webos: 'WebOS Browser',\n  wechat: 'WeChat',\n  yandex: 'Yandex Browser',\n};\n\nexport const PLATFORMS_MAP = {\n  tablet: 'tablet',\n  mobile: 'mobile',\n  desktop: 'desktop',\n  tv: 'tv',\n};\n\nexport const OS_MAP = {\n  WindowsPhone: 'Windows Phone',\n  Windows: 'Windows',\n  MacOS: 'macOS',\n  iOS: 'iOS',\n  Android: 'Android',\n  WebOS: 'WebOS',\n  BlackBerry: 'BlackBerry',\n  Bada: 'Bada',\n  Tizen: 'Tizen',\n  Linux: 'Linux',\n  ChromeOS: 'Chrome OS',\n  PlayStation4: 'PlayStation 4',\n  Roku: 'Roku',\n};\n\nexport const ENGINE_MAP = {\n  EdgeHTML: 'EdgeHTML',\n  Blink: 'Blink',\n  Trident: 'Trident',\n  Presto: 'Presto',\n  Gecko: 'Gecko',\n  WebKit: 'WebKit',\n};\n", "import { BROWSER_MAP, BROWSER_ALIASES_MAP } from './constants.js';\n\nexport default class Utils {\n  /**\n   * Get first matched item for a string\n   * @param {RegExp} regexp\n   * @param {String} ua\n   * @return {Array|{index: number, input: string}|*|boolean|string}\n   */\n  static getFirstMatch(regexp, ua) {\n    const match = ua.match(regexp);\n    return (match && match.length > 0 && match[1]) || '';\n  }\n\n  /**\n   * Get second matched item for a string\n   * @param regexp\n   * @param {String} ua\n   * @return {Array|{index: number, input: string}|*|boolean|string}\n   */\n  static getSecondMatch(regexp, ua) {\n    const match = ua.match(regexp);\n    return (match && match.length > 1 && match[2]) || '';\n  }\n\n  /**\n   * Match a regexp and return a constant or undefined\n   * @param {RegExp} regexp\n   * @param {String} ua\n   * @param {*} _const Any const that will be returned if regexp matches the string\n   * @return {*}\n   */\n  static matchAndReturnConst(regexp, ua, _const) {\n    if (regexp.test(ua)) {\n      return _const;\n    }\n    return void (0);\n  }\n\n  static getWindowsVersionName(version) {\n    switch (version) {\n      case 'NT': return 'NT';\n      case 'XP': return 'XP';\n      case 'NT 5.0': return '2000';\n      case 'NT 5.1': return 'XP';\n      case 'NT 5.2': return '2003';\n      case 'NT 6.0': return 'Vista';\n      case 'NT 6.1': return '7';\n      case 'NT 6.2': return '8';\n      case 'NT 6.3': return '8.1';\n      case 'NT 10.0': return '10';\n      default: return undefined;\n    }\n  }\n\n  /**\n   * Get macOS version name\n   *    10.5 - Leopard\n   *    10.6 - Snow Leopard\n   *    10.7 - Lion\n   *    10.8 - Mountain Lion\n   *    10.9 - Mavericks\n   *    10.10 - Yosemite\n   *    10.11 - El Capitan\n   *    10.12 - Sierra\n   *    10.13 - High Sierra\n   *    10.14 - Mojave\n   *    10.15 - Catalina\n   *\n   * @example\n   *   getMacOSVersionName(\"10.14\") // 'Mojave'\n   *\n   * @param  {string} version\n   * @return {string} versionName\n   */\n  static getMacOSVersionName(version) {\n    const v = version.split('.').splice(0, 2).map(s => parseInt(s, 10) || 0);\n    v.push(0);\n    if (v[0] !== 10) return undefined;\n    switch (v[1]) {\n      case 5: return 'Leopard';\n      case 6: return 'Snow Leopard';\n      case 7: return 'Lion';\n      case 8: return 'Mountain Lion';\n      case 9: return 'Mavericks';\n      case 10: return 'Yosemite';\n      case 11: return 'El Capitan';\n      case 12: return 'Sierra';\n      case 13: return 'High Sierra';\n      case 14: return 'Mojave';\n      case 15: return 'Catalina';\n      default: return undefined;\n    }\n  }\n\n  /**\n   * Get Android version name\n   *    1.5 - Cupcake\n   *    1.6 - Donut\n   *    2.0 - Eclair\n   *    2.1 - Eclair\n   *    2.2 - Froyo\n   *    2.x - Gingerbread\n   *    3.x - Honeycomb\n   *    4.0 - Ice Cream Sandwich\n   *    4.1 - Jelly Bean\n   *    4.4 - KitKat\n   *    5.x - Lollipop\n   *    6.x - Marshmallow\n   *    7.x - Nougat\n   *    8.x - Oreo\n   *    9.x - Pie\n   *\n   * @example\n   *   getAndroidVersionName(\"7.0\") // 'Nougat'\n   *\n   * @param  {string} version\n   * @return {string} versionName\n   */\n  static getAndroidVersionName(version) {\n    const v = version.split('.').splice(0, 2).map(s => parseInt(s, 10) || 0);\n    v.push(0);\n    if (v[0] === 1 && v[1] < 5) return undefined;\n    if (v[0] === 1 && v[1] < 6) return 'Cupcake';\n    if (v[0] === 1 && v[1] >= 6) return 'Donut';\n    if (v[0] === 2 && v[1] < 2) return 'Eclair';\n    if (v[0] === 2 && v[1] === 2) return 'Froyo';\n    if (v[0] === 2 && v[1] > 2) return 'Gingerbread';\n    if (v[0] === 3) return 'Honeycomb';\n    if (v[0] === 4 && v[1] < 1) return 'Ice Cream Sandwich';\n    if (v[0] === 4 && v[1] < 4) return 'Jelly Bean';\n    if (v[0] === 4 && v[1] >= 4) return 'KitKat';\n    if (v[0] === 5) return 'Lollipop';\n    if (v[0] === 6) return 'Marshmallow';\n    if (v[0] === 7) return 'Nougat';\n    if (v[0] === 8) return 'Oreo';\n    if (v[0] === 9) return 'Pie';\n    return undefined;\n  }\n\n  /**\n   * Get version precisions count\n   *\n   * @example\n   *   getVersionPrecision(\"1.10.3\") // 3\n   *\n   * @param  {string} version\n   * @return {number}\n   */\n  static getVersionPrecision(version) {\n    return version.split('.').length;\n  }\n\n  /**\n   * Calculate browser version weight\n   *\n   * @example\n   *   compareVersions('1.10.2.1',  '1.8.2.1.90')    // 1\n   *   compareVersions('1.010.2.1', '1.09.2.1.90');  // 1\n   *   compareVersions('1.10.2.1',  '1.10.2.1');     // 0\n   *   compareVersions('1.10.2.1',  '1.0800.2');     // -1\n   *   compareVersions('1.10.2.1',  '1.10',  true);  // 0\n   *\n   * @param {String} versionA versions versions to compare\n   * @param {String} versionB versions versions to compare\n   * @param {boolean} [isLoose] enable loose comparison\n   * @return {Number} comparison result: -1 when versionA is lower,\n   * 1 when versionA is bigger, 0 when both equal\n   */\n  /* eslint consistent-return: 1 */\n  static compareVersions(versionA, versionB, isLoose = false) {\n    // 1) get common precision for both versions, for example for \"10.0\" and \"9\" it should be 2\n    const versionAPrecision = Utils.getVersionPrecision(versionA);\n    const versionBPrecision = Utils.getVersionPrecision(versionB);\n\n    let precision = Math.max(versionAPrecision, versionBPrecision);\n    let lastPrecision = 0;\n\n    const chunks = Utils.map([versionA, versionB], (version) => {\n      const delta = precision - Utils.getVersionPrecision(version);\n\n      // 2) \"9\" -> \"9.0\" (for precision = 2)\n      const _version = version + new Array(delta + 1).join('.0');\n\n      // 3) \"9.0\" -> [\"000000000\"\", \"000000009\"]\n      return Utils.map(_version.split('.'), chunk => new Array(20 - chunk.length).join('0') + chunk).reverse();\n    });\n\n    // adjust precision for loose comparison\n    if (isLoose) {\n      lastPrecision = precision - Math.min(versionAPrecision, versionBPrecision);\n    }\n\n    // iterate in reverse order by reversed chunks array\n    precision -= 1;\n    while (precision >= lastPrecision) {\n      // 4) compare: \"000000009\" > \"000000010\" = false (but \"9\" > \"10\" = true)\n      if (chunks[0][precision] > chunks[1][precision]) {\n        return 1;\n      }\n\n      if (chunks[0][precision] === chunks[1][precision]) {\n        if (precision === lastPrecision) {\n          // all version chunks are same\n          return 0;\n        }\n\n        precision -= 1;\n      } else if (chunks[0][precision] < chunks[1][precision]) {\n        return -1;\n      }\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Array::map polyfill\n   *\n   * @param  {Array} arr\n   * @param  {Function} iterator\n   * @return {Array}\n   */\n  static map(arr, iterator) {\n    const result = [];\n    let i;\n    if (Array.prototype.map) {\n      return Array.prototype.map.call(arr, iterator);\n    }\n    for (i = 0; i < arr.length; i += 1) {\n      result.push(iterator(arr[i]));\n    }\n    return result;\n  }\n\n  /**\n   * Array::find polyfill\n   *\n   * @param  {Array} arr\n   * @param  {Function} predicate\n   * @return {Array}\n   */\n  static find(arr, predicate) {\n    let i;\n    let l;\n    if (Array.prototype.find) {\n      return Array.prototype.find.call(arr, predicate);\n    }\n    for (i = 0, l = arr.length; i < l; i += 1) {\n      const value = arr[i];\n      if (predicate(value, i)) {\n        return value;\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Object::assign polyfill\n   *\n   * @param  {Object} obj\n   * @param  {Object} ...objs\n   * @return {Object}\n   */\n  static assign(obj, ...assigners) {\n    const result = obj;\n    let i;\n    let l;\n    if (Object.assign) {\n      return Object.assign(obj, ...assigners);\n    }\n    for (i = 0, l = assigners.length; i < l; i += 1) {\n      const assigner = assigners[i];\n      if (typeof assigner === 'object' && assigner !== null) {\n        const keys = Object.keys(assigner);\n        keys.forEach((key) => {\n          result[key] = assigner[key];\n        });\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * Get short version/alias for a browser name\n   *\n   * @example\n   *   getBrowserAlias('Microsoft Edge') // edge\n   *\n   * @param  {string} browserName\n   * @return {string}\n   */\n  static getBrowserAlias(browserName) {\n    return BROWSER_ALIASES_MAP[browserName];\n  }\n\n  /**\n   * Get short version/alias for a browser name\n   *\n   * @example\n   *   getBrowserAlias('edge') // Microsoft Edge\n   *\n   * @param  {string} browserAlias\n   * @return {string}\n   */\n  static getBrowserTypeByAlias(browserAlias) {\n    return BROWSER_MAP[browserAlias] || '';\n  }\n}\n", "/**\n * Browsers' descriptors\n *\n * The idea of descriptors is simple. You should know about them two simple things:\n * 1. Every descriptor has a method or property called `test` and a `describe` method.\n * 2. Order of descriptors is important.\n *\n * More details:\n * 1. Method or property `test` serves as a way to detect whether the UA string\n * matches some certain browser or not. The `describe` method helps to make a result\n * object with params that show some browser-specific things: name, version, etc.\n * 2. Order of descriptors is important because a Parser goes through them one by one\n * in course. For example, if you insert Chrome's descriptor as the first one,\n * more then a half of browsers will be described as Chrome, because they will pass\n * the Chrome descriptor's test.\n *\n * Descriptor's `test` could be a property with an array of RegExps, where every RegExp\n * will be applied to a UA string to test it whether it matches or not.\n * If a descriptor has two or more regexps in the `test` array it tests them one by one\n * with a logical sum operation. Parser stops if it has found any RegExp that matches the UA.\n *\n * Or `test` could be a method. In that case it gets a Parser instance and should\n * return true/false to get the Parser know if this browser descriptor matches the UA or not.\n */\n\nimport Utils from './utils.js';\n\nconst commonVersionIdentifier = /version\\/(\\d+(\\.?_?\\d+)+)/i;\n\nconst browsersList = [\n  /* Googlebot */\n  {\n    test: [/googlebot/i],\n    describe(ua) {\n      const browser = {\n        name: 'Googlebot',\n      };\n      const version = Utils.getFirstMatch(/googlebot\\/(\\d+(\\.\\d+))/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n\n  /* Opera < 13.0 */\n  {\n    test: [/opera/i],\n    describe(ua) {\n      const browser = {\n        name: 'Opera',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:opera)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n\n  /* Opera > 13.0 */\n  {\n    test: [/opr\\/|opios/i],\n    describe(ua) {\n      const browser = {\n        name: 'Opera',\n      };\n      const version = Utils.getFirstMatch(/(?:opr|opios)[\\s/](\\S+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/SamsungBrowser/i],\n    describe(ua) {\n      const browser = {\n        name: 'Samsung Internet for Android',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:SamsungBrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/Whale/i],\n    describe(ua) {\n      const browser = {\n        name: 'NAVER Whale Browser',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:whale)[\\s/](\\d+(?:\\.\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/MZBrowser/i],\n    describe(ua) {\n      const browser = {\n        name: 'MZ Browser',\n      };\n      const version = Utils.getFirstMatch(/(?:MZBrowser)[\\s/](\\d+(?:\\.\\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/focus/i],\n    describe(ua) {\n      const browser = {\n        name: 'Focus',\n      };\n      const version = Utils.getFirstMatch(/(?:focus)[\\s/](\\d+(?:\\.\\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/swing/i],\n    describe(ua) {\n      const browser = {\n        name: 'Swing',\n      };\n      const version = Utils.getFirstMatch(/(?:swing)[\\s/](\\d+(?:\\.\\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/coast/i],\n    describe(ua) {\n      const browser = {\n        name: 'Opera Coast',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:coast)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/opt\\/\\d+(?:.?_?\\d+)+/i],\n    describe(ua) {\n      const browser = {\n        name: 'Opera Touch',\n      };\n      const version = Utils.getFirstMatch(/(?:opt)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/yabrowser/i],\n    describe(ua) {\n      const browser = {\n        name: 'Yandex Browser',\n      };\n      const version = Utils.getFirstMatch(/(?:yabrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/ucbrowser/i],\n    describe(ua) {\n      const browser = {\n        name: 'UC Browser',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:ucbrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/Maxthon|mxios/i],\n    describe(ua) {\n      const browser = {\n        name: 'Maxthon',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:Maxthon|mxios)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/epiphany/i],\n    describe(ua) {\n      const browser = {\n        name: 'Epiphany',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:epiphany)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/puffin/i],\n    describe(ua) {\n      const browser = {\n        name: 'Puffin',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:puffin)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/sleipnir/i],\n    describe(ua) {\n      const browser = {\n        name: 'Sleipnir',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:sleipnir)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/k-meleon/i],\n    describe(ua) {\n      const browser = {\n        name: 'K-Meleon',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:k-meleon)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/micromessenger/i],\n    describe(ua) {\n      const browser = {\n        name: 'WeChat',\n      };\n      const version = Utils.getFirstMatch(/(?:micromessenger)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/qqbrowser/i],\n    describe(ua) {\n      const browser = {\n        name: (/qqbrowserlite/i).test(ua) ? 'QQ Browser Lite' : 'QQ Browser',\n      };\n      const version = Utils.getFirstMatch(/(?:qqbrowserlite|qqbrowser)[/](\\d+(\\.?_?\\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/msie|trident/i],\n    describe(ua) {\n      const browser = {\n        name: 'Internet Explorer',\n      };\n      const version = Utils.getFirstMatch(/(?:msie |rv:)(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/\\sedg\\//i],\n    describe(ua) {\n      const browser = {\n        name: 'Microsoft Edge',\n      };\n\n      const version = Utils.getFirstMatch(/\\sedg\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/edg([ea]|ios)/i],\n    describe(ua) {\n      const browser = {\n        name: 'Microsoft Edge',\n      };\n\n      const version = Utils.getSecondMatch(/edg([ea]|ios)\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/vivaldi/i],\n    describe(ua) {\n      const browser = {\n        name: 'Vivaldi',\n      };\n      const version = Utils.getFirstMatch(/vivaldi\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/seamonkey/i],\n    describe(ua) {\n      const browser = {\n        name: 'SeaMonkey',\n      };\n      const version = Utils.getFirstMatch(/seamonkey\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/sailfish/i],\n    describe(ua) {\n      const browser = {\n        name: 'Sailfish',\n      };\n\n      const version = Utils.getFirstMatch(/sailfish\\s?browser\\/(\\d+(\\.\\d+)?)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/silk/i],\n    describe(ua) {\n      const browser = {\n        name: 'Amazon Silk',\n      };\n      const version = Utils.getFirstMatch(/silk\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/phantom/i],\n    describe(ua) {\n      const browser = {\n        name: 'PhantomJS',\n      };\n      const version = Utils.getFirstMatch(/phantomjs\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/slimerjs/i],\n    describe(ua) {\n      const browser = {\n        name: 'SlimerJS',\n      };\n      const version = Utils.getFirstMatch(/slimerjs\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/blackberry|\\bbb\\d+/i, /rim\\stablet/i],\n    describe(ua) {\n      const browser = {\n        name: 'BlackBerry',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/blackberry[\\d]+\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/(web|hpw)[o0]s/i],\n    describe(ua) {\n      const browser = {\n        name: 'WebOS Browser',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/w(?:eb)?[o0]sbrowser\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/bada/i],\n    describe(ua) {\n      const browser = {\n        name: 'Bada',\n      };\n      const version = Utils.getFirstMatch(/dolfin\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/tizen/i],\n    describe(ua) {\n      const browser = {\n        name: 'Tizen',\n      };\n      const version = Utils.getFirstMatch(/(?:tizen\\s?)?browser\\/(\\d+(\\.?_?\\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/qupzilla/i],\n    describe(ua) {\n      const browser = {\n        name: 'QupZilla',\n      };\n      const version = Utils.getFirstMatch(/(?:qupzilla)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/firefox|iceweasel|fxios/i],\n    describe(ua) {\n      const browser = {\n        name: 'Firefox',\n      };\n      const version = Utils.getFirstMatch(/(?:firefox|iceweasel|fxios)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/electron/i],\n    describe(ua) {\n      const browser = {\n        name: 'Electron',\n      };\n      const version = Utils.getFirstMatch(/(?:electron)\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/MiuiBrowser/i],\n    describe(ua) {\n      const browser = {\n        name: 'Miui',\n      };\n      const version = Utils.getFirstMatch(/(?:MiuiBrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/chromium/i],\n    describe(ua) {\n      const browser = {\n        name: 'Chromium',\n      };\n      const version = Utils.getFirstMatch(/(?:chromium)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/chrome|crios|crmo/i],\n    describe(ua) {\n      const browser = {\n        name: 'Chrome',\n      };\n      const version = Utils.getFirstMatch(/(?:chrome|crios|crmo)\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/GSA/i],\n    describe(ua) {\n      const browser = {\n        name: 'Google Search',\n      };\n      const version = Utils.getFirstMatch(/(?:GSA)\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n\n  /* Android Browser */\n  {\n    test(parser) {\n      const notLikeAndroid = !parser.test(/like android/i);\n      const butAndroid = parser.test(/android/i);\n      return notLikeAndroid && butAndroid;\n    },\n    describe(ua) {\n      const browser = {\n        name: 'Android Browser',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n\n  /* PlayStation 4 */\n  {\n    test: [/playstation 4/i],\n    describe(ua) {\n      const browser = {\n        name: 'PlayStation 4',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n\n  /* Safari */\n  {\n    test: [/safari|applewebkit/i],\n    describe(ua) {\n      const browser = {\n        name: 'Safari',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n\n  /* Something else */\n  {\n    test: [/.*/i],\n    describe(ua) {\n      /* Here we try to make sure that there are explicit details about the device\n       * in order to decide what regexp exactly we want to apply\n       * (as there is a specific decision based on that conclusion)\n       */\n      const regexpWithoutDeviceSpec = /^(.*)\\/(.*) /;\n      const regexpWithDeviceSpec = /^(.*)\\/(.*)[ \\t]\\((.*)/;\n      const hasDeviceSpec = ua.search('\\\\(') !== -1;\n      const regexp = hasDeviceSpec ? regexpWithDeviceSpec : regexpWithoutDeviceSpec;\n      return {\n        name: Utils.getFirstMatch(regexp, ua),\n        version: Utils.getSecondMatch(regexp, ua),\n      };\n    },\n  },\n];\n\nexport default browsersList;\n", "import Utils from './utils.js';\nimport { OS_MAP } from './constants.js';\n\nexport default [\n  /* Roku */\n  {\n    test: [/Roku\\/DVP/],\n    describe(ua) {\n      const version = Utils.getFirstMatch(/Roku\\/DVP-(\\d+\\.\\d+)/i, ua);\n      return {\n        name: OS_MAP.Roku,\n        version,\n      };\n    },\n  },\n\n  /* Windows Phone */\n  {\n    test: [/windows phone/i],\n    describe(ua) {\n      const version = Utils.getFirstMatch(/windows phone (?:os)?\\s?(\\d+(\\.\\d+)*)/i, ua);\n      return {\n        name: OS_MAP.WindowsPhone,\n        version,\n      };\n    },\n  },\n\n  /* Windows */\n  {\n    test: [/windows /i],\n    describe(ua) {\n      const version = Utils.getFirstMatch(/Windows ((NT|XP)( \\d\\d?.\\d)?)/i, ua);\n      const versionName = Utils.getWindowsVersionName(version);\n\n      return {\n        name: OS_MAP.Windows,\n        version,\n        versionName,\n      };\n    },\n  },\n\n  /* Firefox on iPad */\n  {\n    test: [/Macintosh(.*?) FxiOS(.*?)\\//],\n    describe(ua) {\n      const result = {\n        name: OS_MAP.iOS,\n      };\n      const version = Utils.getSecondMatch(/(Version\\/)(\\d[\\d.]+)/, ua);\n      if (version) {\n        result.version = version;\n      }\n      return result;\n    },\n  },\n\n  /* macOS */\n  {\n    test: [/macintosh/i],\n    describe(ua) {\n      const version = Utils.getFirstMatch(/mac os x (\\d+(\\.?_?\\d+)+)/i, ua).replace(/[_\\s]/g, '.');\n      const versionName = Utils.getMacOSVersionName(version);\n\n      const os = {\n        name: OS_MAP.MacOS,\n        version,\n      };\n      if (versionName) {\n        os.versionName = versionName;\n      }\n      return os;\n    },\n  },\n\n  /* iOS */\n  {\n    test: [/(ipod|iphone|ipad)/i],\n    describe(ua) {\n      const version = Utils.getFirstMatch(/os (\\d+([_\\s]\\d+)*) like mac os x/i, ua).replace(/[_\\s]/g, '.');\n\n      return {\n        name: OS_MAP.iOS,\n        version,\n      };\n    },\n  },\n\n  /* Android */\n  {\n    test(parser) {\n      const notLikeAndroid = !parser.test(/like android/i);\n      const butAndroid = parser.test(/android/i);\n      return notLikeAndroid && butAndroid;\n    },\n    describe(ua) {\n      const version = Utils.getFirstMatch(/android[\\s/-](\\d+(\\.\\d+)*)/i, ua);\n      const versionName = Utils.getAndroidVersionName(version);\n      const os = {\n        name: OS_MAP.Android,\n        version,\n      };\n      if (versionName) {\n        os.versionName = versionName;\n      }\n      return os;\n    },\n  },\n\n  /* WebOS */\n  {\n    test: [/(web|hpw)[o0]s/i],\n    describe(ua) {\n      const version = Utils.getFirstMatch(/(?:web|hpw)[o0]s\\/(\\d+(\\.\\d+)*)/i, ua);\n      const os = {\n        name: OS_MAP.WebOS,\n      };\n\n      if (version && version.length) {\n        os.version = version;\n      }\n      return os;\n    },\n  },\n\n  /* BlackBerry */\n  {\n    test: [/blackberry|\\bbb\\d+/i, /rim\\stablet/i],\n    describe(ua) {\n      const version = Utils.getFirstMatch(/rim\\stablet\\sos\\s(\\d+(\\.\\d+)*)/i, ua)\n        || Utils.getFirstMatch(/blackberry\\d+\\/(\\d+([_\\s]\\d+)*)/i, ua)\n        || Utils.getFirstMatch(/\\bbb(\\d+)/i, ua);\n\n      return {\n        name: OS_MAP.BlackBerry,\n        version,\n      };\n    },\n  },\n\n  /* Bada */\n  {\n    test: [/bada/i],\n    describe(ua) {\n      const version = Utils.getFirstMatch(/bada\\/(\\d+(\\.\\d+)*)/i, ua);\n\n      return {\n        name: OS_MAP.Bada,\n        version,\n      };\n    },\n  },\n\n  /* Tizen */\n  {\n    test: [/tizen/i],\n    describe(ua) {\n      const version = Utils.getFirstMatch(/tizen[/\\s](\\d+(\\.\\d+)*)/i, ua);\n\n      return {\n        name: OS_MAP.Tizen,\n        version,\n      };\n    },\n  },\n\n  /* Linux */\n  {\n    test: [/linux/i],\n    describe() {\n      return {\n        name: OS_MAP.Linux,\n      };\n    },\n  },\n\n  /* Chrome OS */\n  {\n    test: [/CrOS/],\n    describe() {\n      return {\n        name: OS_MAP.ChromeOS,\n      };\n    },\n  },\n\n  /* Playstation 4 */\n  {\n    test: [/PlayStation 4/],\n    describe(ua) {\n      const version = Utils.getFirstMatch(/PlayStation 4[/\\s](\\d+(\\.\\d+)*)/i, ua);\n      return {\n        name: OS_MAP.PlayStation4,\n        version,\n      };\n    },\n  },\n];\n", "import Utils from './utils.js';\nimport { PLATFORMS_MAP } from './constants.js';\n\n/*\n * Tablets go first since usually they have more specific\n * signs to detect.\n */\n\nexport default [\n  /* Googlebot */\n  {\n    test: [/googlebot/i],\n    describe() {\n      return {\n        type: 'bot',\n        vendor: 'Google',\n      };\n    },\n  },\n\n  /* Huawei */\n  {\n    test: [/huawei/i],\n    describe(ua) {\n      const model = Utils.getFirstMatch(/(can-l01)/i, ua) && 'Nova';\n      const platform = {\n        type: PLATFORMS_MAP.mobile,\n        vendor: 'Huawei',\n      };\n      if (model) {\n        platform.model = model;\n      }\n      return platform;\n    },\n  },\n\n  /* Nexus Tablet */\n  {\n    test: [/nexus\\s*(?:7|8|9|10).*/i],\n    describe() {\n      return {\n        type: PLATFORMS_MAP.tablet,\n        vendor: 'Nexus',\n      };\n    },\n  },\n\n  /* iPad */\n  {\n    test: [/ipad/i],\n    describe() {\n      return {\n        type: PLATFORMS_MAP.tablet,\n        vendor: 'Apple',\n        model: 'iPad',\n      };\n    },\n  },\n\n  /* Firefox on iPad */\n  {\n    test: [/Macintosh(.*?) FxiOS(.*?)\\//],\n    describe() {\n      return {\n        type: PLATFORMS_MAP.tablet,\n        vendor: 'Apple',\n        model: 'iPad',\n      };\n    },\n  },\n\n  /* Amazon Kindle Fire */\n  {\n    test: [/kftt build/i],\n    describe() {\n      return {\n        type: PLATFORMS_MAP.tablet,\n        vendor: 'Amazon',\n        model: 'Kindle Fire HD 7',\n      };\n    },\n  },\n\n  /* Another Amazon Tablet with Silk */\n  {\n    test: [/silk/i],\n    describe() {\n      return {\n        type: PLATFORMS_MAP.tablet,\n        vendor: 'Amazon',\n      };\n    },\n  },\n\n  /* Tablet */\n  {\n    test: [/tablet(?! pc)/i],\n    describe() {\n      return {\n        type: PLATFORMS_MAP.tablet,\n      };\n    },\n  },\n\n  /* iPod/iPhone */\n  {\n    test(parser) {\n      const iDevice = parser.test(/ipod|iphone/i);\n      const likeIDevice = parser.test(/like (ipod|iphone)/i);\n      return iDevice && !likeIDevice;\n    },\n    describe(ua) {\n      const model = Utils.getFirstMatch(/(ipod|iphone)/i, ua);\n      return {\n        type: PLATFORMS_MAP.mobile,\n        vendor: 'Apple',\n        model,\n      };\n    },\n  },\n\n  /* Nexus Mobile */\n  {\n    test: [/nexus\\s*[0-6].*/i, /galaxy nexus/i],\n    describe() {\n      return {\n        type: PLATFORMS_MAP.mobile,\n        vendor: 'Nexus',\n      };\n    },\n  },\n\n  /* Mobile */\n  {\n    test: [/[^-]mobi/i],\n    describe() {\n      return {\n        type: PLATFORMS_MAP.mobile,\n      };\n    },\n  },\n\n  /* BlackBerry */\n  {\n    test(parser) {\n      return parser.getBrowserName(true) === 'blackberry';\n    },\n    describe() {\n      return {\n        type: PLATFORMS_MAP.mobile,\n        vendor: 'BlackBerry',\n      };\n    },\n  },\n\n  /* Bada */\n  {\n    test(parser) {\n      return parser.getBrowserName(true) === 'bada';\n    },\n    describe() {\n      return {\n        type: PLATFORMS_MAP.mobile,\n      };\n    },\n  },\n\n  /* Windows Phone */\n  {\n    test(parser) {\n      return parser.getBrowserName() === 'windows phone';\n    },\n    describe() {\n      return {\n        type: PLATFORMS_MAP.mobile,\n        vendor: 'Microsoft',\n      };\n    },\n  },\n\n  /* Android Tablet */\n  {\n    test(parser) {\n      const osMajorVersion = Number(String(parser.getOSVersion()).split('.')[0]);\n      return parser.getOSName(true) === 'android' && (osMajorVersion >= 3);\n    },\n    describe() {\n      return {\n        type: PLATFORMS_MAP.tablet,\n      };\n    },\n  },\n\n  /* Android Mobile */\n  {\n    test(parser) {\n      return parser.getOSName(true) === 'android';\n    },\n    describe() {\n      return {\n        type: PLATFORMS_MAP.mobile,\n      };\n    },\n  },\n\n  /* desktop */\n  {\n    test(parser) {\n      return parser.getOSName(true) === 'macos';\n    },\n    describe() {\n      return {\n        type: PLATFORMS_MAP.desktop,\n        vendor: 'Apple',\n      };\n    },\n  },\n\n  /* Windows */\n  {\n    test(parser) {\n      return parser.getOSName(true) === 'windows';\n    },\n    describe() {\n      return {\n        type: PLATFORMS_MAP.desktop,\n      };\n    },\n  },\n\n  /* Linux */\n  {\n    test(parser) {\n      return parser.getOSName(true) === 'linux';\n    },\n    describe() {\n      return {\n        type: PLATFORMS_MAP.desktop,\n      };\n    },\n  },\n\n  /* PlayStation 4 */\n  {\n    test(parser) {\n      return parser.getOSName(true) === 'playstation 4';\n    },\n    describe() {\n      return {\n        type: PLATFORMS_MAP.tv,\n      };\n    },\n  },\n\n  /* Roku */\n  {\n    test(parser) {\n      return parser.getOSName(true) === 'roku';\n    },\n    describe() {\n      return {\n        type: PLATFORMS_MAP.tv,\n      };\n    },\n  },\n];\n", "import Utils from './utils.js';\nimport { ENGINE_MAP } from './constants.js';\n\n/*\n * More specific goes first\n */\nexport default [\n  /* EdgeHTML */\n  {\n    test(parser) {\n      return parser.getBrowserName(true) === 'microsoft edge';\n    },\n    describe(ua) {\n      const isBlinkBased = /\\sedg\\//i.test(ua);\n\n      // return blink if it's blink-based one\n      if (isBlinkBased) {\n        return {\n          name: ENGINE_MAP.Blink,\n        };\n      }\n\n      // otherwise match the version and return EdgeHTML\n      const version = Utils.getFirstMatch(/edge\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      return {\n        name: ENGINE_MAP.EdgeHTML,\n        version,\n      };\n    },\n  },\n\n  /* Trident */\n  {\n    test: [/trident/i],\n    describe(ua) {\n      const engine = {\n        name: ENGINE_MAP.Trident,\n      };\n\n      const version = Utils.getFirstMatch(/trident\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        engine.version = version;\n      }\n\n      return engine;\n    },\n  },\n\n  /* Presto */\n  {\n    test(parser) {\n      return parser.test(/presto/i);\n    },\n    describe(ua) {\n      const engine = {\n        name: ENGINE_MAP.Presto,\n      };\n\n      const version = Utils.getFirstMatch(/presto\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        engine.version = version;\n      }\n\n      return engine;\n    },\n  },\n\n  /* Gecko */\n  {\n    test(parser) {\n      const isGecko = parser.test(/gecko/i);\n      const likeGecko = parser.test(/like gecko/i);\n      return isGecko && !likeGecko;\n    },\n    describe(ua) {\n      const engine = {\n        name: ENGINE_MAP.Gecko,\n      };\n\n      const version = Utils.getFirstMatch(/gecko\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        engine.version = version;\n      }\n\n      return engine;\n    },\n  },\n\n  /* Blink */\n  {\n    test: [/(apple)?webkit\\/537\\.36/i],\n    describe() {\n      return {\n        name: ENGINE_MAP.Blink,\n      };\n    },\n  },\n\n  /* WebKit */\n  {\n    test: [/(apple)?webkit/i],\n    describe(ua) {\n      const engine = {\n        name: ENGINE_MAP.WebKit,\n      };\n\n      const version = Utils.getFirstMatch(/webkit\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        engine.version = version;\n      }\n\n      return engine;\n    },\n  },\n];\n", "import browserParsersList from './parser-browsers.js';\nimport osParsersList from './parser-os.js';\nimport platformParsersList from './parser-platforms.js';\nimport enginesParsersList from './parser-engines.js';\nimport Utils from './utils.js';\n\n/**\n * The main class that arranges the whole parsing process.\n */\nclass Parser {\n  /**\n   * Create instance of Parser\n   *\n   * @param {String} UA User-Agent string\n   * @param {Boolean} [skipParsing=false] parser can skip parsing in purpose of performance\n   * improvements if you need to make a more particular parsing\n   * like {@link Parser#parseBrowser} or {@link Parser#parsePlatform}\n   *\n   * @throw {Error} in case of empty UA String\n   *\n   * @constructor\n   */\n  constructor(UA, skipParsing = false) {\n    if (UA === void (0) || UA === null || UA === '') {\n      throw new Error(\"UserAgent parameter can't be empty\");\n    }\n\n    this._ua = UA;\n\n    /**\n     * @typedef ParsedResult\n     * @property {Object} browser\n     * @property {String|undefined} [browser.name]\n     * Browser name, like `\"Chrome\"` or `\"Internet Explorer\"`\n     * @property {String|undefined} [browser.version] Browser version as a String `\"12.01.45334.10\"`\n     * @property {Object} os\n     * @property {String|undefined} [os.name] OS name, like `\"Windows\"` or `\"macOS\"`\n     * @property {String|undefined} [os.version] OS version, like `\"NT 5.1\"` or `\"10.11.1\"`\n     * @property {String|undefined} [os.versionName] OS name, like `\"XP\"` or `\"High Sierra\"`\n     * @property {Object} platform\n     * @property {String|undefined} [platform.type]\n     * platform type, can be either `\"desktop\"`, `\"tablet\"` or `\"mobile\"`\n     * @property {String|undefined} [platform.vendor] Vendor of the device,\n     * like `\"Apple\"` or `\"Samsung\"`\n     * @property {String|undefined} [platform.model] Device model,\n     * like `\"iPhone\"` or `\"Kindle Fire HD 7\"`\n     * @property {Object} engine\n     * @property {String|undefined} [engine.name]\n     * Can be any of this: `WebKit`, `Blink`, `Gecko`, `Trident`, `Presto`, `EdgeHTML`\n     * @property {String|undefined} [engine.version] String version of the engine\n     */\n    this.parsedResult = {};\n\n    if (skipParsing !== true) {\n      this.parse();\n    }\n  }\n\n  /**\n   * Get UserAgent string of current Parser instance\n   * @return {String} User-Agent String of the current <Parser> object\n   *\n   * @public\n   */\n  getUA() {\n    return this._ua;\n  }\n\n  /**\n   * Test a UA string for a regexp\n   * @param {RegExp} regex\n   * @return {Boolean}\n   */\n  test(regex) {\n    return regex.test(this._ua);\n  }\n\n  /**\n   * Get parsed browser object\n   * @return {Object}\n   */\n  parseBrowser() {\n    this.parsedResult.browser = {};\n\n    const browserDescriptor = Utils.find(browserParsersList, (_browser) => {\n      if (typeof _browser.test === 'function') {\n        return _browser.test(this);\n      }\n\n      if (_browser.test instanceof Array) {\n        return _browser.test.some(condition => this.test(condition));\n      }\n\n      throw new Error(\"Browser's test function is not valid\");\n    });\n\n    if (browserDescriptor) {\n      this.parsedResult.browser = browserDescriptor.describe(this.getUA());\n    }\n\n    return this.parsedResult.browser;\n  }\n\n  /**\n   * Get parsed browser object\n   * @return {Object}\n   *\n   * @public\n   */\n  getBrowser() {\n    if (this.parsedResult.browser) {\n      return this.parsedResult.browser;\n    }\n\n    return this.parseBrowser();\n  }\n\n  /**\n   * Get browser's name\n   * @return {String} Browser's name or an empty string\n   *\n   * @public\n   */\n  getBrowserName(toLowerCase) {\n    if (toLowerCase) {\n      return String(this.getBrowser().name).toLowerCase() || '';\n    }\n    return this.getBrowser().name || '';\n  }\n\n\n  /**\n   * Get browser's version\n   * @return {String} version of browser\n   *\n   * @public\n   */\n  getBrowserVersion() {\n    return this.getBrowser().version;\n  }\n\n  /**\n   * Get OS\n   * @return {Object}\n   *\n   * @example\n   * this.getOS();\n   * {\n   *   name: 'macOS',\n   *   version: '10.11.12'\n   * }\n   */\n  getOS() {\n    if (this.parsedResult.os) {\n      return this.parsedResult.os;\n    }\n\n    return this.parseOS();\n  }\n\n  /**\n   * Parse OS and save it to this.parsedResult.os\n   * @return {*|{}}\n   */\n  parseOS() {\n    this.parsedResult.os = {};\n\n    const os = Utils.find(osParsersList, (_os) => {\n      if (typeof _os.test === 'function') {\n        return _os.test(this);\n      }\n\n      if (_os.test instanceof Array) {\n        return _os.test.some(condition => this.test(condition));\n      }\n\n      throw new Error(\"Browser's test function is not valid\");\n    });\n\n    if (os) {\n      this.parsedResult.os = os.describe(this.getUA());\n    }\n\n    return this.parsedResult.os;\n  }\n\n  /**\n   * Get OS name\n   * @param {Boolean} [toLowerCase] return lower-cased value\n   * @return {String} name of the OS \u2014 macOS, Windows, Linux, etc.\n   */\n  getOSName(toLowerCase) {\n    const { name } = this.getOS();\n\n    if (toLowerCase) {\n      return String(name).toLowerCase() || '';\n    }\n\n    return name || '';\n  }\n\n  /**\n   * Get OS version\n   * @return {String} full version with dots ('10.11.12', '5.6', etc)\n   */\n  getOSVersion() {\n    return this.getOS().version;\n  }\n\n  /**\n   * Get parsed platform\n   * @return {{}}\n   */\n  getPlatform() {\n    if (this.parsedResult.platform) {\n      return this.parsedResult.platform;\n    }\n\n    return this.parsePlatform();\n  }\n\n  /**\n   * Get platform name\n   * @param {Boolean} [toLowerCase=false]\n   * @return {*}\n   */\n  getPlatformType(toLowerCase = false) {\n    const { type } = this.getPlatform();\n\n    if (toLowerCase) {\n      return String(type).toLowerCase() || '';\n    }\n\n    return type || '';\n  }\n\n  /**\n   * Get parsed platform\n   * @return {{}}\n   */\n  parsePlatform() {\n    this.parsedResult.platform = {};\n\n    const platform = Utils.find(platformParsersList, (_platform) => {\n      if (typeof _platform.test === 'function') {\n        return _platform.test(this);\n      }\n\n      if (_platform.test instanceof Array) {\n        return _platform.test.some(condition => this.test(condition));\n      }\n\n      throw new Error(\"Browser's test function is not valid\");\n    });\n\n    if (platform) {\n      this.parsedResult.platform = platform.describe(this.getUA());\n    }\n\n    return this.parsedResult.platform;\n  }\n\n  /**\n   * Get parsed engine\n   * @return {{}}\n   */\n  getEngine() {\n    if (this.parsedResult.engine) {\n      return this.parsedResult.engine;\n    }\n\n    return this.parseEngine();\n  }\n\n  /**\n   * Get engines's name\n   * @return {String} Engines's name or an empty string\n   *\n   * @public\n   */\n  getEngineName(toLowerCase) {\n    if (toLowerCase) {\n      return String(this.getEngine().name).toLowerCase() || '';\n    }\n    return this.getEngine().name || '';\n  }\n\n  /**\n   * Get parsed platform\n   * @return {{}}\n   */\n  parseEngine() {\n    this.parsedResult.engine = {};\n\n    const engine = Utils.find(enginesParsersList, (_engine) => {\n      if (typeof _engine.test === 'function') {\n        return _engine.test(this);\n      }\n\n      if (_engine.test instanceof Array) {\n        return _engine.test.some(condition => this.test(condition));\n      }\n\n      throw new Error(\"Browser's test function is not valid\");\n    });\n\n    if (engine) {\n      this.parsedResult.engine = engine.describe(this.getUA());\n    }\n\n    return this.parsedResult.engine;\n  }\n\n  /**\n   * Parse full information about the browser\n   * @returns {Parser}\n   */\n  parse() {\n    this.parseBrowser();\n    this.parseOS();\n    this.parsePlatform();\n    this.parseEngine();\n\n    return this;\n  }\n\n  /**\n   * Get parsed result\n   * @return {ParsedResult}\n   */\n  getResult() {\n    return Utils.assign({}, this.parsedResult);\n  }\n\n  /**\n   * Check if parsed browser matches certain conditions\n   *\n   * @param {Object} checkTree It's one or two layered object,\n   * which can include a platform or an OS on the first layer\n   * and should have browsers specs on the bottom-laying layer\n   *\n   * @returns {Boolean|undefined} Whether the browser satisfies the set conditions or not.\n   * Returns `undefined` when the browser is no described in the checkTree object.\n   *\n   * @example\n   * const browser = Bowser.getParser(window.navigator.userAgent);\n   * if (browser.satisfies({chrome: '>118.01.1322' }))\n   * // or with os\n   * if (browser.satisfies({windows: { chrome: '>118.01.1322' } }))\n   * // or with platforms\n   * if (browser.satisfies({desktop: { chrome: '>118.01.1322' } }))\n   */\n  satisfies(checkTree) {\n    const platformsAndOSes = {};\n    let platformsAndOSCounter = 0;\n    const browsers = {};\n    let browsersCounter = 0;\n\n    const allDefinitions = Object.keys(checkTree);\n\n    allDefinitions.forEach((key) => {\n      const currentDefinition = checkTree[key];\n      if (typeof currentDefinition === 'string') {\n        browsers[key] = currentDefinition;\n        browsersCounter += 1;\n      } else if (typeof currentDefinition === 'object') {\n        platformsAndOSes[key] = currentDefinition;\n        platformsAndOSCounter += 1;\n      }\n    });\n\n    if (platformsAndOSCounter > 0) {\n      const platformsAndOSNames = Object.keys(platformsAndOSes);\n      const OSMatchingDefinition = Utils.find(platformsAndOSNames, name => (this.isOS(name)));\n\n      if (OSMatchingDefinition) {\n        const osResult = this.satisfies(platformsAndOSes[OSMatchingDefinition]);\n\n        if (osResult !== void 0) {\n          return osResult;\n        }\n      }\n\n      const platformMatchingDefinition = Utils.find(\n        platformsAndOSNames,\n        name => (this.isPlatform(name)),\n      );\n      if (platformMatchingDefinition) {\n        const platformResult = this.satisfies(platformsAndOSes[platformMatchingDefinition]);\n\n        if (platformResult !== void 0) {\n          return platformResult;\n        }\n      }\n    }\n\n    if (browsersCounter > 0) {\n      const browserNames = Object.keys(browsers);\n      const matchingDefinition = Utils.find(browserNames, name => (this.isBrowser(name, true)));\n\n      if (matchingDefinition !== void 0) {\n        return this.compareVersion(browsers[matchingDefinition]);\n      }\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Check if the browser name equals the passed string\n   * @param browserName The string to compare with the browser name\n   * @param [includingAlias=false] The flag showing whether alias will be included into comparison\n   * @returns {boolean}\n   */\n  isBrowser(browserName, includingAlias = false) {\n    const defaultBrowserName = this.getBrowserName().toLowerCase();\n    let browserNameLower = browserName.toLowerCase();\n    const alias = Utils.getBrowserTypeByAlias(browserNameLower);\n\n    if (includingAlias && alias) {\n      browserNameLower = alias.toLowerCase();\n    }\n    return browserNameLower === defaultBrowserName;\n  }\n\n  compareVersion(version) {\n    let expectedResults = [0];\n    let comparableVersion = version;\n    let isLoose = false;\n\n    const currentBrowserVersion = this.getBrowserVersion();\n\n    if (typeof currentBrowserVersion !== 'string') {\n      return void 0;\n    }\n\n    if (version[0] === '>' || version[0] === '<') {\n      comparableVersion = version.substr(1);\n      if (version[1] === '=') {\n        isLoose = true;\n        comparableVersion = version.substr(2);\n      } else {\n        expectedResults = [];\n      }\n      if (version[0] === '>') {\n        expectedResults.push(1);\n      } else {\n        expectedResults.push(-1);\n      }\n    } else if (version[0] === '=') {\n      comparableVersion = version.substr(1);\n    } else if (version[0] === '~') {\n      isLoose = true;\n      comparableVersion = version.substr(1);\n    }\n\n    return expectedResults.indexOf(\n      Utils.compareVersions(currentBrowserVersion, comparableVersion, isLoose),\n    ) > -1;\n  }\n\n  isOS(osName) {\n    return this.getOSName(true) === String(osName).toLowerCase();\n  }\n\n  isPlatform(platformType) {\n    return this.getPlatformType(true) === String(platformType).toLowerCase();\n  }\n\n  isEngine(engineName) {\n    return this.getEngineName(true) === String(engineName).toLowerCase();\n  }\n\n  /**\n   * Is anything? Check if the browser is called \"anything\",\n   * the OS called \"anything\" or the platform called \"anything\"\n   * @param {String} anything\n   * @param [includingAlias=false] The flag showing whether alias will be included into comparison\n   * @returns {Boolean}\n   */\n  is(anything, includingAlias = false) {\n    return this.isBrowser(anything, includingAlias) || this.isOS(anything)\n      || this.isPlatform(anything);\n  }\n\n  /**\n   * Check if any of the given values satisfies this.is(anything)\n   * @param {String[]} anythings\n   * @returns {Boolean}\n   */\n  some(anythings = []) {\n    return anythings.some(anything => this.is(anything));\n  }\n}\n\nexport default Parser;\n", "/*!\n * Bowser - a browser detector\n * https://github.com/lancedikson/bowser\n * MIT License | (c) Dustin Diaz 2012-2015\n * MIT License | (c) Denis Demchenko 2015-2019\n */\nimport Parser from './parser.js';\nimport {\n  BROWSER_MAP,\n  ENGINE_MAP,\n  OS_MAP,\n  PLATFORMS_MAP,\n} from './constants.js';\n\n/**\n * Bowser class.\n * Keep it simple as much as it can be.\n * It's supposed to work with collections of {@link Parser} instances\n * rather then solve one-instance problems.\n * All the one-instance stuff is located in Parser class.\n *\n * @class\n * @classdesc Bowser is a static object, that provides an API to the Parsers\n * @hideconstructor\n */\nclass Bowser {\n  /**\n   * Creates a {@link Parser} instance\n   *\n   * @param {String} UA UserAgent string\n   * @param {Boolean} [skipParsing=false] Will make the Parser postpone parsing until you ask it\n   * explicitly. Same as `skipParsing` for {@link Parser}.\n   * @returns {Parser}\n   * @throws {Error} when UA is not a String\n   *\n   * @example\n   * const parser = Bowser.getParser(window.navigator.userAgent);\n   * const result = parser.getResult();\n   */\n  static getParser(UA, skipParsing = false) {\n    if (typeof UA !== 'string') {\n      throw new Error('UserAgent should be a string');\n    }\n    return new Parser(UA, skipParsing);\n  }\n\n  /**\n   * Creates a {@link Parser} instance and runs {@link Parser.getResult} immediately\n   *\n   * @param UA\n   * @return {ParsedResult}\n   *\n   * @example\n   * const result = Bowser.parse(window.navigator.userAgent);\n   */\n  static parse(UA) {\n    return (new Parser(UA)).getResult();\n  }\n\n  static get BROWSER_MAP() {\n    return BROWSER_MAP;\n  }\n\n  static get ENGINE_MAP() {\n    return ENGINE_MAP;\n  }\n\n  static get OS_MAP() {\n    return OS_MAP;\n  }\n\n  static get PLATFORMS_MAP() {\n    return PLATFORMS_MAP;\n  }\n}\n\nexport default Bowser;\n", "import { Provider, UserAgent } from \"@aws-sdk/types\";\nimport bowser from \"bowser\";\n\nimport { DefaultUserAgentOptions } from \"./configurations\";\n\n/**\n * Default provider to the user agent in browsers. It's a best effort to infer\n * the device information. It uses bowser library to detect the browser and virsion\n */\nexport const defaultUserAgent = ({\n  serviceId,\n  clientVersion,\n}: DefaultUserAgentOptions): Provider<UserAgent> => async () => {\n  const parsedUA = window?.navigator?.userAgent ? bowser.parse(window.navigator.userAgent) : undefined;\n  const sections: UserAgent = [\n    // sdk-metadata\n    [\"aws-sdk-js\", clientVersion],\n    // os-metadata\n    [`os/${parsedUA?.os?.name || \"other\"}`, parsedUA?.os?.version],\n    // language-metadata\n    // ECMAScript edition doesn't matter in JS.\n    [\"lang/js\"],\n    // browser vendor and version.\n    [\"md/browser\", `${parsedUA?.browser?.name ?? \"unknown\"}_${parsedUA?.browser?.version ?? \"unknown\"}`],\n  ];\n\n  if (serviceId) {\n    // api-metadata\n    // service Id may not appear in non-AWS clients\n    sections.push([`api/${serviceId}`, clientVersion]);\n  }\n\n  return sections;\n};\n", "import { RegionInfo, RegionInfoProvider } from \"@aws-sdk/types\";\n\n// Partition default templates\nconst AWS_TEMPLATE = \"logs.{region}.amazonaws.com\";\nconst AWS_CN_TEMPLATE = \"logs.{region}.amazonaws.com.cn\";\nconst AWS_ISO_TEMPLATE = \"logs.{region}.c2s.ic.gov\";\nconst AWS_ISO_B_TEMPLATE = \"logs.{region}.sc2s.sgov.gov\";\nconst AWS_US_GOV_TEMPLATE = \"logs.{region}.amazonaws.com\";\n\n// Partition regions\nconst AWS_REGIONS = new Set([\n  \"af-south-1\",\n  \"ap-east-1\",\n  \"ap-northeast-1\",\n  \"ap-northeast-2\",\n  \"ap-south-1\",\n  \"ap-southeast-1\",\n  \"ap-southeast-2\",\n  \"ca-central-1\",\n  \"eu-central-1\",\n  \"eu-north-1\",\n  \"eu-south-1\",\n  \"eu-west-1\",\n  \"eu-west-2\",\n  \"eu-west-3\",\n  \"me-south-1\",\n  \"sa-east-1\",\n  \"us-east-1\",\n  \"us-east-2\",\n  \"us-west-1\",\n  \"us-west-2\",\n]);\nconst AWS_CN_REGIONS = new Set([\"cn-north-1\", \"cn-northwest-1\"]);\nconst AWS_ISO_REGIONS = new Set([\"us-iso-east-1\"]);\nconst AWS_ISO_B_REGIONS = new Set([\"us-isob-east-1\"]);\nconst AWS_US_GOV_REGIONS = new Set([\"us-gov-east-1\", \"us-gov-west-1\"]);\n\nexport const defaultRegionInfoProvider: RegionInfoProvider = (region: string, options?: any) => {\n  let regionInfo: RegionInfo | undefined = undefined;\n  switch (region) {\n    // First, try to match exact region names.\n    case \"af-south-1\":\n      regionInfo = {\n        hostname: \"logs.af-south-1.amazonaws.com\",\n        partition: \"aws\",\n      };\n      break;\n    case \"ap-east-1\":\n      regionInfo = {\n        hostname: \"logs.ap-east-1.amazonaws.com\",\n        partition: \"aws\",\n      };\n      break;\n    case \"ap-northeast-1\":\n      regionInfo = {\n        hostname: \"logs.ap-northeast-1.amazonaws.com\",\n        partition: \"aws\",\n      };\n      break;\n    case \"ap-northeast-2\":\n      regionInfo = {\n        hostname: \"logs.ap-northeast-2.amazonaws.com\",\n        partition: \"aws\",\n      };\n      break;\n    case \"ap-south-1\":\n      regionInfo = {\n        hostname: \"logs.ap-south-1.amazonaws.com\",\n        partition: \"aws\",\n      };\n      break;\n    case \"ap-southeast-1\":\n      regionInfo = {\n        hostname: \"logs.ap-southeast-1.amazonaws.com\",\n        partition: \"aws\",\n      };\n      break;\n    case \"ap-southeast-2\":\n      regionInfo = {\n        hostname: \"logs.ap-southeast-2.amazonaws.com\",\n        partition: \"aws\",\n      };\n      break;\n    case \"ca-central-1\":\n      regionInfo = {\n        hostname: \"logs.ca-central-1.amazonaws.com\",\n        partition: \"aws\",\n      };\n      break;\n    case \"cn-north-1\":\n      regionInfo = {\n        hostname: \"logs.cn-north-1.amazonaws.com.cn\",\n        partition: \"aws-cn\",\n      };\n      break;\n    case \"cn-northwest-1\":\n      regionInfo = {\n        hostname: \"logs.cn-northwest-1.amazonaws.com.cn\",\n        partition: \"aws-cn\",\n      };\n      break;\n    case \"eu-central-1\":\n      regionInfo = {\n        hostname: \"logs.eu-central-1.amazonaws.com\",\n        partition: \"aws\",\n      };\n      break;\n    case \"eu-north-1\":\n      regionInfo = {\n        hostname: \"logs.eu-north-1.amazonaws.com\",\n        partition: \"aws\",\n      };\n      break;\n    case \"eu-south-1\":\n      regionInfo = {\n        hostname: \"logs.eu-south-1.amazonaws.com\",\n        partition: \"aws\",\n      };\n      break;\n    case \"eu-west-1\":\n      regionInfo = {\n        hostname: \"logs.eu-west-1.amazonaws.com\",\n        partition: \"aws\",\n      };\n      break;\n    case \"eu-west-2\":\n      regionInfo = {\n        hostname: \"logs.eu-west-2.amazonaws.com\",\n        partition: \"aws\",\n      };\n      break;\n    case \"eu-west-3\":\n      regionInfo = {\n        hostname: \"logs.eu-west-3.amazonaws.com\",\n        partition: \"aws\",\n      };\n      break;\n    case \"fips-us-east-1\":\n      regionInfo = {\n        hostname: \"logs-fips.us-east-1.amazonaws.com\",\n        partition: \"aws\",\n        signingRegion: \"us-east-1\",\n      };\n      break;\n    case \"fips-us-east-2\":\n      regionInfo = {\n        hostname: \"logs-fips.us-east-2.amazonaws.com\",\n        partition: \"aws\",\n        signingRegion: \"us-east-2\",\n      };\n      break;\n    case \"fips-us-west-1\":\n      regionInfo = {\n        hostname: \"logs-fips.us-west-1.amazonaws.com\",\n        partition: \"aws\",\n        signingRegion: \"us-west-1\",\n      };\n      break;\n    case \"fips-us-west-2\":\n      regionInfo = {\n        hostname: \"logs-fips.us-west-2.amazonaws.com\",\n        partition: \"aws\",\n        signingRegion: \"us-west-2\",\n      };\n      break;\n    case \"me-south-1\":\n      regionInfo = {\n        hostname: \"logs.me-south-1.amazonaws.com\",\n        partition: \"aws\",\n      };\n      break;\n    case \"sa-east-1\":\n      regionInfo = {\n        hostname: \"logs.sa-east-1.amazonaws.com\",\n        partition: \"aws\",\n      };\n      break;\n    case \"us-east-1\":\n      regionInfo = {\n        hostname: \"logs.us-east-1.amazonaws.com\",\n        partition: \"aws\",\n      };\n      break;\n    case \"us-east-2\":\n      regionInfo = {\n        hostname: \"logs.us-east-2.amazonaws.com\",\n        partition: \"aws\",\n      };\n      break;\n    case \"us-gov-east-1\":\n      regionInfo = {\n        hostname: \"logs.us-gov-east-1.amazonaws.com\",\n        partition: \"aws-us-gov\",\n        signingRegion: \"us-gov-east-1\",\n      };\n      break;\n    case \"us-gov-west-1\":\n      regionInfo = {\n        hostname: \"logs.us-gov-west-1.amazonaws.com\",\n        partition: \"aws-us-gov\",\n        signingRegion: \"us-gov-west-1\",\n      };\n      break;\n    case \"us-iso-east-1\":\n      regionInfo = {\n        hostname: \"logs.us-iso-east-1.c2s.ic.gov\",\n        partition: \"aws-iso\",\n      };\n      break;\n    case \"us-isob-east-1\":\n      regionInfo = {\n        hostname: \"logs.us-isob-east-1.sc2s.sgov.gov\",\n        partition: \"aws-iso-b\",\n      };\n      break;\n    case \"us-west-1\":\n      regionInfo = {\n        hostname: \"logs.us-west-1.amazonaws.com\",\n        partition: \"aws\",\n      };\n      break;\n    case \"us-west-2\":\n      regionInfo = {\n        hostname: \"logs.us-west-2.amazonaws.com\",\n        partition: \"aws\",\n      };\n      break;\n    // Next, try to match partition endpoints.\n    default:\n      if (AWS_REGIONS.has(region)) {\n        regionInfo = {\n          hostname: AWS_TEMPLATE.replace(\"{region}\", region),\n          partition: \"aws\",\n        };\n      }\n      if (AWS_CN_REGIONS.has(region)) {\n        regionInfo = {\n          hostname: AWS_CN_TEMPLATE.replace(\"{region}\", region),\n          partition: \"aws-cn\",\n        };\n      }\n      if (AWS_ISO_REGIONS.has(region)) {\n        regionInfo = {\n          hostname: AWS_ISO_TEMPLATE.replace(\"{region}\", region),\n          partition: \"aws-iso\",\n        };\n      }\n      if (AWS_ISO_B_REGIONS.has(region)) {\n        regionInfo = {\n          hostname: AWS_ISO_B_TEMPLATE.replace(\"{region}\", region),\n          partition: \"aws-iso-b\",\n        };\n      }\n      if (AWS_US_GOV_REGIONS.has(region)) {\n        regionInfo = {\n          hostname: AWS_US_GOV_TEMPLATE.replace(\"{region}\", region),\n          partition: \"aws-us-gov\",\n        };\n      }\n      // Finally, assume it's an AWS partition endpoint.\n      if (regionInfo === undefined) {\n        regionInfo = {\n          hostname: AWS_TEMPLATE.replace(\"{region}\", region),\n          partition: \"aws\",\n        };\n      }\n  }\n  return Promise.resolve({ signingService: \"logs\", ...regionInfo });\n};\n", "import { QueryParameterBag } from \"@aws-sdk/types\";\n\nexport function parseQueryString(querystring: string): QueryParameterBag {\n  const query: QueryParameterBag = {};\n  querystring = querystring.replace(/^\\?/, \"\");\n\n  if (querystring) {\n    for (const pair of querystring.split(\"&\")) {\n      let [key, value = null] = pair.split(\"=\");\n      key = decodeURIComponent(key);\n      if (value) {\n        value = decodeURIComponent(value);\n      }\n      if (!(key in query)) {\n        query[key] = value;\n      } else if (Array.isArray(query[key])) {\n        (query[key] as Array<string>).push(value as string);\n      } else {\n        query[key] = [query[key] as string, value as string];\n      }\n    }\n  }\n\n  return query;\n}\n", "import { parseQueryString } from \"@aws-sdk/querystring-parser\";\nimport { Endpoint, QueryParameterBag, UrlParser } from \"@aws-sdk/types\";\n\nexport const parseUrl: UrlParser = (url: string): Endpoint => {\n  const { hostname, pathname, port, protocol, search } = new URL(url);\n\n  let query: QueryParameterBag | undefined;\n  if (search) {\n    query = parseQueryString(search);\n  }\n\n  return {\n    hostname,\n    port: port ? parseInt(port) : undefined,\n    protocol,\n    path: pathname,\n    query,\n  };\n};\n", "import { defaultRegionInfoProvider } from \"./endpoints\";\nimport { Logger as __Logger } from \"@aws-sdk/types\";\nimport { parseUrl } from \"@aws-sdk/url-parser\";\n\n/**\n * @internal\n */\nexport const ClientSharedValues = {\n  apiVersion: \"2014-03-28\",\n  disableHostPrefix: false,\n  logger: {} as __Logger,\n  regionInfoProvider: defaultRegionInfoProvider,\n  serviceId: \"CloudWatch Logs\",\n  urlParser: parseUrl,\n};\n", "import { Endpoint, Provider, RegionInfoProvider, UrlParser } from \"@aws-sdk/types\";\n\nexport interface EndpointsInputConfig {\n  /**\n   * The fully qualified endpoint of the webservice. This is only required when using a custom endpoint (for example, when using a local version of S3).\n   */\n  endpoint?: string | Endpoint | Provider<Endpoint>;\n\n  /**\n   * Whether TLS is enabled for requests.\n   */\n  tls?: boolean;\n}\n\ninterface PreviouslyResolved {\n  regionInfoProvider: RegionInfoProvider;\n  urlParser: UrlParser;\n  region: Provider<string>;\n}\n\nexport interface EndpointsResolvedConfig extends Required<EndpointsInputConfig> {\n  endpoint: Provider<Endpoint>;\n  isCustomEndpoint: boolean;\n}\n\nexport const resolveEndpointsConfig = <T>(\n  input: T & EndpointsInputConfig & PreviouslyResolved\n): T & EndpointsResolvedConfig => ({\n  ...input,\n  tls: input.tls ?? true,\n  endpoint: input.endpoint ? normalizeEndpoint(input) : () => getEndPointFromRegion(input),\n  isCustomEndpoint: input.endpoint ? true : false,\n});\n\nconst normalizeEndpoint = (input: EndpointsInputConfig & PreviouslyResolved): Provider<Endpoint> => {\n  const { endpoint, urlParser } = input;\n  if (typeof endpoint === \"string\") {\n    const promisified = Promise.resolve(urlParser(endpoint));\n    return () => promisified;\n  } else if (typeof endpoint === \"object\") {\n    const promisified = Promise.resolve(endpoint);\n    return () => promisified;\n  }\n  return endpoint!;\n};\n\nconst getEndPointFromRegion = async (input: EndpointsInputConfig & PreviouslyResolved) => {\n  const { tls = true } = input;\n  const region = await input.region();\n\n  const dnsHostRegex = new RegExp(/^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]{0,61}[a-zA-Z0-9])$/);\n  if (!dnsHostRegex.test(region)) {\n    throw new Error(\"Invalid region in client config\");\n  }\n\n  const { hostname } = (await input.regionInfoProvider(region)) ?? {};\n  if (!hostname) {\n    throw new Error(\"Cannot resolve hostname from client config\");\n  }\n\n  return input.urlParser(`${tls ? \"https:\" : \"http:\"}//${hostname}`);\n};\n", "import { LoadedConfigSelectors, LocalConfigOptions } from \"@aws-sdk/node-config-provider\";\nimport { Provider } from \"@aws-sdk/types\";\n\nexport const REGION_ENV_NAME = \"AWS_REGION\";\nexport const REGION_INI_NAME = \"region\";\n\nexport const NODE_REGION_CONFIG_OPTIONS: LoadedConfigSelectors<string> = {\n  environmentVariableSelector: (env) => env[REGION_ENV_NAME],\n  configFileSelector: (profile) => profile[REGION_INI_NAME],\n  default: () => {\n    throw new Error(\"Region is missing\");\n  },\n};\n\nexport const NODE_REGION_CONFIG_FILE_OPTIONS: LocalConfigOptions = {\n  preferredFile: \"credentials\",\n};\n\nexport interface RegionInputConfig {\n  /**\n   * The AWS region to which this client will send requests\n   */\n  region?: string | Provider<string>;\n}\n\ninterface PreviouslyResolved {}\n\nexport interface RegionResolvedConfig {\n  region: Provider<string>;\n}\n\nexport const resolveRegionConfig = <T>(input: T & RegionInputConfig & PreviouslyResolved): T & RegionResolvedConfig => {\n  if (!input.region) {\n    throw new Error(\"Region is missing\");\n  }\n  return {\n    ...input,\n    region: normalizeRegion(input.region!),\n  };\n};\n\nconst normalizeRegion = (region: string | Provider<string>): Provider<string> => {\n  if (typeof region === \"string\") {\n    const promisified = Promise.resolve(region);\n    return () => promisified;\n  }\n  return region as Provider<string>;\n};\n", "import { HttpRequest } from \"@aws-sdk/protocol-http\";\nimport {\n  BodyLengthCalculator,\n  BuildHandler,\n  BuildHandlerArguments,\n  BuildHandlerOptions,\n  BuildHandlerOutput,\n  BuildMiddleware,\n  MetadataBearer,\n  Pluggable,\n} from \"@aws-sdk/types\";\n\nconst CONTENT_LENGTH_HEADER = \"content-length\";\n\nexport function contentLengthMiddleware(bodyLengthChecker: BodyLengthCalculator): BuildMiddleware<any, any> {\n  return <Output extends MetadataBearer>(next: BuildHandler<any, Output>): BuildHandler<any, Output> => async (\n    args: BuildHandlerArguments<any>\n  ): Promise<BuildHandlerOutput<Output>> => {\n    const request = args.request;\n    if (HttpRequest.isInstance(request)) {\n      const { body, headers } = request;\n      if (\n        body &&\n        Object.keys(headers)\n          .map((str) => str.toLowerCase())\n          .indexOf(CONTENT_LENGTH_HEADER) === -1\n      ) {\n        const length = bodyLengthChecker(body);\n        if (length !== undefined) {\n          request.headers = {\n            ...request.headers,\n            [CONTENT_LENGTH_HEADER]: String(length),\n          };\n        }\n      }\n    }\n\n    return next({\n      ...args,\n      request,\n    });\n  };\n}\n\nexport const contentLengthMiddlewareOptions: BuildHandlerOptions = {\n  step: \"build\",\n  tags: [\"SET_CONTENT_LENGTH\", \"CONTENT_LENGTH\"],\n  name: \"contentLengthMiddleware\",\n  override: true,\n};\n\nexport const getContentLengthPlugin = (options: { bodyLengthChecker: BodyLengthCalculator }): Pluggable<any, any> => ({\n  applyToStack: (clientStack) => {\n    clientStack.add(contentLengthMiddleware(options.bodyLengthChecker), contentLengthMiddlewareOptions);\n  },\n});\n", "import { HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { AbsoluteLocation, BuildHandlerOptions, BuildMiddleware, Pluggable, RequestHandler } from \"@aws-sdk/types\";\n\nexport interface HostHeaderInputConfig {}\ninterface PreviouslyResolved {\n  requestHandler: RequestHandler<any, any>;\n}\nexport interface HostHeaderResolvedConfig {\n  requestHandler: RequestHandler<any, any>;\n}\nexport function resolveHostHeaderConfig<T>(\n  input: T & PreviouslyResolved & HostHeaderInputConfig\n): T & HostHeaderResolvedConfig {\n  return input;\n}\n\nexport const hostHeaderMiddleware = <Input extends object, Output extends object>(\n  options: HostHeaderResolvedConfig\n): BuildMiddleware<Input, Output> => (next) => async (args) => {\n  if (!HttpRequest.isInstance(args.request)) return next(args);\n  const { request } = args;\n  const { handlerProtocol = \"\" } = options.requestHandler.metadata || {};\n  //For H2 request, remove 'host' header and use ':authority' header instead\n  //reference: https://nodejs.org/dist/latest-v13.x/docs/api/errors.html#ERR_HTTP2_INVALID_CONNECTION_HEADERS\n  if (handlerProtocol.indexOf(\"h2\") >= 0 && !request.headers[\":authority\"]) {\n    delete request.headers[\"host\"];\n    request.headers[\":authority\"] = \"\";\n    //non-H2 request and 'host' header is not set, set the 'host' header to request's hostname.\n  } else if (!request.headers[\"host\"]) {\n    request.headers[\"host\"] = request.hostname;\n  }\n  return next(args);\n};\n\nexport const hostHeaderMiddlewareOptions: BuildHandlerOptions & AbsoluteLocation = {\n  name: \"hostHeaderMiddleware\",\n  step: \"build\",\n  priority: \"low\",\n  tags: [\"HOST\"],\n  override: true,\n};\n\nexport const getHostHeaderPlugin = (options: HostHeaderResolvedConfig): Pluggable<any, any> => ({\n  applyToStack: (clientStack) => {\n    clientStack.add(hostHeaderMiddleware(options), hostHeaderMiddlewareOptions);\n  },\n});\n", "import { HttpResponse } from \"@aws-sdk/protocol-http\";\nimport {\n  AbsoluteLocation,\n  HandlerExecutionContext,\n  InitializeHandler,\n  InitializeHandlerArguments,\n  InitializeHandlerOptions,\n  InitializeHandlerOutput,\n  MetadataBearer,\n  Pluggable,\n} from \"@aws-sdk/types\";\n\nexport const loggerMiddleware = () => <Output extends MetadataBearer = MetadataBearer>(\n  next: InitializeHandler<any, Output>,\n  context: HandlerExecutionContext\n): InitializeHandler<any, Output> => async (\n  args: InitializeHandlerArguments<any>\n): Promise<InitializeHandlerOutput<Output>> => {\n  const { clientName, commandName, inputFilterSensitiveLog, logger, outputFilterSensitiveLog } = context;\n\n  const response = await next(args);\n\n  if (!logger) {\n    return response;\n  }\n\n  if (typeof logger.info === \"function\") {\n    const { $metadata, ...outputWithoutMetadata } = response.output;\n    logger.info({\n      clientName,\n      commandName,\n      input: inputFilterSensitiveLog(args.input),\n      output: outputFilterSensitiveLog(outputWithoutMetadata),\n      metadata: $metadata,\n    });\n  }\n\n  return response;\n};\n\nexport const loggerMiddlewareOptions: InitializeHandlerOptions & AbsoluteLocation = {\n  name: \"loggerMiddleware\",\n  tags: [\"LOGGER\"],\n  step: \"initialize\",\n  override: true,\n};\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport const getLoggerPlugin = (options: any): Pluggable<any, any> => ({\n  applyToStack: (clientStack) => {\n    clientStack.add(loggerMiddleware(), loggerMiddlewareOptions);\n  },\n});\n", "export const ALGORITHM_QUERY_PARAM = \"X-Amz-Algorithm\";\nexport const CREDENTIAL_QUERY_PARAM = \"X-Amz-Credential\";\nexport const AMZ_DATE_QUERY_PARAM = \"X-Amz-Date\";\nexport const SIGNED_HEADERS_QUERY_PARAM = \"X-Amz-SignedHeaders\";\nexport const EXPIRES_QUERY_PARAM = \"X-Amz-Expires\";\nexport const SIGNATURE_QUERY_PARAM = \"X-Amz-Signature\";\nexport const TOKEN_QUERY_PARAM = \"X-Amz-Security-Token\";\n\nexport const AUTH_HEADER = \"authorization\";\nexport const AMZ_DATE_HEADER = AMZ_DATE_QUERY_PARAM.toLowerCase();\nexport const DATE_HEADER = \"date\";\nexport const GENERATED_HEADERS = [AUTH_HEADER, AMZ_DATE_HEADER, DATE_HEADER];\nexport const SIGNATURE_HEADER = SIGNATURE_QUERY_PARAM.toLowerCase();\nexport const SHA256_HEADER = \"x-amz-content-sha256\";\nexport const TOKEN_HEADER = TOKEN_QUERY_PARAM.toLowerCase();\nexport const HOST_HEADER = \"host\";\n\nexport const ALWAYS_UNSIGNABLE_HEADERS = {\n  authorization: true,\n  \"cache-control\": true,\n  connection: true,\n  expect: true,\n  from: true,\n  \"keep-alive\": true,\n  \"max-forwards\": true,\n  pragma: true,\n  referer: true,\n  te: true,\n  trailer: true,\n  \"transfer-encoding\": true,\n  upgrade: true,\n  \"user-agent\": true,\n  \"x-amzn-trace-id\": true,\n};\n\nexport const PROXY_HEADER_PATTERN = /^proxy-/;\n\nexport const SEC_HEADER_PATTERN = /^sec-/;\n\nexport const UNSIGNABLE_PATTERNS = [/^proxy-/i, /^sec-/i];\n\nexport const ALGORITHM_IDENTIFIER = \"AWS4-HMAC-SHA256\";\n\nexport const EVENT_ALGORITHM_IDENTIFIER = \"AWS4-HMAC-SHA256-PAYLOAD\";\n\nexport const UNSIGNED_PAYLOAD = \"UNSIGNED-PAYLOAD\";\n\nexport const MAX_CACHE_SIZE = 50;\nexport const KEY_TYPE_IDENTIFIER = \"aws4_request\";\n\nexport const MAX_PRESIGNED_TTL = 60 * 60 * 24 * 7;\n", "import { Credentials, HashConstructor, SourceData } from \"@aws-sdk/types\";\nimport { toHex } from \"@aws-sdk/util-hex-encoding\";\n\nimport { KEY_TYPE_IDENTIFIER, MAX_CACHE_SIZE } from \"./constants\";\n\nconst signingKeyCache: { [key: string]: Uint8Array } = {};\nconst cacheQueue: Array<string> = [];\n\n/**\n * Create a string describing the scope of credentials used to sign a request.\n *\n * @param shortDate The current calendar date in the form YYYYMMDD.\n * @param region    The AWS region in which the service resides.\n * @param service   The service to which the signed request is being sent.\n */\nexport function createScope(shortDate: string, region: string, service: string): string {\n  return `${shortDate}/${region}/${service}/${KEY_TYPE_IDENTIFIER}`;\n}\n\n/**\n * Derive a signing key from its composite parts\n *\n * @param sha256Constructor A constructor function that can instantiate SHA-256\n *                          hash objects.\n * @param credentials       The credentials with which the request will be\n *                          signed.\n * @param shortDate         The current calendar date in the form YYYYMMDD.\n * @param region            The AWS region in which the service resides.\n * @param service           The service to which the signed request is being\n *                          sent.\n */\nexport const getSigningKey = async (\n  sha256Constructor: HashConstructor,\n  credentials: Credentials,\n  shortDate: string,\n  region: string,\n  service: string\n): Promise<Uint8Array> => {\n  const credsHash = await hmac(sha256Constructor, credentials.secretAccessKey, credentials.accessKeyId);\n  const cacheKey = `${shortDate}:${region}:${service}:${toHex(credsHash)}:${credentials.sessionToken}`;\n  if (cacheKey in signingKeyCache) {\n    return signingKeyCache[cacheKey];\n  }\n\n  cacheQueue.push(cacheKey);\n  while (cacheQueue.length > MAX_CACHE_SIZE) {\n    delete signingKeyCache[cacheQueue.shift() as string];\n  }\n\n  let key: SourceData = `AWS4${credentials.secretAccessKey}`;\n  for (const signable of [shortDate, region, service, KEY_TYPE_IDENTIFIER]) {\n    key = await hmac(sha256Constructor, key, signable);\n  }\n  return (signingKeyCache[cacheKey] = key as Uint8Array);\n};\n\n/**\n * @internal\n */\nexport function clearCredentialCache(): void {\n  cacheQueue.length = 0;\n  Object.keys(signingKeyCache).forEach((cacheKey) => {\n    delete signingKeyCache[cacheKey];\n  });\n}\n\nfunction hmac(ctor: HashConstructor, secret: SourceData, data: SourceData): Promise<Uint8Array> {\n  const hash = new ctor(secret);\n  hash.update(data);\n  return hash.digest();\n}\n", "import { HeaderBag, HttpRequest } from \"@aws-sdk/types\";\n\nimport { ALWAYS_UNSIGNABLE_HEADERS, PROXY_HEADER_PATTERN, SEC_HEADER_PATTERN } from \"./constants\";\n\n/**\n * @internal\n */\nexport function getCanonicalHeaders(\n  { headers }: HttpRequest,\n  unsignableHeaders?: Set<string>,\n  signableHeaders?: Set<string>\n): HeaderBag {\n  const canonical: HeaderBag = {};\n  for (const headerName of Object.keys(headers).sort()) {\n    const canonicalHeaderName = headerName.toLowerCase();\n    if (\n      canonicalHeaderName in ALWAYS_UNSIGNABLE_HEADERS ||\n      unsignableHeaders?.has(canonicalHeaderName) ||\n      PROXY_HEADER_PATTERN.test(canonicalHeaderName) ||\n      SEC_HEADER_PATTERN.test(canonicalHeaderName)\n    ) {\n      if (!signableHeaders || (signableHeaders && !signableHeaders.has(canonicalHeaderName))) {\n        continue;\n      }\n    }\n\n    canonical[canonicalHeaderName] = headers[headerName].trim().replace(/\\s+/g, \" \");\n  }\n\n  return canonical;\n}\n", "import { HttpRequest } from \"@aws-sdk/types\";\nimport { escapeUri } from \"@aws-sdk/util-uri-escape\";\n\nimport { SIGNATURE_HEADER } from \"./constants\";\n\n/**\n * @internal\n */\nexport function getCanonicalQuery({ query = {} }: HttpRequest): string {\n  const keys: Array<string> = [];\n  const serialized: { [key: string]: string } = {};\n  for (const key of Object.keys(query).sort()) {\n    if (key.toLowerCase() === SIGNATURE_HEADER) {\n      continue;\n    }\n\n    keys.push(key);\n    const value = query[key];\n    if (typeof value === \"string\") {\n      serialized[key] = `${escapeUri(key)}=${escapeUri(value)}`;\n    } else if (Array.isArray(value)) {\n      serialized[key] = value\n        .slice(0)\n        .sort()\n        .reduce(\n          (encoded: Array<string>, value: string) => encoded.concat([`${escapeUri(key)}=${escapeUri(value)}`]),\n          []\n        )\n        .join(\"&\");\n    }\n  }\n\n  return keys\n    .map((key) => serialized[key])\n    .filter((serialized) => serialized) // omit any falsy values\n    .join(\"&\");\n}\n", "export const isArrayBuffer = (arg: any): arg is ArrayBuffer =>\n  (typeof ArrayBuffer === \"function\" && arg instanceof ArrayBuffer) ||\n  Object.prototype.toString.call(arg) === \"[object ArrayBuffer]\";\n", "import { isArrayBuffer } from \"@aws-sdk/is-array-buffer\";\nimport { HashConstructor, HttpRequest } from \"@aws-sdk/types\";\nimport { toHex } from \"@aws-sdk/util-hex-encoding\";\n\nimport { SHA256_HEADER, UNSIGNED_PAYLOAD } from \"./constants\";\n\n/**\n * @internal\n */\nexport async function getPayloadHash(\n  { headers, body }: HttpRequest,\n  hashConstructor: HashConstructor\n): Promise<string> {\n  for (const headerName of Object.keys(headers)) {\n    if (headerName.toLowerCase() === SHA256_HEADER) {\n      return headers[headerName];\n    }\n  }\n\n  if (body == undefined) {\n    return \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\";\n  } else if (typeof body === \"string\" || ArrayBuffer.isView(body) || isArrayBuffer(body)) {\n    const hashCtor = new hashConstructor();\n    hashCtor.update(body);\n    return toHex(await hashCtor.digest());\n  }\n\n  // As any defined body that is not a string or binary data is a stream, this\n  // body is unsignable. Attempt to send the request with an unsigned payload,\n  // which may or may not be accepted by the service.\n  return UNSIGNED_PAYLOAD;\n}\n", "import { HeaderBag } from \"@aws-sdk/types\";\n\nexport function hasHeader(soughtHeader: string, headers: HeaderBag): boolean {\n  soughtHeader = soughtHeader.toLowerCase();\n  for (const headerName of Object.keys(headers)) {\n    if (soughtHeader === headerName.toLowerCase()) {\n      return true;\n    }\n  }\n\n  return false;\n}\n", "import { HttpRequest, QueryParameterBag } from \"@aws-sdk/types\";\n\n/**\n * @internal\n */\nexport function cloneRequest({ headers, query, ...rest }: HttpRequest): HttpRequest {\n  return {\n    ...rest,\n    headers: { ...headers },\n    query: query ? cloneQuery(query) : undefined,\n  };\n}\n\nfunction cloneQuery(query: QueryParameterBag): QueryParameterBag {\n  return Object.keys(query).reduce((carry: QueryParameterBag, paramName: string) => {\n    const param = query[paramName];\n    return {\n      ...carry,\n      [paramName]: Array.isArray(param) ? [...param] : param,\n    };\n  }, {});\n}\n", "import { HttpRequest, QueryParameterBag } from \"@aws-sdk/types\";\n\nimport { cloneRequest } from \"./cloneRequest\";\n\n/**\n * @internal\n */\nexport function moveHeadersToQuery(\n  request: HttpRequest,\n  options: { unhoistableHeaders?: Set<string> } = {}\n): HttpRequest & { query: QueryParameterBag } {\n  const { headers, query = {} as QueryParameterBag } =\n    typeof (request as any).clone === \"function\" ? (request as any).clone() : cloneRequest(request);\n  for (const name of Object.keys(headers)) {\n    const lname = name.toLowerCase();\n    if (lname.substr(0, 6) === \"x-amz-\" && !options.unhoistableHeaders?.has(lname)) {\n      query[name] = headers[name];\n      delete headers[name];\n    }\n  }\n\n  return {\n    ...request,\n    headers,\n    query,\n  };\n}\n", "import { HttpRequest } from \"@aws-sdk/types\";\n\nimport { cloneRequest } from \"./cloneRequest\";\nimport { GENERATED_HEADERS } from \"./constants\";\n\n/**\n * @internal\n */\nexport function prepareRequest(request: HttpRequest): HttpRequest {\n  // Create a clone of the request object that does not clone the body\n  request = typeof (request as any).clone === \"function\" ? (request as any).clone() : cloneRequest(request);\n\n  for (const headerName of Object.keys(request.headers)) {\n    if (GENERATED_HEADERS.indexOf(headerName.toLowerCase()) > -1) {\n      delete request.headers[headerName];\n    }\n  }\n\n  return request;\n}\n", "export function iso8601(time: number | string | Date): string {\n  return toDate(time)\n    .toISOString()\n    .replace(/\\.\\d{3}Z$/, \"Z\");\n}\n\nexport function toDate(time: number | string | Date): Date {\n  if (typeof time === \"number\") {\n    return new Date(time * 1000);\n  }\n\n  if (typeof time === \"string\") {\n    if (Number(time)) {\n      return new Date(Number(time) * 1000);\n    }\n    return new Date(time);\n  }\n\n  return time;\n}\n", "import {\n  Credentials,\n  DateInput,\n  EventSigner,\n  EventSigningArguments,\n  FormattedEvent,\n  HashConstructor,\n  HeaderBag,\n  HttpRequest,\n  Provider,\n  RequestPresigner,\n  RequestPresigningArguments,\n  RequestSigner,\n  RequestSigningArguments,\n  SigningArguments,\n  StringSigner,\n} from \"@aws-sdk/types\";\nimport { toHex } from \"@aws-sdk/util-hex-encoding\";\n\nimport {\n  ALGORITHM_IDENTIFIER,\n  ALGORITHM_QUERY_PARAM,\n  AMZ_DATE_HEADER,\n  AMZ_DATE_QUERY_PARAM,\n  AUTH_HEADER,\n  CREDENTIAL_QUERY_PARAM,\n  EVENT_ALGORITHM_IDENTIFIER,\n  EXPIRES_QUERY_PARAM,\n  MAX_PRESIGNED_TTL,\n  SHA256_HEADER,\n  SIGNATURE_QUERY_PARAM,\n  SIGNED_HEADERS_QUERY_PARAM,\n  TOKEN_HEADER,\n  TOKEN_QUERY_PARAM,\n} from \"./constants\";\nimport { createScope, getSigningKey } from \"./credentialDerivation\";\nimport { getCanonicalHeaders } from \"./getCanonicalHeaders\";\nimport { getCanonicalQuery } from \"./getCanonicalQuery\";\nimport { getPayloadHash } from \"./getPayloadHash\";\nimport { hasHeader } from \"./hasHeader\";\nimport { moveHeadersToQuery } from \"./moveHeadersToQuery\";\nimport { prepareRequest } from \"./prepareRequest\";\nimport { iso8601 } from \"./utilDate\";\n\nexport interface SignatureV4Init {\n  /**\n   * The service signing name.\n   */\n  service: string;\n\n  /**\n   * The region name or a function that returns a promise that will be\n   * resolved with the region name.\n   */\n  region: string | Provider<string>;\n\n  /**\n   * The credentials with which the request should be signed or a function\n   * that returns a promise that will be resolved with credentials.\n   */\n  credentials: Credentials | Provider<Credentials>;\n\n  /**\n   * A constructor function for a hash object that will calculate SHA-256 HMAC\n   * checksums.\n   */\n  sha256?: HashConstructor;\n\n  /**\n   * Whether to uri-escape the request URI path as part of computing the\n   * canonical request string. This is required for every AWS service, except\n   * Amazon S3, as of late 2017.\n   *\n   * @default [true]\n   */\n  uriEscapePath?: boolean;\n\n  /**\n   * Whether to calculate a checksum of the request body and include it as\n   * either a request header (when signing) or as a query string parameter\n   * (when presigning). This is required for AWS Glacier and Amazon S3 and optional for\n   * every other AWS service as of late 2017.\n   *\n   * @default [true]\n   */\n  applyChecksum?: boolean;\n}\n\nexport interface SignatureV4CryptoInit {\n  sha256: HashConstructor;\n}\n\nexport class SignatureV4 implements RequestPresigner, RequestSigner, StringSigner, EventSigner {\n  private readonly service: string;\n  private readonly regionProvider: Provider<string>;\n  private readonly credentialProvider: Provider<Credentials>;\n  private readonly sha256: HashConstructor;\n  private readonly uriEscapePath: boolean;\n  private readonly applyChecksum: boolean;\n\n  constructor({\n    applyChecksum,\n    credentials,\n    region,\n    service,\n    sha256,\n    uriEscapePath = true,\n  }: SignatureV4Init & SignatureV4CryptoInit) {\n    this.service = service;\n    this.sha256 = sha256;\n    this.uriEscapePath = uriEscapePath;\n    // default to true if applyChecksum isn't set\n    this.applyChecksum = typeof applyChecksum === \"boolean\" ? applyChecksum : true;\n    this.regionProvider = normalizeRegionProvider(region);\n    this.credentialProvider = normalizeCredentialsProvider(credentials);\n  }\n\n  public async presign(originalRequest: HttpRequest, options: RequestPresigningArguments = {}): Promise<HttpRequest> {\n    const {\n      signingDate = new Date(),\n      expiresIn = 3600,\n      unsignableHeaders,\n      unhoistableHeaders,\n      signableHeaders,\n      signingRegion,\n      signingService,\n    } = options;\n    const credentials = await this.credentialProvider();\n    const region = signingRegion ?? (await this.regionProvider());\n\n    const { longDate, shortDate } = formatDate(signingDate);\n    if (expiresIn > MAX_PRESIGNED_TTL) {\n      return Promise.reject(\n        \"Signature version 4 presigned URLs\" + \" must have an expiration date less than one week in\" + \" the future\"\n      );\n    }\n\n    const scope = createScope(shortDate, region, signingService ?? this.service);\n    const request = moveHeadersToQuery(prepareRequest(originalRequest), { unhoistableHeaders });\n\n    if (credentials.sessionToken) {\n      request.query[TOKEN_QUERY_PARAM] = credentials.sessionToken;\n    }\n    request.query[ALGORITHM_QUERY_PARAM] = ALGORITHM_IDENTIFIER;\n    request.query[CREDENTIAL_QUERY_PARAM] = `${credentials.accessKeyId}/${scope}`;\n    request.query[AMZ_DATE_QUERY_PARAM] = longDate;\n    request.query[EXPIRES_QUERY_PARAM] = expiresIn.toString(10);\n\n    const canonicalHeaders = getCanonicalHeaders(request, unsignableHeaders, signableHeaders);\n    request.query[SIGNED_HEADERS_QUERY_PARAM] = getCanonicalHeaderList(canonicalHeaders);\n\n    request.query[SIGNATURE_QUERY_PARAM] = await this.getSignature(\n      longDate,\n      scope,\n      this.getSigningKey(credentials, region, shortDate, signingService),\n      this.createCanonicalRequest(request, canonicalHeaders, await getPayloadHash(originalRequest, this.sha256))\n    );\n\n    return request;\n  }\n\n  public async sign(stringToSign: string, options?: SigningArguments): Promise<string>;\n  public async sign(event: FormattedEvent, options: EventSigningArguments): Promise<string>;\n  public async sign(requestToSign: HttpRequest, options?: RequestSigningArguments): Promise<HttpRequest>;\n  public async sign(toSign: any, options: any): Promise<any> {\n    if (typeof toSign === \"string\") {\n      return this.signString(toSign, options);\n    } else if (toSign.headers && toSign.payload) {\n      return this.signEvent(toSign, options);\n    } else {\n      return this.signRequest(toSign, options);\n    }\n  }\n\n  private async signEvent(\n    { headers, payload }: FormattedEvent,\n    { signingDate = new Date(), priorSignature, signingRegion, signingService }: EventSigningArguments\n  ): Promise<string> {\n    const region = signingRegion ?? (await this.regionProvider());\n    const { shortDate, longDate } = formatDate(signingDate);\n    const scope = createScope(shortDate, region, signingService ?? this.service);\n    const hashedPayload = await getPayloadHash({ headers: {}, body: payload } as any, this.sha256);\n    const hash = new this.sha256();\n    hash.update(headers);\n    const hashedHeaders = toHex(await hash.digest());\n    const stringToSign = [\n      EVENT_ALGORITHM_IDENTIFIER,\n      longDate,\n      scope,\n      priorSignature,\n      hashedHeaders,\n      hashedPayload,\n    ].join(\"\\n\");\n    return this.signString(stringToSign, { signingDate, signingRegion: region, signingService });\n  }\n\n  private async signString(\n    stringToSign: string,\n    { signingDate = new Date(), signingRegion, signingService }: SigningArguments = {}\n  ): Promise<string> {\n    const credentials = await this.credentialProvider();\n    const region = signingRegion ?? (await this.regionProvider());\n    const { shortDate } = formatDate(signingDate);\n\n    const hash = new this.sha256(await this.getSigningKey(credentials, region, shortDate, signingService));\n    hash.update(stringToSign);\n    return toHex(await hash.digest());\n  }\n\n  private async signRequest(\n    requestToSign: HttpRequest,\n    {\n      signingDate = new Date(),\n      signableHeaders,\n      unsignableHeaders,\n      signingRegion,\n      signingService,\n    }: RequestSigningArguments = {}\n  ): Promise<HttpRequest> {\n    const credentials = await this.credentialProvider();\n    const region = signingRegion ?? (await this.regionProvider());\n    const request = prepareRequest(requestToSign);\n    const { longDate, shortDate } = formatDate(signingDate);\n    const scope = createScope(shortDate, region, signingService ?? this.service);\n\n    request.headers[AMZ_DATE_HEADER] = longDate;\n    if (credentials.sessionToken) {\n      request.headers[TOKEN_HEADER] = credentials.sessionToken;\n    }\n\n    const payloadHash = await getPayloadHash(request, this.sha256);\n    if (!hasHeader(SHA256_HEADER, request.headers) && this.applyChecksum) {\n      request.headers[SHA256_HEADER] = payloadHash;\n    }\n\n    const canonicalHeaders = getCanonicalHeaders(request, unsignableHeaders, signableHeaders);\n    const signature = await this.getSignature(\n      longDate,\n      scope,\n      this.getSigningKey(credentials, region, shortDate, signingService),\n      this.createCanonicalRequest(request, canonicalHeaders, payloadHash)\n    );\n\n    request.headers[AUTH_HEADER] =\n      `${ALGORITHM_IDENTIFIER} ` +\n      `Credential=${credentials.accessKeyId}/${scope}, ` +\n      `SignedHeaders=${getCanonicalHeaderList(canonicalHeaders)}, ` +\n      `Signature=${signature}`;\n\n    return request;\n  }\n\n  private createCanonicalRequest(request: HttpRequest, canonicalHeaders: HeaderBag, payloadHash: string): string {\n    const sortedHeaders = Object.keys(canonicalHeaders).sort();\n    return `${request.method}\n${this.getCanonicalPath(request)}\n${getCanonicalQuery(request)}\n${sortedHeaders.map((name) => `${name}:${canonicalHeaders[name]}`).join(\"\\n\")}\n\n${sortedHeaders.join(\";\")}\n${payloadHash}`;\n  }\n\n  private async createStringToSign(\n    longDate: string,\n    credentialScope: string,\n    canonicalRequest: string\n  ): Promise<string> {\n    const hash = new this.sha256();\n    hash.update(canonicalRequest);\n    const hashedRequest = await hash.digest();\n\n    return `${ALGORITHM_IDENTIFIER}\n${longDate}\n${credentialScope}\n${toHex(hashedRequest)}`;\n  }\n\n  private getCanonicalPath({ path }: HttpRequest): string {\n    if (this.uriEscapePath) {\n      const doubleEncoded = encodeURIComponent(path.replace(/^\\//, \"\"));\n      return `/${doubleEncoded.replace(/%2F/g, \"/\")}`;\n    }\n\n    return path;\n  }\n\n  private async getSignature(\n    longDate: string,\n    credentialScope: string,\n    keyPromise: Promise<Uint8Array>,\n    canonicalRequest: string\n  ): Promise<string> {\n    const stringToSign = await this.createStringToSign(longDate, credentialScope, canonicalRequest);\n\n    const hash = new this.sha256(await keyPromise);\n    hash.update(stringToSign);\n    return toHex(await hash.digest());\n  }\n\n  private getSigningKey(\n    credentials: Credentials,\n    region: string,\n    shortDate: string,\n    service?: string\n  ): Promise<Uint8Array> {\n    return getSigningKey(this.sha256, credentials, shortDate, region, service || this.service);\n  }\n}\n\nconst formatDate = (now: DateInput): { longDate: string; shortDate: string } => {\n  const longDate = iso8601(now).replace(/[\\-:]/g, \"\");\n  return {\n    longDate,\n    shortDate: longDate.substr(0, 8),\n  };\n};\n\nconst getCanonicalHeaderList = (headers: object): string => Object.keys(headers).sort().join(\";\");\n\nconst normalizeRegionProvider = (region: string | Provider<string>): Provider<string> => {\n  if (typeof region === \"string\") {\n    const promisified = Promise.resolve(region);\n    return () => promisified;\n  } else {\n    return region;\n  }\n};\n\nconst normalizeCredentialsProvider = (credentials: Credentials | Provider<Credentials>): Provider<Credentials> => {\n  if (typeof credentials === \"object\") {\n    const promisified = Promise.resolve(credentials);\n    return () => promisified;\n  } else {\n    return credentials;\n  }\n};\n", "import { SignatureV4 } from \"@aws-sdk/signature-v4\";\nimport { Credentials, HashConstructor, Provider, RegionInfo, RegionInfoProvider, RequestSigner } from \"@aws-sdk/types\";\n\nexport interface AwsAuthInputConfig {\n  /**\n   * The credentials used to sign requests.\n   */\n  credentials?: Credentials | Provider<Credentials>;\n\n  /**\n   * The signer to use when signing requests.\n   */\n  signer?: RequestSigner | Provider<RequestSigner>;\n\n  /**\n   * Whether to escape request path when signing the request.\n   */\n  signingEscapePath?: boolean;\n\n  /**\n   * An offset value in milliseconds to apply to all signing times.\n   */\n  systemClockOffset?: number;\n\n  /**\n   * The region where you want to sign your request against. This\n   * can be different to the region in the endpoint.\n   */\n  signingRegion?: string;\n}\ninterface PreviouslyResolved {\n  credentialDefaultProvider: (input: any) => Provider<Credentials>;\n  region: string | Provider<string>;\n  regionInfoProvider: RegionInfoProvider;\n  signingName?: string;\n  serviceId: string;\n  sha256: HashConstructor;\n}\nexport interface AwsAuthResolvedConfig {\n  credentials: Provider<Credentials>;\n  signer: Provider<RequestSigner>;\n  signingEscapePath: boolean;\n  systemClockOffset: number;\n}\nexport function resolveAwsAuthConfig<T>(input: T & AwsAuthInputConfig & PreviouslyResolved): T & AwsAuthResolvedConfig {\n  const credentials = input.credentials || input.credentialDefaultProvider(input as any);\n  const normalizedCreds = normalizeProvider(credentials);\n  const { signingEscapePath = true, systemClockOffset = input.systemClockOffset || 0, sha256 } = input;\n  let signer: Provider<RequestSigner>;\n  if (input.signer) {\n    //if signer is supplied by user, normalize it to a function returning a promise for signer.\n    signer = normalizeProvider(input.signer);\n  } else {\n    //construct a provider inferring signing from region.\n    signer = () =>\n      normalizeProvider(input.region)()\n        .then(async (region) => [(await input.regionInfoProvider(region)) || {}, region] as [RegionInfo, string])\n        .then(([regionInfo, region]) => {\n          const { signingRegion, signingService } = regionInfo;\n          //update client's singing region and signing service config if they are resolved.\n          //signing region resolving order: user supplied signingRegion -> endpoints.json inferred region -> client region\n          input.signingRegion = input.signingRegion || signingRegion || region;\n          //signing name resolving order:\n          //user supplied signingName -> endpoints.json inferred (credential scope -> model arnNamespace) -> model service id\n          input.signingName = input.signingName || signingService || input.serviceId;\n\n          return new SignatureV4({\n            credentials: normalizedCreds,\n            region: input.signingRegion,\n            service: input.signingName,\n            sha256,\n            uriEscapePath: signingEscapePath,\n          });\n        });\n  }\n\n  return {\n    ...input,\n    systemClockOffset,\n    signingEscapePath,\n    credentials: normalizedCreds,\n    signer,\n  };\n}\n\nfunction normalizeProvider<T>(input: T | Provider<T>): Provider<T> {\n  if (typeof input === \"object\") {\n    const promisified = Promise.resolve(input);\n    return () => promisified;\n  }\n  return input as Provider<T>;\n}\n", "import { HttpRequest } from \"@aws-sdk/protocol-http\";\nimport {\n  FinalizeHandler,\n  FinalizeHandlerArguments,\n  FinalizeHandlerOutput,\n  FinalizeRequestMiddleware,\n  HandlerExecutionContext,\n  Pluggable,\n  RelativeMiddlewareOptions,\n} from \"@aws-sdk/types\";\n\nimport { AwsAuthResolvedConfig } from \"./configurations\";\n\nconst isClockSkewed = (newServerTime: number, systemClockOffset: number) =>\n  Math.abs(getSkewCorrectedDate(systemClockOffset).getTime() - newServerTime) >= 300000;\n\nconst getSkewCorrectedDate = (systemClockOffset: number) => new Date(Date.now() + systemClockOffset);\n\nexport function awsAuthMiddleware<Input extends object, Output extends object>(\n  options: AwsAuthResolvedConfig\n): FinalizeRequestMiddleware<Input, Output> {\n  return (next: FinalizeHandler<Input, Output>, context: HandlerExecutionContext): FinalizeHandler<Input, Output> =>\n    async function (args: FinalizeHandlerArguments<Input>): Promise<FinalizeHandlerOutput<Output>> {\n      if (!HttpRequest.isInstance(args.request)) return next(args);\n      const signer = typeof options.signer === \"function\" ? await options.signer() : options.signer;\n      const output = await next({\n        ...args,\n        request: await signer.sign(args.request, {\n          signingDate: new Date(Date.now() + options.systemClockOffset),\n          signingRegion: context[\"signing_region\"],\n          signingService: context[\"signing_service\"],\n        }),\n      });\n\n      const { headers } = output.response as any;\n      const dateHeader = headers && (headers.date || headers.Date);\n      if (dateHeader) {\n        const serverTime = Date.parse(dateHeader);\n        if (isClockSkewed(serverTime, options.systemClockOffset)) {\n          options.systemClockOffset = serverTime - Date.now();\n        }\n      }\n\n      return output;\n    };\n}\n\nexport const awsAuthMiddlewareOptions: RelativeMiddlewareOptions = {\n  name: \"awsAuthMiddleware\",\n  tags: [\"SIGNATURE\", \"AWSAUTH\"],\n  relation: \"after\",\n  toMiddleware: \"retryMiddleware\",\n  override: true,\n};\n\nexport const getAwsAuthPlugin = (options: AwsAuthResolvedConfig): Pluggable<any, any> => ({\n  applyToStack: (clientStack) => {\n    clientStack.addRelativeTo(awsAuthMiddleware(options), awsAuthMiddlewareOptions);\n  },\n});\n", "import { Provider, UserAgent } from \"@aws-sdk/types\";\nexport interface UserAgentInputConfig {\n  /**\n   * The custom user agent header that would be appended to default one\n   */\n  customUserAgent?: string | UserAgent;\n}\ninterface PreviouslyResolved {\n  defaultUserAgentProvider: Provider<UserAgent>;\n  runtime: string;\n}\nexport interface UserAgentResolvedConfig {\n  defaultUserAgentProvider: Provider<UserAgent>;\n  customUserAgent?: UserAgent;\n  runtime: string;\n}\nexport function resolveUserAgentConfig<T>(\n  input: T & PreviouslyResolved & UserAgentInputConfig\n): T & UserAgentResolvedConfig {\n  return {\n    ...input,\n    customUserAgent: typeof input.customUserAgent === \"string\" ? [[input.customUserAgent]] : input.customUserAgent,\n  };\n}\n", "export const USER_AGENT = \"user-agent\";\n\nexport const X_AMZ_USER_AGENT = \"x-amz-user-agent\";\n\nexport const SPACE = \" \";\n\nexport const UA_ESCAPE_REGEX = /[^\\!\\#\\$\\%\\&\\'\\*\\+\\-\\.\\^\\_\\`\\|\\~\\d\\w]/g;\n", "import { HttpRequest } from \"@aws-sdk/protocol-http\";\nimport {\n  AbsoluteLocation,\n  BuildHandler,\n  BuildHandlerArguments,\n  BuildHandlerOptions,\n  BuildHandlerOutput,\n  HandlerExecutionContext,\n  MetadataBearer,\n  Pluggable,\n  UserAgentPair,\n} from \"@aws-sdk/types\";\n\nimport { UserAgentResolvedConfig } from \"./configurations\";\nimport { SPACE, UA_ESCAPE_REGEX, USER_AGENT, X_AMZ_USER_AGENT } from \"./constants\";\n\n/**\n * Build user agent header sections from:\n * 1. runtime-specific default user agent provider;\n * 2. custom user agent from `customUserAgent` client config;\n * 3. handler execution context set by internal SDK components;\n * The built user agent will be set to `x-amz-user-agent` header for ALL the\n * runtimes.\n * Please note that any override to the `user-agent` or `x-amz-user-agent` header\n * in the HTTP request is discouraged. Please use `customUserAgent` client\n * config or middleware setting the `userAgent` context to generate desired user\n * agent.\n */\nexport const userAgentMiddleware = (options: UserAgentResolvedConfig) => <Output extends MetadataBearer>(\n  next: BuildHandler<any, any>,\n  context: HandlerExecutionContext\n): BuildHandler<any, any> => async (args: BuildHandlerArguments<any>): Promise<BuildHandlerOutput<Output>> => {\n  const { request } = args;\n  if (!HttpRequest.isInstance(request)) return next(args);\n  const { headers } = request;\n  const userAgent = context?.userAgent?.map(escapeUserAgent) || [];\n  const defaultUserAgent = (await options.defaultUserAgentProvider()).map(escapeUserAgent);\n  const customUserAgent = options?.customUserAgent?.map(escapeUserAgent) || [];\n  // Set value to AWS-specific user agent header\n  headers[X_AMZ_USER_AGENT] = [...defaultUserAgent, ...userAgent, ...customUserAgent].join(SPACE);\n  // Get value to be sent with non-AWS-specific user agent header.\n  const normalUAValue = [\n    ...defaultUserAgent.filter((section) => section.startsWith(\"aws-sdk-\")),\n    ...customUserAgent,\n  ].join(SPACE);\n  if (options.runtime !== \"browser\" && normalUAValue) {\n    headers[USER_AGENT] = headers[USER_AGENT] ? `${headers[USER_AGENT]} ${normalUAValue}` : normalUAValue;\n  }\n\n  return next({\n    ...args,\n    request,\n  });\n};\n\n/**\n * Escape the each pair according to https://tools.ietf.org/html/rfc5234 and join the pair with pattern `name/version`.\n * User agent name may include prefix like `md/`, `api/`, `os/` etc., we should not escape the `/` after the prefix.\n * @private\n */\nconst escapeUserAgent = ([name, version]: UserAgentPair): string => {\n  const prefixSeparatorIndex = name.indexOf(\"/\");\n  const prefix = name.substring(0, prefixSeparatorIndex); // If no prefix, prefix is just \"\"\n  let uaName = name.substring(prefixSeparatorIndex + 1);\n  if (prefix === \"api\") {\n    uaName = uaName.toLowerCase();\n  }\n  return [prefix, uaName, version]\n    .filter((item) => item && item.length > 0)\n    .map((item) => item?.replace(UA_ESCAPE_REGEX, \"_\"))\n    .join(\"/\");\n};\n\nexport const getUserAgentMiddlewareOptions: BuildHandlerOptions & AbsoluteLocation = {\n  name: \"getUserAgentMiddleware\",\n  step: \"build\",\n  priority: \"low\",\n  tags: [\"SET_USER_AGENT\", \"USER_AGENT\"],\n  override: true,\n};\n\nexport const getUserAgentPlugin = (config: UserAgentResolvedConfig): Pluggable<any, any> => ({\n  applyToStack: (clientStack) => {\n    clientStack.add(userAgentMiddleware(config), getUserAgentMiddlewareOptions);\n  },\n});\n", "import {\n  AbsoluteLocation,\n  DeserializeHandler,\n  Handler,\n  HandlerExecutionContext,\n  HandlerOptions,\n  MiddlewareStack,\n  MiddlewareType,\n  Pluggable,\n  Priority,\n  RelativeLocation,\n  Step,\n} from \"@aws-sdk/types\";\n\nimport { AbsoluteMiddlewareEntry, MiddlewareEntry, Normalized, RelativeMiddlewareEntry } from \"./types\";\n\nexport const constructStack = <Input extends object, Output extends object>(): MiddlewareStack<Input, Output> => {\n  let absoluteEntries: AbsoluteMiddlewareEntry<Input, Output>[] = [];\n  let relativeEntries: RelativeMiddlewareEntry<Input, Output>[] = [];\n  const entriesNameSet: Set<string> = new Set();\n\n  const sort = <T extends AbsoluteMiddlewareEntry<Input, Output>>(entries: T[]): T[] =>\n    entries.sort(\n      (a, b) =>\n        stepWeights[b.step] - stepWeights[a.step] ||\n        priorityWeights[b.priority || \"normal\"] - priorityWeights[a.priority || \"normal\"]\n    );\n\n  const removeByName = (toRemove: string): boolean => {\n    let isRemoved = false;\n    const filterCb = (entry: MiddlewareEntry<Input, Output>): boolean => {\n      if (entry.name && entry.name === toRemove) {\n        isRemoved = true;\n        entriesNameSet.delete(toRemove);\n        return false;\n      }\n      return true;\n    };\n    absoluteEntries = absoluteEntries.filter(filterCb);\n    relativeEntries = relativeEntries.filter(filterCb);\n    return isRemoved;\n  };\n\n  const removeByReference = (toRemove: MiddlewareType<Input, Output>): boolean => {\n    let isRemoved = false;\n    const filterCb = (entry: MiddlewareEntry<Input, Output>): boolean => {\n      if (entry.middleware === toRemove) {\n        isRemoved = true;\n        if (entry.name) entriesNameSet.delete(entry.name);\n        return false;\n      }\n      return true;\n    };\n    absoluteEntries = absoluteEntries.filter(filterCb);\n    relativeEntries = relativeEntries.filter(filterCb);\n    return isRemoved;\n  };\n\n  const cloneTo = <InputType extends Input, OutputType extends Output>(\n    toStack: MiddlewareStack<InputType, OutputType>\n  ): MiddlewareStack<InputType, OutputType> => {\n    absoluteEntries.forEach((entry) => {\n      //@ts-ignore\n      toStack.add(entry.middleware, { ...entry });\n    });\n    relativeEntries.forEach((entry) => {\n      //@ts-ignore\n      toStack.addRelativeTo(entry.middleware, { ...entry });\n    });\n    return toStack;\n  };\n\n  const expandRelativeMiddlewareList = (\n    from: Normalized<MiddlewareEntry<Input, Output>, Input, Output>\n  ): MiddlewareEntry<Input, Output>[] => {\n    const expandedMiddlewareList: MiddlewareEntry<Input, Output>[] = [];\n    from.before.forEach((entry) => {\n      if (entry.before.length === 0 && entry.after.length === 0) {\n        expandedMiddlewareList.push(entry);\n      } else {\n        expandedMiddlewareList.push(...expandRelativeMiddlewareList(entry));\n      }\n    });\n    expandedMiddlewareList.push(from);\n    from.after.reverse().forEach((entry) => {\n      if (entry.before.length === 0 && entry.after.length === 0) {\n        expandedMiddlewareList.push(entry);\n      } else {\n        expandedMiddlewareList.push(...expandRelativeMiddlewareList(entry));\n      }\n    });\n    return expandedMiddlewareList;\n  };\n\n  /**\n   * Get a final list of middleware in the order of being executed in the resolved handler.\n   */\n  const getMiddlewareList = (): Array<MiddlewareType<Input, Output>> => {\n    const normalizedAbsoluteEntries: Normalized<AbsoluteMiddlewareEntry<Input, Output>, Input, Output>[] = [];\n    const normalizedRelativeEntries: Normalized<RelativeMiddlewareEntry<Input, Output>, Input, Output>[] = [];\n    const normalizedEntriesNameMap: {\n      [middlewareName: string]: Normalized<MiddlewareEntry<Input, Output>, Input, Output>;\n    } = {};\n\n    absoluteEntries.forEach((entry) => {\n      const normalizedEntry = {\n        ...entry,\n        before: [],\n        after: [],\n      };\n      if (normalizedEntry.name) normalizedEntriesNameMap[normalizedEntry.name] = normalizedEntry;\n      normalizedAbsoluteEntries.push(normalizedEntry);\n    });\n\n    relativeEntries.forEach((entry) => {\n      const normalizedEntry = {\n        ...entry,\n        before: [],\n        after: [],\n      };\n      if (normalizedEntry.name) normalizedEntriesNameMap[normalizedEntry.name] = normalizedEntry;\n      normalizedRelativeEntries.push(normalizedEntry);\n    });\n\n    normalizedRelativeEntries.forEach((entry) => {\n      if (entry.toMiddleware) {\n        const toMiddleware = normalizedEntriesNameMap[entry.toMiddleware];\n        if (toMiddleware === undefined) {\n          throw new Error(\n            `${entry.toMiddleware} is not found when adding ${entry.name || \"anonymous\"} middleware ${entry.relation} ${\n              entry.toMiddleware\n            }`\n          );\n        }\n        if (entry.relation === \"after\") {\n          toMiddleware.after.push(entry);\n        }\n        if (entry.relation === \"before\") {\n          toMiddleware.before.push(entry);\n        }\n      }\n    });\n\n    const mainChain = sort(normalizedAbsoluteEntries)\n      .map(expandRelativeMiddlewareList)\n      .reduce((wholeList, expendedMiddlewareList) => {\n        // TODO: Replace it with Array.flat();\n        wholeList.push(...expendedMiddlewareList);\n        return wholeList;\n      }, [] as MiddlewareEntry<Input, Output>[]);\n    return mainChain.map((entry) => entry.middleware);\n  };\n\n  const stack = {\n    add: (middleware: MiddlewareType<Input, Output>, options: HandlerOptions & AbsoluteLocation = {}) => {\n      const { name, override } = options;\n      const entry: AbsoluteMiddlewareEntry<Input, Output> = {\n        step: \"initialize\",\n        priority: \"normal\",\n        middleware,\n        ...options,\n      };\n      if (name) {\n        if (entriesNameSet.has(name)) {\n          if (!override) throw new Error(`Duplicate middleware name '${name}'`);\n          const toOverrideIndex = absoluteEntries.findIndex((entry) => entry.name === name);\n          const toOverride = absoluteEntries[toOverrideIndex];\n          if (toOverride.step !== entry.step || toOverride.priority !== entry.priority) {\n            throw new Error(\n              `\"${name}\" middleware with ${toOverride.priority} priority in ${toOverride.step} step cannot be ` +\n                `overridden by same-name middleware with ${entry.priority} priority in ${entry.step} step.`\n            );\n          }\n          absoluteEntries.splice(toOverrideIndex, 1);\n        }\n        entriesNameSet.add(name);\n      }\n      absoluteEntries.push(entry);\n    },\n\n    addRelativeTo: (middleware: MiddlewareType<Input, Output>, options: HandlerOptions & RelativeLocation) => {\n      const { name, override } = options;\n      const entry: RelativeMiddlewareEntry<Input, Output> = {\n        middleware,\n        ...options,\n      };\n      if (name) {\n        if (entriesNameSet.has(name)) {\n          if (!override) throw new Error(`Duplicate middleware name '${name}'`);\n          const toOverrideIndex = relativeEntries.findIndex((entry) => entry.name === name);\n          const toOverride = relativeEntries[toOverrideIndex];\n          if (toOverride.toMiddleware !== entry.toMiddleware || toOverride.relation !== entry.relation) {\n            throw new Error(\n              `\"${name}\" middleware ${toOverride.relation} \"${toOverride.toMiddleware}\" middleware cannot be overridden ` +\n                `by same-name middleware ${entry.relation} \"${entry.toMiddleware}\" middleware.`\n            );\n          }\n          relativeEntries.splice(toOverrideIndex, 1);\n        }\n        entriesNameSet.add(name);\n      }\n      relativeEntries.push(entry);\n    },\n\n    clone: () => cloneTo(constructStack<Input, Output>()),\n\n    use: (plugin: Pluggable<Input, Output>) => {\n      plugin.applyToStack(stack);\n    },\n\n    remove: (toRemove: MiddlewareType<Input, Output> | string): boolean => {\n      if (typeof toRemove === \"string\") return removeByName(toRemove);\n      else return removeByReference(toRemove);\n    },\n\n    removeByTag: (toRemove: string): boolean => {\n      let isRemoved = false;\n      const filterCb = (entry: MiddlewareEntry<Input, Output>): boolean => {\n        const { tags, name } = entry;\n        if (tags && tags.includes(toRemove)) {\n          if (name) entriesNameSet.delete(name);\n          isRemoved = true;\n          return false;\n        }\n        return true;\n      };\n      absoluteEntries = absoluteEntries.filter(filterCb);\n      relativeEntries = relativeEntries.filter(filterCb);\n      return isRemoved;\n    },\n\n    concat: <InputType extends Input, OutputType extends Output>(\n      from: MiddlewareStack<InputType, OutputType>\n    ): MiddlewareStack<InputType, OutputType> => {\n      const cloned = cloneTo(constructStack<InputType, OutputType>());\n      cloned.use(from);\n      return cloned;\n    },\n\n    applyToStack: cloneTo,\n\n    resolve: <InputType extends Input, OutputType extends Output>(\n      handler: DeserializeHandler<InputType, OutputType>,\n      context: HandlerExecutionContext\n    ): Handler<InputType, OutputType> => {\n      for (const middleware of getMiddlewareList().reverse()) {\n        handler = middleware(handler as Handler<Input, OutputType>, context) as any;\n      }\n      return handler as Handler<InputType, OutputType>;\n    },\n  };\n  return stack;\n};\n\nconst stepWeights: { [key in Step]: number } = {\n  initialize: 5,\n  serialize: 4,\n  build: 3,\n  finalizeRequest: 2,\n  deserialize: 1,\n};\n\nconst priorityWeights: { [key in Priority]: number } = {\n  high: 3,\n  normal: 2,\n  low: 1,\n};\n", "import { constructStack } from \"@aws-sdk/middleware-stack\";\nimport { Client as IClient, Command, MetadataBearer, RequestHandler } from \"@aws-sdk/types\";\n\nexport interface SmithyConfiguration<HandlerOptions> {\n  requestHandler: RequestHandler<any, any, HandlerOptions>;\n  /**\n   * The API version set internally by the SDK, and is\n   * not planned to be used by customer code.\n   * @internal\n   */\n  readonly apiVersion: string;\n}\n\nexport type SmithyResolvedConfiguration<HandlerOptions> = SmithyConfiguration<HandlerOptions>;\n\nexport class Client<\n  HandlerOptions,\n  ClientInput extends object,\n  ClientOutput extends MetadataBearer,\n  ResolvedClientConfiguration extends SmithyResolvedConfiguration<HandlerOptions>\n> implements IClient<ClientInput, ClientOutput, ResolvedClientConfiguration> {\n  public middlewareStack = constructStack<ClientInput, ClientOutput>();\n  readonly config: ResolvedClientConfiguration;\n  constructor(config: ResolvedClientConfiguration) {\n    this.config = config;\n  }\n  send<InputType extends ClientInput, OutputType extends ClientOutput>(\n    command: Command<ClientInput, InputType, ClientOutput, OutputType, SmithyResolvedConfiguration<HandlerOptions>>,\n    options?: HandlerOptions\n  ): Promise<OutputType>;\n  send<InputType extends ClientInput, OutputType extends ClientOutput>(\n    command: Command<ClientInput, InputType, ClientOutput, OutputType, SmithyResolvedConfiguration<HandlerOptions>>,\n    cb: (err: any, data?: OutputType) => void\n  ): void;\n  send<InputType extends ClientInput, OutputType extends ClientOutput>(\n    command: Command<ClientInput, InputType, ClientOutput, OutputType, SmithyResolvedConfiguration<HandlerOptions>>,\n    options: HandlerOptions,\n    cb: (err: any, data?: OutputType) => void\n  ): void;\n  send<InputType extends ClientInput, OutputType extends ClientOutput>(\n    command: Command<ClientInput, InputType, ClientOutput, OutputType, SmithyResolvedConfiguration<HandlerOptions>>,\n    optionsOrCb?: HandlerOptions | ((err: any, data?: OutputType) => void),\n    cb?: (err: any, data?: OutputType) => void\n  ): Promise<OutputType> | void {\n    const options = typeof optionsOrCb !== \"function\" ? optionsOrCb : undefined;\n    const callback = typeof optionsOrCb === \"function\" ? (optionsOrCb as (err: any, data?: OutputType) => void) : cb;\n    const handler = command.resolveMiddleware(this.middlewareStack as any, this.config, options);\n    if (callback) {\n      handler(command)\n        .then(\n          (result) => callback(null, result.output),\n          (err: any) => callback(err)\n        )\n        .catch(\n          // prevent any errors thrown in the callback from triggering an\n          // unhandled promise rejection\n          () => {}\n        );\n    } else {\n      return handler(command).then((result) => result.output);\n    }\n  }\n\n  destroy() {\n    if (this.config.requestHandler.destroy) this.config.requestHandler.destroy();\n  }\n}\n", "import { constructStack } from \"@aws-sdk/middleware-stack\";\nimport { Command as ICommand, Handler, MetadataBearer, MiddlewareStack as IMiddlewareStack } from \"@aws-sdk/types\";\n\nexport abstract class Command<\n  Input extends ClientInput,\n  Output extends ClientOutput,\n  ResolvedClientConfiguration,\n  ClientInput extends object = any,\n  ClientOutput extends MetadataBearer = any\n> implements ICommand<ClientInput, Input, ClientOutput, Output, ResolvedClientConfiguration> {\n  abstract input: Input;\n  readonly middlewareStack: IMiddlewareStack<Input, Output> = constructStack<Input, Output>();\n  abstract resolveMiddleware(\n    stack: IMiddlewareStack<ClientInput, ClientOutput>,\n    configuration: ResolvedClientConfiguration,\n    options: any\n  ): Handler<Input, Output>;\n}\n", "/**\n * Function that wraps encodeURIComponent to encode additional characters\n * to fully adhere to RFC 3986.\n */\nexport function extendedEncodeURIComponent(str: string): string {\n  return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {\n    return \"%\" + c.charCodeAt(0).toString(16);\n  });\n}\n", "/**\n * The XML parser will set one K:V for a member that could\n * return multiple entries but only has one.\n */\nexport const getArrayIfSingleItem = <T>(mayBeArray: T): T | T[] =>\n  Array.isArray(mayBeArray) ? mayBeArray : [mayBeArray];\n", "/**\n * Recursively parses object and populates value is node from\n * \"#text\" key if it's available\n */\nexport const getValueFromTextNode = (obj: any) => {\n  const textNodeName = \"#text\";\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key) && obj[key][textNodeName] !== undefined) {\n      obj[key] = obj[key][textNodeName];\n    } else if (typeof obj[key] === \"object\" && obj[key] !== null) {\n      obj[key] = getValueFromTextNode(obj[key]);\n    }\n  }\n  return obj;\n};\n", "/**\n * Lazy String holder for JSON typed contents.\n */\n\ninterface StringWrapper {\n  new (arg: any): String;\n}\n\n/**\n * Because of https://github.com/microsoft/tslib/issues/95,\n * TS 'extends' shim doesn't support extending native types like String.\n * So here we create StringWrapper that duplicate everything from String\n * class including its prototype chain. So we can extend from here.\n */\n// @ts-ignore StringWrapper implementation is not a simple constructor\nexport const StringWrapper: StringWrapper = function () {\n  //@ts-ignore 'this' cannot be assigned to any, but Object.getPrototypeOf accepts any\n  const Class = Object.getPrototypeOf(this).constructor;\n  const Constructor = Function.bind.apply(String, [null as any, ...arguments]);\n  //@ts-ignore Call wrapped String constructor directly, don't bother typing it.\n  const instance = new Constructor();\n  Object.setPrototypeOf(instance, Class.prototype);\n  return instance as String;\n};\nStringWrapper.prototype = Object.create(String.prototype, {\n  constructor: {\n    value: StringWrapper,\n    enumerable: false,\n    writable: true,\n    configurable: true,\n  },\n});\nObject.setPrototypeOf(StringWrapper, String);\n\nexport class LazyJsonString extends StringWrapper {\n  deserializeJSON(): any {\n    return JSON.parse(super.toString());\n  }\n\n  toJSON(): string {\n    return super.toString();\n  }\n\n  static fromObject(object: any): LazyJsonString {\n    if (object instanceof LazyJsonString) {\n      return object;\n    } else if (object instanceof String || typeof object === \"string\") {\n      return new LazyJsonString(object);\n    }\n    return new LazyJsonString(JSON.stringify(object));\n  }\n}\n", "/**\n * Builds a proper UTC HttpDate timestamp from a Date object\n * since not all environments will have this as the expected\n * format.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toUTCString\n * > Prior to ECMAScript 2018, the format of the return value\n * > varied according to the platform. The most common return\n * > value was an RFC-1123 formatted date stamp, which is a\n * > slightly updated version of RFC-822 date stamps.\n */\n\n// Build indexes outside so we allocate them once.\nconst days: Array<String> = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n// prettier-ignore\nconst months: Array<String> = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\nexport function dateToUtcString(date: Date): string {\n  const year = date.getUTCFullYear();\n  const month = date.getUTCMonth();\n  const dayOfWeek = date.getUTCDay();\n  const dayOfMonthInt = date.getUTCDate();\n  const hoursInt = date.getUTCHours();\n  const minutesInt = date.getUTCMinutes();\n  const secondsInt = date.getUTCSeconds();\n\n  // Build 0 prefixed strings for contents that need to be\n  // two digits and where we get an integer back.\n  const dayOfMonthString = dayOfMonthInt < 10 ? `0${dayOfMonthInt}` : `${dayOfMonthInt}`;\n  const hoursString = hoursInt < 10 ? `0${hoursInt}` : `${hoursInt}`;\n  const minutesString = minutesInt < 10 ? `0${minutesInt}` : `${minutesInt}`;\n  const secondsString = secondsInt < 10 ? `0${secondsInt}` : `${secondsInt}`;\n\n  return `${days[dayOfWeek]}, ${dayOfMonthString} ${months[month]} ${year} ${hoursString}:${minutesString}:${secondsString} GMT`;\n}\n", "export const SENSITIVE_STRING = \"***SensitiveInformation***\";\n", "import { AssociateKmsKeyCommandInput, AssociateKmsKeyCommandOutput } from \"./commands/AssociateKmsKeyCommand\";\nimport { CancelExportTaskCommandInput, CancelExportTaskCommandOutput } from \"./commands/CancelExportTaskCommand\";\nimport { CreateExportTaskCommandInput, CreateExportTaskCommandOutput } from \"./commands/CreateExportTaskCommand\";\nimport { CreateLogGroupCommandInput, CreateLogGroupCommandOutput } from \"./commands/CreateLogGroupCommand\";\nimport { CreateLogStreamCommandInput, CreateLogStreamCommandOutput } from \"./commands/CreateLogStreamCommand\";\nimport { DeleteDestinationCommandInput, DeleteDestinationCommandOutput } from \"./commands/DeleteDestinationCommand\";\nimport { DeleteLogGroupCommandInput, DeleteLogGroupCommandOutput } from \"./commands/DeleteLogGroupCommand\";\nimport { DeleteLogStreamCommandInput, DeleteLogStreamCommandOutput } from \"./commands/DeleteLogStreamCommand\";\nimport { DeleteMetricFilterCommandInput, DeleteMetricFilterCommandOutput } from \"./commands/DeleteMetricFilterCommand\";\nimport {\n  DeleteQueryDefinitionCommandInput,\n  DeleteQueryDefinitionCommandOutput,\n} from \"./commands/DeleteQueryDefinitionCommand\";\nimport {\n  DeleteResourcePolicyCommandInput,\n  DeleteResourcePolicyCommandOutput,\n} from \"./commands/DeleteResourcePolicyCommand\";\nimport {\n  DeleteRetentionPolicyCommandInput,\n  DeleteRetentionPolicyCommandOutput,\n} from \"./commands/DeleteRetentionPolicyCommand\";\nimport {\n  DeleteSubscriptionFilterCommandInput,\n  DeleteSubscriptionFilterCommandOutput,\n} from \"./commands/DeleteSubscriptionFilterCommand\";\nimport {\n  DescribeDestinationsCommandInput,\n  DescribeDestinationsCommandOutput,\n} from \"./commands/DescribeDestinationsCommand\";\nimport {\n  DescribeExportTasksCommandInput,\n  DescribeExportTasksCommandOutput,\n} from \"./commands/DescribeExportTasksCommand\";\nimport { DescribeLogGroupsCommandInput, DescribeLogGroupsCommandOutput } from \"./commands/DescribeLogGroupsCommand\";\nimport { DescribeLogStreamsCommandInput, DescribeLogStreamsCommandOutput } from \"./commands/DescribeLogStreamsCommand\";\nimport {\n  DescribeMetricFiltersCommandInput,\n  DescribeMetricFiltersCommandOutput,\n} from \"./commands/DescribeMetricFiltersCommand\";\nimport { DescribeQueriesCommandInput, DescribeQueriesCommandOutput } from \"./commands/DescribeQueriesCommand\";\nimport {\n  DescribeQueryDefinitionsCommandInput,\n  DescribeQueryDefinitionsCommandOutput,\n} from \"./commands/DescribeQueryDefinitionsCommand\";\nimport {\n  DescribeResourcePoliciesCommandInput,\n  DescribeResourcePoliciesCommandOutput,\n} from \"./commands/DescribeResourcePoliciesCommand\";\nimport {\n  DescribeSubscriptionFiltersCommandInput,\n  DescribeSubscriptionFiltersCommandOutput,\n} from \"./commands/DescribeSubscriptionFiltersCommand\";\nimport { DisassociateKmsKeyCommandInput, DisassociateKmsKeyCommandOutput } from \"./commands/DisassociateKmsKeyCommand\";\nimport { FilterLogEventsCommandInput, FilterLogEventsCommandOutput } from \"./commands/FilterLogEventsCommand\";\nimport { GetLogEventsCommandInput, GetLogEventsCommandOutput } from \"./commands/GetLogEventsCommand\";\nimport { GetLogGroupFieldsCommandInput, GetLogGroupFieldsCommandOutput } from \"./commands/GetLogGroupFieldsCommand\";\nimport { GetLogRecordCommandInput, GetLogRecordCommandOutput } from \"./commands/GetLogRecordCommand\";\nimport { GetQueryResultsCommandInput, GetQueryResultsCommandOutput } from \"./commands/GetQueryResultsCommand\";\nimport { ListTagsLogGroupCommandInput, ListTagsLogGroupCommandOutput } from \"./commands/ListTagsLogGroupCommand\";\nimport { PutDestinationCommandInput, PutDestinationCommandOutput } from \"./commands/PutDestinationCommand\";\nimport {\n  PutDestinationPolicyCommandInput,\n  PutDestinationPolicyCommandOutput,\n} from \"./commands/PutDestinationPolicyCommand\";\nimport { PutLogEventsCommandInput, PutLogEventsCommandOutput } from \"./commands/PutLogEventsCommand\";\nimport { PutMetricFilterCommandInput, PutMetricFilterCommandOutput } from \"./commands/PutMetricFilterCommand\";\nimport { PutQueryDefinitionCommandInput, PutQueryDefinitionCommandOutput } from \"./commands/PutQueryDefinitionCommand\";\nimport { PutResourcePolicyCommandInput, PutResourcePolicyCommandOutput } from \"./commands/PutResourcePolicyCommand\";\nimport { PutRetentionPolicyCommandInput, PutRetentionPolicyCommandOutput } from \"./commands/PutRetentionPolicyCommand\";\nimport {\n  PutSubscriptionFilterCommandInput,\n  PutSubscriptionFilterCommandOutput,\n} from \"./commands/PutSubscriptionFilterCommand\";\nimport { StartQueryCommandInput, StartQueryCommandOutput } from \"./commands/StartQueryCommand\";\nimport { StopQueryCommandInput, StopQueryCommandOutput } from \"./commands/StopQueryCommand\";\nimport { TagLogGroupCommandInput, TagLogGroupCommandOutput } from \"./commands/TagLogGroupCommand\";\nimport { TestMetricFilterCommandInput, TestMetricFilterCommandOutput } from \"./commands/TestMetricFilterCommand\";\nimport { UntagLogGroupCommandInput, UntagLogGroupCommandOutput } from \"./commands/UntagLogGroupCommand\";\nimport { ClientDefaultValues as __ClientDefaultValues } from \"./runtimeConfig\";\nimport {\n  EndpointsInputConfig,\n  EndpointsResolvedConfig,\n  RegionInputConfig,\n  RegionResolvedConfig,\n  resolveEndpointsConfig,\n  resolveRegionConfig,\n} from \"@aws-sdk/config-resolver\";\nimport { getContentLengthPlugin } from \"@aws-sdk/middleware-content-length\";\nimport {\n  HostHeaderInputConfig,\n  HostHeaderResolvedConfig,\n  getHostHeaderPlugin,\n  resolveHostHeaderConfig,\n} from \"@aws-sdk/middleware-host-header\";\nimport { getLoggerPlugin } from \"@aws-sdk/middleware-logger\";\nimport { RetryInputConfig, RetryResolvedConfig, getRetryPlugin, resolveRetryConfig } from \"@aws-sdk/middleware-retry\";\nimport {\n  AwsAuthInputConfig,\n  AwsAuthResolvedConfig,\n  getAwsAuthPlugin,\n  resolveAwsAuthConfig,\n} from \"@aws-sdk/middleware-signing\";\nimport {\n  UserAgentInputConfig,\n  UserAgentResolvedConfig,\n  getUserAgentPlugin,\n  resolveUserAgentConfig,\n} from \"@aws-sdk/middleware-user-agent\";\nimport { HttpHandler as __HttpHandler } from \"@aws-sdk/protocol-http\";\nimport {\n  Client as __Client,\n  SmithyConfiguration as __SmithyConfiguration,\n  SmithyResolvedConfiguration as __SmithyResolvedConfiguration,\n} from \"@aws-sdk/smithy-client\";\nimport {\n  Provider,\n  RegionInfoProvider,\n  Credentials as __Credentials,\n  Decoder as __Decoder,\n  Encoder as __Encoder,\n  HashConstructor as __HashConstructor,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  Logger as __Logger,\n  Provider as __Provider,\n  StreamCollector as __StreamCollector,\n  UrlParser as __UrlParser,\n  UserAgent as __UserAgent,\n} from \"@aws-sdk/types\";\n\nexport type ServiceInputTypes =\n  | AssociateKmsKeyCommandInput\n  | CancelExportTaskCommandInput\n  | CreateExportTaskCommandInput\n  | CreateLogGroupCommandInput\n  | CreateLogStreamCommandInput\n  | DeleteDestinationCommandInput\n  | DeleteLogGroupCommandInput\n  | DeleteLogStreamCommandInput\n  | DeleteMetricFilterCommandInput\n  | DeleteQueryDefinitionCommandInput\n  | DeleteResourcePolicyCommandInput\n  | DeleteRetentionPolicyCommandInput\n  | DeleteSubscriptionFilterCommandInput\n  | DescribeDestinationsCommandInput\n  | DescribeExportTasksCommandInput\n  | DescribeLogGroupsCommandInput\n  | DescribeLogStreamsCommandInput\n  | DescribeMetricFiltersCommandInput\n  | DescribeQueriesCommandInput\n  | DescribeQueryDefinitionsCommandInput\n  | DescribeResourcePoliciesCommandInput\n  | DescribeSubscriptionFiltersCommandInput\n  | DisassociateKmsKeyCommandInput\n  | FilterLogEventsCommandInput\n  | GetLogEventsCommandInput\n  | GetLogGroupFieldsCommandInput\n  | GetLogRecordCommandInput\n  | GetQueryResultsCommandInput\n  | ListTagsLogGroupCommandInput\n  | PutDestinationCommandInput\n  | PutDestinationPolicyCommandInput\n  | PutLogEventsCommandInput\n  | PutMetricFilterCommandInput\n  | PutQueryDefinitionCommandInput\n  | PutResourcePolicyCommandInput\n  | PutRetentionPolicyCommandInput\n  | PutSubscriptionFilterCommandInput\n  | StartQueryCommandInput\n  | StopQueryCommandInput\n  | TagLogGroupCommandInput\n  | TestMetricFilterCommandInput\n  | UntagLogGroupCommandInput;\n\nexport type ServiceOutputTypes =\n  | AssociateKmsKeyCommandOutput\n  | CancelExportTaskCommandOutput\n  | CreateExportTaskCommandOutput\n  | CreateLogGroupCommandOutput\n  | CreateLogStreamCommandOutput\n  | DeleteDestinationCommandOutput\n  | DeleteLogGroupCommandOutput\n  | DeleteLogStreamCommandOutput\n  | DeleteMetricFilterCommandOutput\n  | DeleteQueryDefinitionCommandOutput\n  | DeleteResourcePolicyCommandOutput\n  | DeleteRetentionPolicyCommandOutput\n  | DeleteSubscriptionFilterCommandOutput\n  | DescribeDestinationsCommandOutput\n  | DescribeExportTasksCommandOutput\n  | DescribeLogGroupsCommandOutput\n  | DescribeLogStreamsCommandOutput\n  | DescribeMetricFiltersCommandOutput\n  | DescribeQueriesCommandOutput\n  | DescribeQueryDefinitionsCommandOutput\n  | DescribeResourcePoliciesCommandOutput\n  | DescribeSubscriptionFiltersCommandOutput\n  | DisassociateKmsKeyCommandOutput\n  | FilterLogEventsCommandOutput\n  | GetLogEventsCommandOutput\n  | GetLogGroupFieldsCommandOutput\n  | GetLogRecordCommandOutput\n  | GetQueryResultsCommandOutput\n  | ListTagsLogGroupCommandOutput\n  | PutDestinationCommandOutput\n  | PutDestinationPolicyCommandOutput\n  | PutLogEventsCommandOutput\n  | PutMetricFilterCommandOutput\n  | PutQueryDefinitionCommandOutput\n  | PutResourcePolicyCommandOutput\n  | PutRetentionPolicyCommandOutput\n  | PutSubscriptionFilterCommandOutput\n  | StartQueryCommandOutput\n  | StopQueryCommandOutput\n  | TagLogGroupCommandOutput\n  | TestMetricFilterCommandOutput\n  | UntagLogGroupCommandOutput;\n\nexport interface ClientDefaults extends Partial<__SmithyResolvedConfiguration<__HttpHandlerOptions>> {\n  /**\n   * The HTTP handler to use. Fetch in browser and Https in Nodejs.\n   */\n  requestHandler?: __HttpHandler;\n\n  /**\n   * A constructor for a class implementing the @aws-sdk/types.Hash interface\n   * that computes the SHA-256 HMAC or checksum of a string or binary buffer.\n   */\n  sha256?: __HashConstructor;\n\n  /**\n   * The function that will be used to convert strings into HTTP endpoints.\n   */\n  urlParser?: __UrlParser;\n\n  /**\n   * A function that can calculate the length of a request body.\n   */\n  bodyLengthChecker?: (body: any) => number | undefined;\n\n  /**\n   * A function that converts a stream into an array of bytes.\n   */\n  streamCollector?: __StreamCollector;\n\n  /**\n   * The function that will be used to convert a base64-encoded string to a byte array\n   */\n  base64Decoder?: __Decoder;\n\n  /**\n   * The function that will be used to convert binary data to a base64-encoded string\n   */\n  base64Encoder?: __Encoder;\n\n  /**\n   * The function that will be used to convert a UTF8-encoded string to a byte array\n   */\n  utf8Decoder?: __Decoder;\n\n  /**\n   * The function that will be used to convert binary data to a UTF-8 encoded string\n   */\n  utf8Encoder?: __Encoder;\n\n  /**\n   * The runtime environment\n   */\n  runtime?: string;\n\n  /**\n   * Disable dyanamically changing the endpoint of the client based on the hostPrefix\n   * trait of an operation.\n   */\n  disableHostPrefix?: boolean;\n\n  /**\n   * Unique service identifier.\n   * @internal\n   */\n  serviceId?: string;\n\n  /**\n   * Default credentials provider; Not available in browser runtime\n   */\n  credentialDefaultProvider?: (input: any) => __Provider<__Credentials>;\n\n  /**\n   * The AWS region to which this client will send requests\n   */\n  region?: string | __Provider<string>;\n\n  /**\n   * Value for how many times a request will be made at most in case of retry.\n   */\n  maxAttempts?: number | __Provider<number>;\n\n  /**\n   * Optional logger for logging debug/info/warn/error.\n   */\n  logger?: __Logger;\n\n  /**\n   * Fetch related hostname, signing name or signing region with given region.\n   */\n  regionInfoProvider?: RegionInfoProvider;\n\n  /**\n   * The provider populating default tracking information to be sent with `user-agent`, `x-amz-user-agent` header\n   * @internal\n   */\n  defaultUserAgentProvider?: Provider<__UserAgent>;\n}\n\nexport type CloudWatchLogsClientConfig = Partial<__SmithyConfiguration<__HttpHandlerOptions>> &\n  ClientDefaults &\n  RegionInputConfig &\n  EndpointsInputConfig &\n  AwsAuthInputConfig &\n  RetryInputConfig &\n  HostHeaderInputConfig &\n  UserAgentInputConfig;\n\nexport type CloudWatchLogsClientResolvedConfig = __SmithyResolvedConfiguration<__HttpHandlerOptions> &\n  Required<ClientDefaults> &\n  RegionResolvedConfig &\n  EndpointsResolvedConfig &\n  AwsAuthResolvedConfig &\n  RetryResolvedConfig &\n  HostHeaderResolvedConfig &\n  UserAgentResolvedConfig;\n\n/**\n * <p>You can use Amazon CloudWatch Logs to monitor, store, and access your log files from\n *       EC2 instances, AWS CloudTrail, or other sources. You can then retrieve the associated\n *       log data from CloudWatch Logs using the CloudWatch console, CloudWatch Logs commands in the\n *       AWS CLI, CloudWatch Logs API, or CloudWatch Logs SDK.</p>\n *          <p>You can use CloudWatch Logs to:</p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <b>Monitor logs from EC2 instances in real-time</b>: You\n *           can use CloudWatch Logs to monitor applications and systems using log data. For example,\n *           CloudWatch Logs can track the number of errors that occur in your application logs and\n *           send you a notification whenever the rate of errors exceeds a threshold that you specify.\n *           CloudWatch Logs uses your log data for monitoring so no code changes are required. For\n *           example, you can monitor application logs for specific literal terms (such as\n *           \"NullReferenceException\") or count the number of occurrences of a literal term at a\n *           particular position in log data (such as \"404\" status codes in an Apache access log). When\n *           the term you are searching for is found, CloudWatch Logs reports the data to a CloudWatch\n *           metric that you specify.</p>\n *             </li>\n *             <li>\n *                <p>\n *                   <b>Monitor AWS CloudTrail logged events</b>: You can\n *           create alarms in CloudWatch and receive notifications of particular API activity as\n *           captured by CloudTrail. You can use the notification to perform troubleshooting.</p>\n *             </li>\n *             <li>\n *                <p>\n *                   <b>Archive log data</b>: You can use CloudWatch Logs to\n *           store your log data in highly durable storage. You can change the log retention setting so\n *           that any log events older than this setting are automatically deleted. The CloudWatch Logs\n *           agent makes it easy to quickly send both rotated and non-rotated log data off of a host\n *           and into the log service. You can then access the raw log data when you need it.</p>\n *             </li>\n *          </ul>\n */\nexport class CloudWatchLogsClient extends __Client<\n  __HttpHandlerOptions,\n  ServiceInputTypes,\n  ServiceOutputTypes,\n  CloudWatchLogsClientResolvedConfig\n> {\n  readonly config: CloudWatchLogsClientResolvedConfig;\n\n  constructor(configuration: CloudWatchLogsClientConfig) {\n    let _config_0 = {\n      ...__ClientDefaultValues,\n      ...configuration,\n    };\n    let _config_1 = resolveRegionConfig(_config_0);\n    let _config_2 = resolveEndpointsConfig(_config_1);\n    let _config_3 = resolveAwsAuthConfig(_config_2);\n    let _config_4 = resolveRetryConfig(_config_3);\n    let _config_5 = resolveHostHeaderConfig(_config_4);\n    let _config_6 = resolveUserAgentConfig(_config_5);\n    super(_config_6);\n    this.config = _config_6;\n    this.middlewareStack.use(getAwsAuthPlugin(this.config));\n    this.middlewareStack.use(getRetryPlugin(this.config));\n    this.middlewareStack.use(getContentLengthPlugin(this.config));\n    this.middlewareStack.use(getHostHeaderPlugin(this.config));\n    this.middlewareStack.use(getLoggerPlugin(this.config));\n    this.middlewareStack.use(getUserAgentPlugin(this.config));\n  }\n\n  destroy(): void {\n    super.destroy();\n  }\n}\n", "import { SmithyException as __SmithyException } from \"@aws-sdk/smithy-client\";\nimport { MetadataBearer as $MetadataBearer } from \"@aws-sdk/types\";\n\nexport interface AssociateKmsKeyRequest {\n  /**\n   * <p>The name of the log group.</p>\n   */\n  logGroupName: string | undefined;\n\n  /**\n   * <p>The Amazon Resource Name (ARN) of the CMK to use when encrypting log data. This must be a symmetric CMK.\n   *       For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-kms\">Amazon Resource Names - AWS Key Management Service (AWS KMS)</a> and <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html\">Using Symmetric and Asymmetric Keys</a>.</p>\n   */\n  kmsKeyId: string | undefined;\n}\n\nexport namespace AssociateKmsKeyRequest {\n  export const filterSensitiveLog = (obj: AssociateKmsKeyRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>A parameter is specified incorrectly.</p>\n */\nexport interface InvalidParameterException extends __SmithyException, $MetadataBearer {\n  name: \"InvalidParameterException\";\n  $fault: \"client\";\n  message?: string;\n}\n\nexport namespace InvalidParameterException {\n  export const filterSensitiveLog = (obj: InvalidParameterException): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Multiple requests to update the same resource were in conflict.</p>\n */\nexport interface OperationAbortedException extends __SmithyException, $MetadataBearer {\n  name: \"OperationAbortedException\";\n  $fault: \"client\";\n  message?: string;\n}\n\nexport namespace OperationAbortedException {\n  export const filterSensitiveLog = (obj: OperationAbortedException): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>The specified resource does not exist.</p>\n */\nexport interface ResourceNotFoundException extends __SmithyException, $MetadataBearer {\n  name: \"ResourceNotFoundException\";\n  $fault: \"client\";\n  message?: string;\n}\n\nexport namespace ResourceNotFoundException {\n  export const filterSensitiveLog = (obj: ResourceNotFoundException): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>The service cannot complete the request.</p>\n */\nexport interface ServiceUnavailableException extends __SmithyException, $MetadataBearer {\n  name: \"ServiceUnavailableException\";\n  $fault: \"server\";\n  message?: string;\n}\n\nexport namespace ServiceUnavailableException {\n  export const filterSensitiveLog = (obj: ServiceUnavailableException): any => ({\n    ...obj,\n  });\n}\n\nexport interface CancelExportTaskRequest {\n  /**\n   * <p>The ID of the export task.</p>\n   */\n  taskId: string | undefined;\n}\n\nexport namespace CancelExportTaskRequest {\n  export const filterSensitiveLog = (obj: CancelExportTaskRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>The operation is not valid on the specified resource.</p>\n */\nexport interface InvalidOperationException extends __SmithyException, $MetadataBearer {\n  name: \"InvalidOperationException\";\n  $fault: \"client\";\n  message?: string;\n}\n\nexport namespace InvalidOperationException {\n  export const filterSensitiveLog = (obj: InvalidOperationException): any => ({\n    ...obj,\n  });\n}\n\nexport interface CreateExportTaskRequest {\n  /**\n   * <p>The name of the export task.</p>\n   */\n  taskName?: string;\n\n  /**\n   * <p>The name of the log group.</p>\n   */\n  logGroupName: string | undefined;\n\n  /**\n   * <p>Export only log streams that match the provided prefix. If you don't\n   *       specify a value, no prefix filter is applied.</p>\n   */\n  logStreamNamePrefix?: string;\n\n  /**\n   * <p>The start time of the range for the request, expressed as the number of milliseconds\n   *       after Jan 1, 1970 00:00:00 UTC. Events with a timestamp earlier than this time are not\n   *       exported.</p>\n   */\n  from: number | undefined;\n\n  /**\n   * <p>The end time of the range for the request, expressed as the number of milliseconds\n   *       after Jan 1, 1970 00:00:00 UTC. Events with a timestamp later than this time are not\n   *       exported.</p>\n   */\n  to: number | undefined;\n\n  /**\n   * <p>The name of S3 bucket for the exported log data. The bucket must be in the same AWS region.</p>\n   */\n  destination: string | undefined;\n\n  /**\n   * <p>The prefix used as the start of the key for every object exported. If you don't\n   *       specify a value, the default is <code>exportedlogs</code>.</p>\n   */\n  destinationPrefix?: string;\n}\n\nexport namespace CreateExportTaskRequest {\n  export const filterSensitiveLog = (obj: CreateExportTaskRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface CreateExportTaskResponse {\n  /**\n   * <p>The ID of the export task.</p>\n   */\n  taskId?: string;\n}\n\nexport namespace CreateExportTaskResponse {\n  export const filterSensitiveLog = (obj: CreateExportTaskResponse): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>You have reached the maximum number of resources that can be created.</p>\n */\nexport interface LimitExceededException extends __SmithyException, $MetadataBearer {\n  name: \"LimitExceededException\";\n  $fault: \"client\";\n  message?: string;\n}\n\nexport namespace LimitExceededException {\n  export const filterSensitiveLog = (obj: LimitExceededException): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>The specified resource already exists.</p>\n */\nexport interface ResourceAlreadyExistsException extends __SmithyException, $MetadataBearer {\n  name: \"ResourceAlreadyExistsException\";\n  $fault: \"client\";\n  message?: string;\n}\n\nexport namespace ResourceAlreadyExistsException {\n  export const filterSensitiveLog = (obj: ResourceAlreadyExistsException): any => ({\n    ...obj,\n  });\n}\n\nexport interface CreateLogGroupRequest {\n  /**\n   * <p>The name of the log group.</p>\n   */\n  logGroupName: string | undefined;\n\n  /**\n   * <p>The Amazon Resource Name (ARN) of the CMK to use when encrypting log data.\n   *       For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-kms\">Amazon Resource Names - AWS Key Management Service (AWS KMS)</a>.</p>\n   */\n  kmsKeyId?: string;\n\n  /**\n   * <p>The key-value pairs to use for the tags.</p>\n   */\n  tags?: { [key: string]: string };\n}\n\nexport namespace CreateLogGroupRequest {\n  export const filterSensitiveLog = (obj: CreateLogGroupRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface CreateLogStreamRequest {\n  /**\n   * <p>The name of the log group.</p>\n   */\n  logGroupName: string | undefined;\n\n  /**\n   * <p>The name of the log stream.</p>\n   */\n  logStreamName: string | undefined;\n}\n\nexport namespace CreateLogStreamRequest {\n  export const filterSensitiveLog = (obj: CreateLogStreamRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>The event was already logged.</p>\n */\nexport interface DataAlreadyAcceptedException extends __SmithyException, $MetadataBearer {\n  name: \"DataAlreadyAcceptedException\";\n  $fault: \"client\";\n  expectedSequenceToken?: string;\n  message?: string;\n}\n\nexport namespace DataAlreadyAcceptedException {\n  export const filterSensitiveLog = (obj: DataAlreadyAcceptedException): any => ({\n    ...obj,\n  });\n}\n\nexport interface DeleteDestinationRequest {\n  /**\n   * <p>The name of the destination.</p>\n   */\n  destinationName: string | undefined;\n}\n\nexport namespace DeleteDestinationRequest {\n  export const filterSensitiveLog = (obj: DeleteDestinationRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface DeleteLogGroupRequest {\n  /**\n   * <p>The name of the log group.</p>\n   */\n  logGroupName: string | undefined;\n}\n\nexport namespace DeleteLogGroupRequest {\n  export const filterSensitiveLog = (obj: DeleteLogGroupRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface DeleteLogStreamRequest {\n  /**\n   * <p>The name of the log group.</p>\n   */\n  logGroupName: string | undefined;\n\n  /**\n   * <p>The name of the log stream.</p>\n   */\n  logStreamName: string | undefined;\n}\n\nexport namespace DeleteLogStreamRequest {\n  export const filterSensitiveLog = (obj: DeleteLogStreamRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface DeleteMetricFilterRequest {\n  /**\n   * <p>The name of the log group.</p>\n   */\n  logGroupName: string | undefined;\n\n  /**\n   * <p>The name of the metric filter.</p>\n   */\n  filterName: string | undefined;\n}\n\nexport namespace DeleteMetricFilterRequest {\n  export const filterSensitiveLog = (obj: DeleteMetricFilterRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface DeleteQueryDefinitionRequest {\n  /**\n   * <p>The ID of the query definition that you want to delete. You can use <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_DescribeQueryDefinitions.html\">DescribeQueryDefinitions</a> to retrieve the\n   *       IDs of your saved query definitions.</p>\n   */\n  queryDefinitionId: string | undefined;\n}\n\nexport namespace DeleteQueryDefinitionRequest {\n  export const filterSensitiveLog = (obj: DeleteQueryDefinitionRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface DeleteQueryDefinitionResponse {\n  /**\n   * <p>A value of TRUE indicates that the operation succeeded. FALSE indicates that the operation\n   *       failed.</p>\n   */\n  success?: boolean;\n}\n\nexport namespace DeleteQueryDefinitionResponse {\n  export const filterSensitiveLog = (obj: DeleteQueryDefinitionResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface DeleteResourcePolicyRequest {\n  /**\n   * <p>The name of the policy to be revoked. This parameter is required.</p>\n   */\n  policyName?: string;\n}\n\nexport namespace DeleteResourcePolicyRequest {\n  export const filterSensitiveLog = (obj: DeleteResourcePolicyRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface DeleteRetentionPolicyRequest {\n  /**\n   * <p>The name of the log group.</p>\n   */\n  logGroupName: string | undefined;\n}\n\nexport namespace DeleteRetentionPolicyRequest {\n  export const filterSensitiveLog = (obj: DeleteRetentionPolicyRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface DeleteSubscriptionFilterRequest {\n  /**\n   * <p>The name of the log group.</p>\n   */\n  logGroupName: string | undefined;\n\n  /**\n   * <p>The name of the subscription filter.</p>\n   */\n  filterName: string | undefined;\n}\n\nexport namespace DeleteSubscriptionFilterRequest {\n  export const filterSensitiveLog = (obj: DeleteSubscriptionFilterRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface DescribeDestinationsRequest {\n  /**\n   * <p>The prefix to match. If you don't specify a value, no prefix filter is applied.</p>\n   */\n  DestinationNamePrefix?: string;\n\n  /**\n   * <p>The token for the next set of items to return. (You received this token from a previous call.)</p>\n   */\n  nextToken?: string;\n\n  /**\n   * <p>The maximum number of items returned. If you don't specify a value, the default is up to 50 items.</p>\n   */\n  limit?: number;\n}\n\nexport namespace DescribeDestinationsRequest {\n  export const filterSensitiveLog = (obj: DescribeDestinationsRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Represents a cross-account destination that receives subscription log events.</p>\n */\nexport interface Destination {\n  /**\n   * <p>The name of the destination.</p>\n   */\n  destinationName?: string;\n\n  /**\n   * <p>The Amazon Resource Name (ARN) of the physical target where the log events are\n   *       delivered (for example, a Kinesis stream).</p>\n   */\n  targetArn?: string;\n\n  /**\n   * <p>A role for impersonation, used when delivering log events to the target.</p>\n   */\n  roleArn?: string;\n\n  /**\n   * <p>An IAM policy document that governs which AWS accounts can create subscription filters\n   *       against this destination.</p>\n   */\n  accessPolicy?: string;\n\n  /**\n   * <p>The ARN of this destination.</p>\n   */\n  arn?: string;\n\n  /**\n   * <p>The creation time of the destination, expressed as the number of milliseconds after Jan\n   *       1, 1970 00:00:00 UTC.</p>\n   */\n  creationTime?: number;\n}\n\nexport namespace Destination {\n  export const filterSensitiveLog = (obj: Destination): any => ({\n    ...obj,\n  });\n}\n\nexport interface DescribeDestinationsResponse {\n  /**\n   * <p>The destinations.</p>\n   */\n  destinations?: Destination[];\n\n  /**\n   * <p>The token for the next set of items to return. The token expires after 24 hours.</p>\n   */\n  nextToken?: string;\n}\n\nexport namespace DescribeDestinationsResponse {\n  export const filterSensitiveLog = (obj: DescribeDestinationsResponse): any => ({\n    ...obj,\n  });\n}\n\nexport enum ExportTaskStatusCode {\n  CANCELLED = \"CANCELLED\",\n  COMPLETED = \"COMPLETED\",\n  FAILED = \"FAILED\",\n  PENDING = \"PENDING\",\n  PENDING_CANCEL = \"PENDING_CANCEL\",\n  RUNNING = \"RUNNING\",\n}\n\nexport interface DescribeExportTasksRequest {\n  /**\n   * <p>The ID of the export task. Specifying a task ID filters the results to zero or one export tasks.</p>\n   */\n  taskId?: string;\n\n  /**\n   * <p>The status code of the export task. Specifying a status code filters the results to zero or more export tasks.</p>\n   */\n  statusCode?: ExportTaskStatusCode | string;\n\n  /**\n   * <p>The token for the next set of items to return. (You received this token from a previous call.)</p>\n   */\n  nextToken?: string;\n\n  /**\n   * <p>The maximum number of items returned. If you don't specify a value, the default is up to 50 items.</p>\n   */\n  limit?: number;\n}\n\nexport namespace DescribeExportTasksRequest {\n  export const filterSensitiveLog = (obj: DescribeExportTasksRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Represents the status of an export task.</p>\n */\nexport interface ExportTaskExecutionInfo {\n  /**\n   * <p>The creation time of the export task, expressed as the number of milliseconds after Jan\n   *       1, 1970 00:00:00 UTC.</p>\n   */\n  creationTime?: number;\n\n  /**\n   * <p>The completion time of the export task, expressed as the number of milliseconds after\n   *       Jan 1, 1970 00:00:00 UTC.</p>\n   */\n  completionTime?: number;\n}\n\nexport namespace ExportTaskExecutionInfo {\n  export const filterSensitiveLog = (obj: ExportTaskExecutionInfo): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Represents the status of an export task.</p>\n */\nexport interface ExportTaskStatus {\n  /**\n   * <p>The status code of the export task.</p>\n   */\n  code?: ExportTaskStatusCode | string;\n\n  /**\n   * <p>The status message related to the status code.</p>\n   */\n  message?: string;\n}\n\nexport namespace ExportTaskStatus {\n  export const filterSensitiveLog = (obj: ExportTaskStatus): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Represents an export task.</p>\n */\nexport interface ExportTask {\n  /**\n   * <p>The ID of the export task.</p>\n   */\n  taskId?: string;\n\n  /**\n   * <p>The name of the export task.</p>\n   */\n  taskName?: string;\n\n  /**\n   * <p>The name of the log group from which logs data was exported.</p>\n   */\n  logGroupName?: string;\n\n  /**\n   * <p>The start time, expressed as the number of milliseconds after Jan 1, 1970 00:00:00 UTC.\n   *       Events with a timestamp before this time are not exported.</p>\n   */\n  from?: number;\n\n  /**\n   * <p>The end time, expressed as the number of milliseconds after Jan 1, 1970 00:00:00 UTC.\n   *       Events with a timestamp later than this time are not exported.</p>\n   */\n  to?: number;\n\n  /**\n   * <p>The name of the S3 bucket to which the log data was exported.</p>\n   */\n  destination?: string;\n\n  /**\n   * <p>The prefix that was used as the start of Amazon S3 key for every object exported.</p>\n   */\n  destinationPrefix?: string;\n\n  /**\n   * <p>The status of the export task.</p>\n   */\n  status?: ExportTaskStatus;\n\n  /**\n   * <p>Execution information about the export task.</p>\n   */\n  executionInfo?: ExportTaskExecutionInfo;\n}\n\nexport namespace ExportTask {\n  export const filterSensitiveLog = (obj: ExportTask): any => ({\n    ...obj,\n  });\n}\n\nexport interface DescribeExportTasksResponse {\n  /**\n   * <p>The export tasks.</p>\n   */\n  exportTasks?: ExportTask[];\n\n  /**\n   * <p>The token for the next set of items to return. The token expires after 24 hours.</p>\n   */\n  nextToken?: string;\n}\n\nexport namespace DescribeExportTasksResponse {\n  export const filterSensitiveLog = (obj: DescribeExportTasksResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface DescribeLogGroupsRequest {\n  /**\n   * <p>The prefix to match.</p>\n   */\n  logGroupNamePrefix?: string;\n\n  /**\n   * <p>The token for the next set of items to return. (You received this token from a previous call.)</p>\n   */\n  nextToken?: string;\n\n  /**\n   * <p>The maximum number of items returned. If you don't specify a value, the default is up to 50 items.</p>\n   */\n  limit?: number;\n}\n\nexport namespace DescribeLogGroupsRequest {\n  export const filterSensitiveLog = (obj: DescribeLogGroupsRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Represents a log group.</p>\n */\nexport interface LogGroup {\n  /**\n   * <p>The name of the log group.</p>\n   */\n  logGroupName?: string;\n\n  /**\n   * <p>The creation time of the log group, expressed as the number of milliseconds after Jan\n   *       1, 1970 00:00:00 UTC.</p>\n   */\n  creationTime?: number;\n\n  /**\n   * <p>The number of days to retain the log events in the specified log group.\n   *       Possible values are: 1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, and 3653.</p>\n   *          <p>If you omit <code>retentionInDays</code> in a <code>PutRetentionPolicy</code> operation,\n   *   the events in the log group are always retained and never expire.</p>\n   */\n  retentionInDays?: number;\n\n  /**\n   * <p>The number of metric filters.</p>\n   */\n  metricFilterCount?: number;\n\n  /**\n   * <p>The Amazon Resource Name (ARN) of the log group.</p>\n   */\n  arn?: string;\n\n  /**\n   * <p>The number of bytes stored.</p>\n   */\n  storedBytes?: number;\n\n  /**\n   * <p>The Amazon Resource Name (ARN) of the CMK to use when encrypting log data.</p>\n   */\n  kmsKeyId?: string;\n}\n\nexport namespace LogGroup {\n  export const filterSensitiveLog = (obj: LogGroup): any => ({\n    ...obj,\n  });\n}\n\nexport interface DescribeLogGroupsResponse {\n  /**\n   * <p>The log groups.</p>\n   *          <p>If the <code>retentionInDays</code> value if not included for a log group, then that log group\n   *     is set to have its events never expire.</p>\n   */\n  logGroups?: LogGroup[];\n\n  /**\n   * <p>The token for the next set of items to return. The token expires after 24 hours.</p>\n   */\n  nextToken?: string;\n}\n\nexport namespace DescribeLogGroupsResponse {\n  export const filterSensitiveLog = (obj: DescribeLogGroupsResponse): any => ({\n    ...obj,\n  });\n}\n\nexport enum OrderBy {\n  LastEventTime = \"LastEventTime\",\n  LogStreamName = \"LogStreamName\",\n}\n\nexport interface DescribeLogStreamsRequest {\n  /**\n   * <p>The name of the log group.</p>\n   */\n  logGroupName: string | undefined;\n\n  /**\n   * <p>The prefix to match.</p>\n   *          <p>If <code>orderBy</code> is <code>LastEventTime</code>, you cannot specify this\n   *       parameter.</p>\n   */\n  logStreamNamePrefix?: string;\n\n  /**\n   * <p>If the value is <code>LogStreamName</code>, the results are ordered by log stream name.\n   *       If the value is <code>LastEventTime</code>, the results are ordered by the event time.\n   *       The default value is <code>LogStreamName</code>.</p>\n   *          <p>If you order the results by event time, you cannot specify the <code>logStreamNamePrefix</code> parameter.</p>\n   *          <p>\n   *             <code>lastEventTimeStamp</code> represents the time of the most recent log event in the\n   *       log stream in CloudWatch Logs. This number is expressed as the number of milliseconds after\n   *       Jan 1, 1970 00:00:00 UTC. <code>lastEventTimeStamp</code> updates on an eventual consistency\n   *       basis. It typically updates in less than an hour from ingestion, but in rare situations might\n   *       take longer.</p>\n   */\n  orderBy?: OrderBy | string;\n\n  /**\n   * <p>If the value is true, results are returned in descending order.\n   *       If the value is to false, results are returned in ascending order.\n   *       The default value is false.</p>\n   */\n  descending?: boolean;\n\n  /**\n   * <p>The token for the next set of items to return. (You received this token from a previous call.)</p>\n   */\n  nextToken?: string;\n\n  /**\n   * <p>The maximum number of items returned. If you don't specify a value, the default is up to 50 items.</p>\n   */\n  limit?: number;\n}\n\nexport namespace DescribeLogStreamsRequest {\n  export const filterSensitiveLog = (obj: DescribeLogStreamsRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Represents a log stream, which is a sequence of log events from\n *       a single emitter of logs.</p>\n */\nexport interface LogStream {\n  /**\n   * <p>The name of the log stream.</p>\n   */\n  logStreamName?: string;\n\n  /**\n   * <p>The creation time of the stream, expressed as the number of milliseconds after Jan 1,\n   *       1970 00:00:00 UTC.</p>\n   */\n  creationTime?: number;\n\n  /**\n   * <p>The time of the first event, expressed as the number of milliseconds after Jan 1, 1970\n   *       00:00:00 UTC.</p>\n   */\n  firstEventTimestamp?: number;\n\n  /**\n   * <p>The time of the most recent log event in the log stream in CloudWatch Logs. This number\n   *       is expressed as the number of milliseconds after Jan 1, 1970 00:00:00 UTC. The\n   *         <code>lastEventTime</code> value updates on an eventual consistency basis. It typically\n   *       updates in less than an hour from ingestion, but in rare situations might take\n   *       longer.</p>\n   */\n  lastEventTimestamp?: number;\n\n  /**\n   * <p>The ingestion time, expressed as the number of milliseconds after Jan 1, 1970 00:00:00\n   *       UTC.</p>\n   */\n  lastIngestionTime?: number;\n\n  /**\n   * <p>The sequence token.</p>\n   */\n  uploadSequenceToken?: string;\n\n  /**\n   * <p>The Amazon Resource Name (ARN) of the log stream.</p>\n   */\n  arn?: string;\n\n  /**\n   * @deprecated\n   *\n   * <p>The number of bytes stored.</p>\n   *          <p>\n   *             <b>Important:</b> On June 17, 2019, this parameter was\n   *       deprecated for log streams, and is always reported as zero. This change applies only to log\n   *       streams. The <code>storedBytes</code> parameter for log groups is not affected.</p>\n   */\n  storedBytes?: number;\n}\n\nexport namespace LogStream {\n  export const filterSensitiveLog = (obj: LogStream): any => ({\n    ...obj,\n  });\n}\n\nexport interface DescribeLogStreamsResponse {\n  /**\n   * <p>The log streams.</p>\n   */\n  logStreams?: LogStream[];\n\n  /**\n   * <p>The token for the next set of items to return. The token expires after 24 hours.</p>\n   */\n  nextToken?: string;\n}\n\nexport namespace DescribeLogStreamsResponse {\n  export const filterSensitiveLog = (obj: DescribeLogStreamsResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface DescribeMetricFiltersRequest {\n  /**\n   * <p>The name of the log group.</p>\n   */\n  logGroupName?: string;\n\n  /**\n   * <p>The prefix to match. CloudWatch Logs uses the value you set here\n   *     only if you also include the <code>logGroupName</code> parameter in your request.</p>\n   */\n  filterNamePrefix?: string;\n\n  /**\n   * <p>The token for the next set of items to return. (You received this token from a previous call.)</p>\n   */\n  nextToken?: string;\n\n  /**\n   * <p>The maximum number of items returned. If you don't specify a value, the default is up to 50 items.</p>\n   */\n  limit?: number;\n\n  /**\n   * <p>Filters results to include only those with the specified metric name. If you include this parameter in your request, you\n   *     must also include the <code>metricNamespace</code> parameter.</p>\n   */\n  metricName?: string;\n\n  /**\n   * <p>Filters results to include only those in the specified namespace. If you include this parameter in your request, you\n   *     must also include the <code>metricName</code> parameter.</p>\n   */\n  metricNamespace?: string;\n}\n\nexport namespace DescribeMetricFiltersRequest {\n  export const filterSensitiveLog = (obj: DescribeMetricFiltersRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Indicates how to transform ingested log events to metric data in a CloudWatch\n *       metric.</p>\n */\nexport interface MetricTransformation {\n  /**\n   * <p>The name of the CloudWatch metric.</p>\n   */\n  metricName: string | undefined;\n\n  /**\n   * <p>A custom namespace to contain your metric in CloudWatch. Use namespaces to group together metrics\n   *       that are similar. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#Namespace\">Namespaces</a>.</p>\n   */\n  metricNamespace: string | undefined;\n\n  /**\n   * <p>The value to publish to the CloudWatch metric when a filter pattern matches a log event.</p>\n   */\n  metricValue: string | undefined;\n\n  /**\n   * <p>(Optional) The value to emit when a filter pattern does not match a log event.\n   *       This value can be null.</p>\n   */\n  defaultValue?: number;\n}\n\nexport namespace MetricTransformation {\n  export const filterSensitiveLog = (obj: MetricTransformation): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Metric filters express how CloudWatch Logs would extract metric observations\n *       from ingested log events and transform them into metric data in a CloudWatch metric.</p>\n */\nexport interface MetricFilter {\n  /**\n   * <p>The name of the metric filter.</p>\n   */\n  filterName?: string;\n\n  /**\n   * <p>A symbolic description of how CloudWatch Logs should interpret the data in each log\n   *       event. For example, a log event can contain timestamps, IP addresses, strings, and so on. You\n   *       use the filter pattern to specify what to look for in the log event message.</p>\n   */\n  filterPattern?: string;\n\n  /**\n   * <p>The metric transformations.</p>\n   */\n  metricTransformations?: MetricTransformation[];\n\n  /**\n   * <p>The creation time of the metric filter, expressed as the number of milliseconds after\n   *       Jan 1, 1970 00:00:00 UTC.</p>\n   */\n  creationTime?: number;\n\n  /**\n   * <p>The name of the log group.</p>\n   */\n  logGroupName?: string;\n}\n\nexport namespace MetricFilter {\n  export const filterSensitiveLog = (obj: MetricFilter): any => ({\n    ...obj,\n  });\n}\n\nexport interface DescribeMetricFiltersResponse {\n  /**\n   * <p>The metric filters.</p>\n   */\n  metricFilters?: MetricFilter[];\n\n  /**\n   * <p>The token for the next set of items to return. The token expires after 24 hours.</p>\n   */\n  nextToken?: string;\n}\n\nexport namespace DescribeMetricFiltersResponse {\n  export const filterSensitiveLog = (obj: DescribeMetricFiltersResponse): any => ({\n    ...obj,\n  });\n}\n\nexport enum QueryStatus {\n  Cancelled = \"Cancelled\",\n  Complete = \"Complete\",\n  Failed = \"Failed\",\n  Running = \"Running\",\n  Scheduled = \"Scheduled\",\n}\n\nexport interface DescribeQueriesRequest {\n  /**\n   * <p>Limits the returned queries to only those for the specified log group.</p>\n   */\n  logGroupName?: string;\n\n  /**\n   * <p>Limits the returned queries to only those that have the specified status. Valid values are <code>Cancelled</code>,\n   *       <code>Complete</code>, <code>Failed</code>, <code>Running</code>, and <code>Scheduled</code>.</p>\n   */\n  status?: QueryStatus | string;\n\n  /**\n   * <p>Limits the number of returned queries to the specified number.</p>\n   */\n  maxResults?: number;\n\n  /**\n   * <p>The token for the next set of items to return. The token expires after 24 hours.</p>\n   */\n  nextToken?: string;\n}\n\nexport namespace DescribeQueriesRequest {\n  export const filterSensitiveLog = (obj: DescribeQueriesRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Information about one CloudWatch Logs Insights query that matches the request in a <code>DescribeQueries</code> operation. </p>\n */\nexport interface QueryInfo {\n  /**\n   * <p>The unique ID number of this query.</p>\n   */\n  queryId?: string;\n\n  /**\n   * <p>The query string used in this query.</p>\n   */\n  queryString?: string;\n\n  /**\n   * <p>The status of this query. Possible values are <code>Cancelled</code>,\n   *       <code>Complete</code>, <code>Failed</code>, <code>Running</code>, <code>Scheduled</code>, and <code>Unknown</code>.</p>\n   */\n  status?: QueryStatus | string;\n\n  /**\n   * <p>The date and time that this query was created.</p>\n   */\n  createTime?: number;\n\n  /**\n   * <p>The name of the log group scanned by this query.</p>\n   */\n  logGroupName?: string;\n}\n\nexport namespace QueryInfo {\n  export const filterSensitiveLog = (obj: QueryInfo): any => ({\n    ...obj,\n  });\n}\n\nexport interface DescribeQueriesResponse {\n  /**\n   * <p>The list of queries that match the request.</p>\n   */\n  queries?: QueryInfo[];\n\n  /**\n   * <p>The token for the next set of items to return. The token expires after 24 hours.</p>\n   */\n  nextToken?: string;\n}\n\nexport namespace DescribeQueriesResponse {\n  export const filterSensitiveLog = (obj: DescribeQueriesResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface DescribeQueryDefinitionsRequest {\n  /**\n   * <p>Use this parameter to filter your results to only the query definitions that have names that start with the prefix you specify.</p>\n   */\n  queryDefinitionNamePrefix?: string;\n\n  /**\n   * <p>Limits the number of returned query definitions to the specified number.</p>\n   */\n  maxResults?: number;\n\n  /**\n   * <p>The token for the next set of items to return. The token expires after 24 hours.</p>\n   */\n  nextToken?: string;\n}\n\nexport namespace DescribeQueryDefinitionsRequest {\n  export const filterSensitiveLog = (obj: DescribeQueryDefinitionsRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>This structure contains details about a saved CloudWatch Logs Insights query definition.</p>\n */\nexport interface QueryDefinition {\n  /**\n   * <p>The unique ID of the query definition.</p>\n   */\n  queryDefinitionId?: string;\n\n  /**\n   * <p>The name of the query definition.</p>\n   */\n  name?: string;\n\n  /**\n   * <p>The query string to use for this definition.\n   *       For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CWL_QuerySyntax.html\">CloudWatch Logs Insights Query Syntax</a>.</p>\n   */\n  queryString?: string;\n\n  /**\n   * <p>The date that the query definition was most recently modified.</p>\n   */\n  lastModified?: number;\n\n  /**\n   * <p>If this query definition contains a list of log groups that it is limited to, that list appears here.</p>\n   */\n  logGroupNames?: string[];\n}\n\nexport namespace QueryDefinition {\n  export const filterSensitiveLog = (obj: QueryDefinition): any => ({\n    ...obj,\n  });\n}\n\nexport interface DescribeQueryDefinitionsResponse {\n  /**\n   * <p>The list of query definitions that match your request.</p>\n   */\n  queryDefinitions?: QueryDefinition[];\n\n  /**\n   * <p>The token for the next set of items to return. The token expires after 24 hours.</p>\n   */\n  nextToken?: string;\n}\n\nexport namespace DescribeQueryDefinitionsResponse {\n  export const filterSensitiveLog = (obj: DescribeQueryDefinitionsResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface DescribeResourcePoliciesRequest {\n  /**\n   * <p>The token for the next set of items to return. The token expires after 24 hours.</p>\n   */\n  nextToken?: string;\n\n  /**\n   * <p>The maximum number of resource policies to be displayed with one call of this API.</p>\n   */\n  limit?: number;\n}\n\nexport namespace DescribeResourcePoliciesRequest {\n  export const filterSensitiveLog = (obj: DescribeResourcePoliciesRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>A policy enabling one or more entities to put logs to a log group in this account.</p>\n */\nexport interface ResourcePolicy {\n  /**\n   * <p>The name of the resource policy.</p>\n   */\n  policyName?: string;\n\n  /**\n   * <p>The details of the policy.</p>\n   */\n  policyDocument?: string;\n\n  /**\n   * <p>Timestamp showing when this policy was last updated, expressed as the number of\n   *       milliseconds after Jan 1, 1970 00:00:00 UTC.</p>\n   */\n  lastUpdatedTime?: number;\n}\n\nexport namespace ResourcePolicy {\n  export const filterSensitiveLog = (obj: ResourcePolicy): any => ({\n    ...obj,\n  });\n}\n\nexport interface DescribeResourcePoliciesResponse {\n  /**\n   * <p>The resource policies that exist in this account.</p>\n   */\n  resourcePolicies?: ResourcePolicy[];\n\n  /**\n   * <p>The token for the next set of items to return. The token expires after 24 hours.</p>\n   */\n  nextToken?: string;\n}\n\nexport namespace DescribeResourcePoliciesResponse {\n  export const filterSensitiveLog = (obj: DescribeResourcePoliciesResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface DescribeSubscriptionFiltersRequest {\n  /**\n   * <p>The name of the log group.</p>\n   */\n  logGroupName: string | undefined;\n\n  /**\n   * <p>The prefix to match. If you don't specify a value, no prefix filter is applied.</p>\n   */\n  filterNamePrefix?: string;\n\n  /**\n   * <p>The token for the next set of items to return. (You received this token from a previous call.)</p>\n   */\n  nextToken?: string;\n\n  /**\n   * <p>The maximum number of items returned. If you don't specify a value, the default is up to 50 items.</p>\n   */\n  limit?: number;\n}\n\nexport namespace DescribeSubscriptionFiltersRequest {\n  export const filterSensitiveLog = (obj: DescribeSubscriptionFiltersRequest): any => ({\n    ...obj,\n  });\n}\n\nexport enum Distribution {\n  ByLogStream = \"ByLogStream\",\n  Random = \"Random\",\n}\n\n/**\n * <p>Represents a subscription filter.</p>\n */\nexport interface SubscriptionFilter {\n  /**\n   * <p>The name of the subscription filter.</p>\n   */\n  filterName?: string;\n\n  /**\n   * <p>The name of the log group.</p>\n   */\n  logGroupName?: string;\n\n  /**\n   * <p>A symbolic description of how CloudWatch Logs should interpret the data in each log\n   *       event. For example, a log event can contain timestamps, IP addresses, strings, and so on. You\n   *       use the filter pattern to specify what to look for in the log event message.</p>\n   */\n  filterPattern?: string;\n\n  /**\n   * <p>The Amazon Resource Name (ARN) of the destination.</p>\n   */\n  destinationArn?: string;\n\n  /**\n   * <p></p>\n   */\n  roleArn?: string;\n\n  /**\n   * <p>The method used to distribute log data to the destination, which can be either\n   *       random or grouped by log stream.</p>\n   */\n  distribution?: Distribution | string;\n\n  /**\n   * <p>The creation time of the subscription filter, expressed as the number of milliseconds\n   *       after Jan 1, 1970 00:00:00 UTC.</p>\n   */\n  creationTime?: number;\n}\n\nexport namespace SubscriptionFilter {\n  export const filterSensitiveLog = (obj: SubscriptionFilter): any => ({\n    ...obj,\n  });\n}\n\nexport interface DescribeSubscriptionFiltersResponse {\n  /**\n   * <p>The subscription filters.</p>\n   */\n  subscriptionFilters?: SubscriptionFilter[];\n\n  /**\n   * <p>The token for the next set of items to return. The token expires after 24 hours.</p>\n   */\n  nextToken?: string;\n}\n\nexport namespace DescribeSubscriptionFiltersResponse {\n  export const filterSensitiveLog = (obj: DescribeSubscriptionFiltersResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface DisassociateKmsKeyRequest {\n  /**\n   * <p>The name of the log group.</p>\n   */\n  logGroupName: string | undefined;\n}\n\nexport namespace DisassociateKmsKeyRequest {\n  export const filterSensitiveLog = (obj: DisassociateKmsKeyRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Represents a matched event.</p>\n */\nexport interface FilteredLogEvent {\n  /**\n   * <p>The name of the log stream to which this event belongs.</p>\n   */\n  logStreamName?: string;\n\n  /**\n   * <p>The time the event occurred, expressed as the number of milliseconds after Jan 1, 1970\n   *       00:00:00 UTC.</p>\n   */\n  timestamp?: number;\n\n  /**\n   * <p>The data contained in the log event.</p>\n   */\n  message?: string;\n\n  /**\n   * <p>The time the event was ingested, expressed as the number of milliseconds after Jan 1,\n   *       1970 00:00:00 UTC.</p>\n   */\n  ingestionTime?: number;\n\n  /**\n   * <p>The ID of the event.</p>\n   */\n  eventId?: string;\n}\n\nexport namespace FilteredLogEvent {\n  export const filterSensitiveLog = (obj: FilteredLogEvent): any => ({\n    ...obj,\n  });\n}\n\nexport interface FilterLogEventsRequest {\n  /**\n   * <p>The name of the log group to search.</p>\n   */\n  logGroupName: string | undefined;\n\n  /**\n   * <p>Filters the results to only logs from the log streams in this list.</p>\n   *          <p>If you specify a value for both <code>logStreamNamePrefix</code> and <code>logStreamNames</code>, the action\n   *       returns an <code>InvalidParameterException</code> error.</p>\n   */\n  logStreamNames?: string[];\n\n  /**\n   * <p>Filters the results to include only events from log streams that have names starting with this prefix.</p>\n   *          <p>If you specify a value for both <code>logStreamNamePrefix</code> and <code>logStreamNames</code>, but the value for\n   *       <code>logStreamNamePrefix</code> does not match any log stream names specified in <code>logStreamNames</code>, the action\n   *     returns an <code>InvalidParameterException</code> error.</p>\n   */\n  logStreamNamePrefix?: string;\n\n  /**\n   * <p>The start of the time range, expressed as the number of milliseconds after Jan 1, 1970\n   *       00:00:00 UTC. Events with a timestamp before this time are not returned.</p>\n   *          <p>If you omit <code>startTime</code> and <code>endTime</code> the most recent log events\n   *     are retrieved, to up 1 MB or 10,000 log events.</p>\n   */\n  startTime?: number;\n\n  /**\n   * <p>The end of the time range, expressed as the number of milliseconds after Jan 1, 1970\n   *       00:00:00 UTC. Events with a timestamp later than this time are not returned.</p>\n   */\n  endTime?: number;\n\n  /**\n   * <p>The filter pattern to use. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/FilterAndPatternSyntax.html\">Filter and Pattern Syntax</a>.</p>\n   *          <p>If not provided, all the events are matched.</p>\n   */\n  filterPattern?: string;\n\n  /**\n   * <p>The token for the next set of events to return. (You received this token from a previous call.)</p>\n   */\n  nextToken?: string;\n\n  /**\n   * <p>The maximum number of events to return. The default is 10,000 events.</p>\n   */\n  limit?: number;\n\n  /**\n   * @deprecated\n   *\n   * <p>If the value is true, the operation makes a best effort to provide responses that\n   *       contain events from multiple log streams within the log group, interleaved in a single\n   *       response. If the value is false, all the matched log events in the first log stream are\n   *       searched first, then those in the next log stream, and so on. The default is false.</p>\n   *          <p>\n   *             <b>Important:</b> Starting on June 17, 2019, this parameter\n   *       is ignored and the value is assumed to be true. The response from this operation always\n   *       interleaves events from multiple log streams within a log group.</p>\n   */\n  interleaved?: boolean;\n}\n\nexport namespace FilterLogEventsRequest {\n  export const filterSensitiveLog = (obj: FilterLogEventsRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Represents the search status of a log stream.</p>\n */\nexport interface SearchedLogStream {\n  /**\n   * <p>The name of the log stream.</p>\n   */\n  logStreamName?: string;\n\n  /**\n   * <p>Indicates whether all the events in this log stream were searched.</p>\n   */\n  searchedCompletely?: boolean;\n}\n\nexport namespace SearchedLogStream {\n  export const filterSensitiveLog = (obj: SearchedLogStream): any => ({\n    ...obj,\n  });\n}\n\nexport interface FilterLogEventsResponse {\n  /**\n   * <p>The matched events.</p>\n   */\n  events?: FilteredLogEvent[];\n\n  /**\n   * <p>\n   *             <b>IMPORTANT</b> Starting on May 15, 2020,\n   *     this parameter will be deprecated. This parameter will be an empty list\n   *     after the deprecation occurs.</p>\n   *          <p>Indicates which log streams have been searched and whether each has been searched completely.</p>\n   */\n  searchedLogStreams?: SearchedLogStream[];\n\n  /**\n   * <p>The token to use when requesting the next set of items. The token expires after 24 hours.</p>\n   */\n  nextToken?: string;\n}\n\nexport namespace FilterLogEventsResponse {\n  export const filterSensitiveLog = (obj: FilterLogEventsResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetLogEventsRequest {\n  /**\n   * <p>The name of the log group.</p>\n   */\n  logGroupName: string | undefined;\n\n  /**\n   * <p>The name of the log stream.</p>\n   */\n  logStreamName: string | undefined;\n\n  /**\n   * <p>The start of the time range, expressed as the number of milliseconds after Jan 1, 1970\n   *       00:00:00 UTC. Events with a timestamp equal to this time or later than this time are included.\n   *       Events with a timestamp earlier than this time are not included.</p>\n   */\n  startTime?: number;\n\n  /**\n   * <p>The end of the time range, expressed as the number of milliseconds after Jan 1, 1970\n   *       00:00:00 UTC. Events with a timestamp equal to or later than this time are not\n   *       included.</p>\n   */\n  endTime?: number;\n\n  /**\n   * <p>The token for the next set of items to return. (You received this token from a previous call.)</p>\n   *          <p>Using this token works only when you specify <code>true</code> for <code>startFromHead</code>.</p>\n   */\n  nextToken?: string;\n\n  /**\n   * <p>The maximum number of log events returned. If you don't specify a value, the maximum is\n   *       as many log events as can fit in a response size of 1 MB, up to 10,000 log events.</p>\n   */\n  limit?: number;\n\n  /**\n   * <p>If the value is true, the earliest log events are returned first.\n   *       If the value is false, the latest log events are returned first.\n   *       The default value is false.</p>\n   *          <p>If you are using <code>nextToken</code> in this operation, you must specify <code>true</code> for <code>startFromHead</code>.</p>\n   */\n  startFromHead?: boolean;\n}\n\nexport namespace GetLogEventsRequest {\n  export const filterSensitiveLog = (obj: GetLogEventsRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Represents a log event.</p>\n */\nexport interface OutputLogEvent {\n  /**\n   * <p>The time the event occurred, expressed as the number of milliseconds after Jan 1, 1970\n   *       00:00:00 UTC.</p>\n   */\n  timestamp?: number;\n\n  /**\n   * <p>The data contained in the log event.</p>\n   */\n  message?: string;\n\n  /**\n   * <p>The time the event was ingested, expressed as the number of milliseconds after Jan 1,\n   *       1970 00:00:00 UTC.</p>\n   */\n  ingestionTime?: number;\n}\n\nexport namespace OutputLogEvent {\n  export const filterSensitiveLog = (obj: OutputLogEvent): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetLogEventsResponse {\n  /**\n   * <p>The events.</p>\n   */\n  events?: OutputLogEvent[];\n\n  /**\n   * <p>The token for the next set of items in the forward direction. The token expires after\n   *       24 hours. If you have reached the end of the stream, it returns the same token you passed\n   *       in.</p>\n   */\n  nextForwardToken?: string;\n\n  /**\n   * <p>The token for the next set of items in the backward direction. The token expires after\n   *       24 hours. This token is never null. If you have reached the end of the stream, it returns the\n   *       same token you passed in.</p>\n   */\n  nextBackwardToken?: string;\n}\n\nexport namespace GetLogEventsResponse {\n  export const filterSensitiveLog = (obj: GetLogEventsResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetLogGroupFieldsRequest {\n  /**\n   * <p>The name of the log group to search.</p>\n   */\n  logGroupName: string | undefined;\n\n  /**\n   * <p>The time to set as the center of the query. If you specify <code>time</code>, the 8\n   *       minutes before and 8 minutes after this time are searched. If you omit <code>time</code>, the\n   *       past 15 minutes are queried.</p>\n   *          <p>The <code>time</code> value is specified as epoch time, the number of seconds since\n   *       January 1, 1970, 00:00:00 UTC.</p>\n   */\n  time?: number;\n}\n\nexport namespace GetLogGroupFieldsRequest {\n  export const filterSensitiveLog = (obj: GetLogGroupFieldsRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>The fields contained in log events found by a <code>GetLogGroupFields</code> operation,\n *       along with the percentage of queried log events in which each field appears.</p>\n */\nexport interface LogGroupField {\n  /**\n   * <p>The name of a log field.</p>\n   */\n  name?: string;\n\n  /**\n   * <p>The percentage of log events queried that contained the field.</p>\n   */\n  percent?: number;\n}\n\nexport namespace LogGroupField {\n  export const filterSensitiveLog = (obj: LogGroupField): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetLogGroupFieldsResponse {\n  /**\n   * <p>The array of fields found in the query. Each object in the array contains the name of the field, along with the\n   *     percentage of time it appeared in the log events that were queried.</p>\n   */\n  logGroupFields?: LogGroupField[];\n}\n\nexport namespace GetLogGroupFieldsResponse {\n  export const filterSensitiveLog = (obj: GetLogGroupFieldsResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetLogRecordRequest {\n  /**\n   * <p>The pointer corresponding to the log event record you want to retrieve. You get this from\n   *       the response of a <code>GetQueryResults</code> operation. In that response, the value of the\n   *         <code>@ptr</code> field for a log event is the value to use as <code>logRecordPointer</code>\n   *       to retrieve that complete log event record.</p>\n   */\n  logRecordPointer: string | undefined;\n}\n\nexport namespace GetLogRecordRequest {\n  export const filterSensitiveLog = (obj: GetLogRecordRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetLogRecordResponse {\n  /**\n   * <p>The requested log event, as a JSON string.</p>\n   */\n  logRecord?: { [key: string]: string };\n}\n\nexport namespace GetLogRecordResponse {\n  export const filterSensitiveLog = (obj: GetLogRecordResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetQueryResultsRequest {\n  /**\n   * <p>The ID number of the query.</p>\n   */\n  queryId: string | undefined;\n}\n\nexport namespace GetQueryResultsRequest {\n  export const filterSensitiveLog = (obj: GetQueryResultsRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Contains one field from one log event returned by a CloudWatch Logs Insights query, along with the value of that field.</p>\n *          <p>For more information about the fields that are\n *       generated by CloudWatch logs, see\n *       <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CWL_AnalyzeLogData-discoverable-fields.html\">Supported Logs and Discovered Fields</a>.</p>\n */\nexport interface ResultField {\n  /**\n   * <p>The log event field.</p>\n   */\n  field?: string;\n\n  /**\n   * <p>The value of this field.</p>\n   */\n  value?: string;\n}\n\nexport namespace ResultField {\n  export const filterSensitiveLog = (obj: ResultField): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Contains the number of log events scanned by the query, the number of log events that matched the\n *       query criteria, and the total number of bytes in the log events that were scanned.</p>\n */\nexport interface QueryStatistics {\n  /**\n   * <p>The number of log events that matched the query string.</p>\n   */\n  recordsMatched?: number;\n\n  /**\n   * <p>The total number of log events scanned during the query.</p>\n   */\n  recordsScanned?: number;\n\n  /**\n   * <p>The total number of bytes in the log events scanned during the query.</p>\n   */\n  bytesScanned?: number;\n}\n\nexport namespace QueryStatistics {\n  export const filterSensitiveLog = (obj: QueryStatistics): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetQueryResultsResponse {\n  /**\n   * <p>The log events that matched the query criteria during the most recent time it ran.</p>\n   *          <p>The <code>results</code> value is an array of arrays. Each log event is one object in the\n   *       top-level array. Each of these log event objects is an array of\n   *         <code>field</code>/<code>value</code> pairs.</p>\n   */\n  results?: ResultField[][];\n\n  /**\n   * <p>Includes the number of log events scanned by the query, the number of log events that matched the\n   *     query criteria, and the total number of bytes in the log events that were scanned. These values\n   *     reflect the full raw results of the query.</p>\n   */\n  statistics?: QueryStatistics;\n\n  /**\n   * <p>The status of the most recent running of the query. Possible values are <code>Cancelled</code>,\n   *       <code>Complete</code>, <code>Failed</code>, <code>Running</code>, <code>Scheduled</code>,\n   *       <code>Timeout</code>, and <code>Unknown</code>.</p>\n   *          <p>Queries time out after 15 minutes of execution. To avoid having your queries time out,\n   *       reduce the time range being searched or partition your query into a number of queries.</p>\n   */\n  status?: QueryStatus | string;\n}\n\nexport namespace GetQueryResultsResponse {\n  export const filterSensitiveLog = (obj: GetQueryResultsResponse): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Represents a log event, which is a record of activity that was recorded\n *       by the application or resource being monitored.</p>\n */\nexport interface InputLogEvent {\n  /**\n   * <p>The time the event occurred, expressed as the number of milliseconds after Jan 1, 1970\n   *       00:00:00 UTC.</p>\n   */\n  timestamp: number | undefined;\n\n  /**\n   * <p>The raw event message.</p>\n   */\n  message: string | undefined;\n}\n\nexport namespace InputLogEvent {\n  export const filterSensitiveLog = (obj: InputLogEvent): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>The sequence token is not valid. You can get the correct sequence token in\n *       the <code>expectedSequenceToken</code> field in the <code>InvalidSequenceTokenException</code>\n *     message. </p>\n */\nexport interface InvalidSequenceTokenException extends __SmithyException, $MetadataBearer {\n  name: \"InvalidSequenceTokenException\";\n  $fault: \"client\";\n  expectedSequenceToken?: string;\n  message?: string;\n}\n\nexport namespace InvalidSequenceTokenException {\n  export const filterSensitiveLog = (obj: InvalidSequenceTokenException): any => ({\n    ...obj,\n  });\n}\n\nexport interface ListTagsLogGroupRequest {\n  /**\n   * <p>The name of the log group.</p>\n   */\n  logGroupName: string | undefined;\n}\n\nexport namespace ListTagsLogGroupRequest {\n  export const filterSensitiveLog = (obj: ListTagsLogGroupRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface ListTagsLogGroupResponse {\n  /**\n   * <p>The tags for the log group.</p>\n   */\n  tags?: { [key: string]: string };\n}\n\nexport namespace ListTagsLogGroupResponse {\n  export const filterSensitiveLog = (obj: ListTagsLogGroupResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface PutDestinationRequest {\n  /**\n   * <p>A name for the destination.</p>\n   */\n  destinationName: string | undefined;\n\n  /**\n   * <p>The ARN of an Amazon Kinesis stream to which to deliver matching log events.</p>\n   */\n  targetArn: string | undefined;\n\n  /**\n   * <p>The ARN of an IAM role that grants CloudWatch Logs permissions to call the Amazon\n   *       Kinesis <code>PutRecord</code> operation on the destination stream.</p>\n   */\n  roleArn: string | undefined;\n}\n\nexport namespace PutDestinationRequest {\n  export const filterSensitiveLog = (obj: PutDestinationRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface PutDestinationResponse {\n  /**\n   * <p>The destination.</p>\n   */\n  destination?: Destination;\n}\n\nexport namespace PutDestinationResponse {\n  export const filterSensitiveLog = (obj: PutDestinationResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface PutDestinationPolicyRequest {\n  /**\n   * <p>A name for an existing destination.</p>\n   */\n  destinationName: string | undefined;\n\n  /**\n   * <p>An IAM policy document that authorizes cross-account users to deliver their log events\n   *       to the associated destination. This can be up to 5120 bytes.</p>\n   */\n  accessPolicy: string | undefined;\n}\n\nexport namespace PutDestinationPolicyRequest {\n  export const filterSensitiveLog = (obj: PutDestinationPolicyRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface PutLogEventsRequest {\n  /**\n   * <p>The name of the log group.</p>\n   */\n  logGroupName: string | undefined;\n\n  /**\n   * <p>The name of the log stream.</p>\n   */\n  logStreamName: string | undefined;\n\n  /**\n   * <p>The log events.</p>\n   */\n  logEvents: InputLogEvent[] | undefined;\n\n  /**\n   * <p>The sequence token obtained from the response of the previous <code>PutLogEvents</code>\n   *       call. An upload in a newly created log stream does not require a sequence token. You can also\n   *       get the sequence token using <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_DescribeLogStreams.html\">DescribeLogStreams</a>. If you call <code>PutLogEvents</code> twice within a narrow\n   *       time period using the same value for <code>sequenceToken</code>, both calls might be\n   *       successful or one might be rejected.</p>\n   */\n  sequenceToken?: string;\n}\n\nexport namespace PutLogEventsRequest {\n  export const filterSensitiveLog = (obj: PutLogEventsRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Represents the rejected events.</p>\n */\nexport interface RejectedLogEventsInfo {\n  /**\n   * <p>The log events that are too new.</p>\n   */\n  tooNewLogEventStartIndex?: number;\n\n  /**\n   * <p>The log events that are too old.</p>\n   */\n  tooOldLogEventEndIndex?: number;\n\n  /**\n   * <p>The expired log events.</p>\n   */\n  expiredLogEventEndIndex?: number;\n}\n\nexport namespace RejectedLogEventsInfo {\n  export const filterSensitiveLog = (obj: RejectedLogEventsInfo): any => ({\n    ...obj,\n  });\n}\n\nexport interface PutLogEventsResponse {\n  /**\n   * <p>The next sequence token.</p>\n   */\n  nextSequenceToken?: string;\n\n  /**\n   * <p>The rejected events.</p>\n   */\n  rejectedLogEventsInfo?: RejectedLogEventsInfo;\n}\n\nexport namespace PutLogEventsResponse {\n  export const filterSensitiveLog = (obj: PutLogEventsResponse): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>The most likely cause is an invalid AWS access key ID or secret key.</p>\n */\nexport interface UnrecognizedClientException extends __SmithyException, $MetadataBearer {\n  name: \"UnrecognizedClientException\";\n  $fault: \"client\";\n  message?: string;\n}\n\nexport namespace UnrecognizedClientException {\n  export const filterSensitiveLog = (obj: UnrecognizedClientException): any => ({\n    ...obj,\n  });\n}\n\nexport interface PutMetricFilterRequest {\n  /**\n   * <p>The name of the log group.</p>\n   */\n  logGroupName: string | undefined;\n\n  /**\n   * <p>A name for the metric filter.</p>\n   */\n  filterName: string | undefined;\n\n  /**\n   * <p>A filter pattern for extracting metric data out of ingested log events.</p>\n   */\n  filterPattern: string | undefined;\n\n  /**\n   * <p>A collection of information that defines how metric data gets emitted.</p>\n   */\n  metricTransformations: MetricTransformation[] | undefined;\n}\n\nexport namespace PutMetricFilterRequest {\n  export const filterSensitiveLog = (obj: PutMetricFilterRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface PutQueryDefinitionRequest {\n  /**\n   * <p>A name for the query definition. If you are saving a lot of query definitions, we\n   *       recommend that you name them so that you can easily find the ones you want by using the first\n   *       part of the name as a filter in the <code>queryDefinitionNamePrefix</code> parameter of <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_DescribeQueryDefinitions.html\">DescribeQueryDefinitions</a>.</p>\n   */\n  name: string | undefined;\n\n  /**\n   * <p>If you are updating a query definition, use this parameter to specify the ID of the query\n   *       definition that you want to update. You can use <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_DescribeQueryDefinitions.html\">DescribeQueryDefinitions</a> to retrieve the IDs of your saved query\n   *       definitions.</p>\n   *          <p>If you are creating a query definition, do not specify this parameter. CloudWatch\n   *       generates a unique ID for the new query definition and include it in the response to this\n   *       operation.</p>\n   */\n  queryDefinitionId?: string;\n\n  /**\n   * <p>Use this parameter to include specific log groups as part of your query definition.</p>\n   *          <p>If you are updating a query definition and you omit this parameter, then the updated\n   *       definition will contain no log groups.</p>\n   */\n  logGroupNames?: string[];\n\n  /**\n   * <p>The query string to use for this definition.\n   *       For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CWL_QuerySyntax.html\">CloudWatch Logs Insights Query Syntax</a>.</p>\n   */\n  queryString: string | undefined;\n}\n\nexport namespace PutQueryDefinitionRequest {\n  export const filterSensitiveLog = (obj: PutQueryDefinitionRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface PutQueryDefinitionResponse {\n  /**\n   * <p>The ID of the query definition.</p>\n   */\n  queryDefinitionId?: string;\n}\n\nexport namespace PutQueryDefinitionResponse {\n  export const filterSensitiveLog = (obj: PutQueryDefinitionResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface PutResourcePolicyRequest {\n  /**\n   * <p>Name of the new policy. This parameter is required.</p>\n   */\n  policyName?: string;\n\n  /**\n   * <p>Details of the new policy, including the identity of the principal that is enabled to put logs to this account. This is formatted as a JSON string.\n   *     This parameter is required.</p>\n   *          <p>The following example creates a resource policy enabling the Route 53 service to put\n   *       DNS query logs in to the specified log group. Replace <code>\"logArn\"</code> with the ARN of your CloudWatch Logs resource, such as a log group or log stream.</p>\n   *          <p>\n   *             <code>{\n   *    \"Version\": \"2012-10-17\",\n   *    \"Statement\": [\n   *      {\n   *        \"Sid\": \"Route53LogsToCloudWatchLogs\",\n   *        \"Effect\": \"Allow\",\n   *        \"Principal\": {\n   *         \"Service\": [\n   *                 \"route53.amazonaws.com\"\n   *                ]\n   *             },\n   *          \"Action\":\"logs:PutLogEvents\",\n   *          \"Resource\": \"logArn\"\n   *       }\n   *     ]\n   * } </code>\n   *\n   *          </p>\n   */\n  policyDocument?: string;\n}\n\nexport namespace PutResourcePolicyRequest {\n  export const filterSensitiveLog = (obj: PutResourcePolicyRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface PutResourcePolicyResponse {\n  /**\n   * <p>The new policy.</p>\n   */\n  resourcePolicy?: ResourcePolicy;\n}\n\nexport namespace PutResourcePolicyResponse {\n  export const filterSensitiveLog = (obj: PutResourcePolicyResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface PutRetentionPolicyRequest {\n  /**\n   * <p>The name of the log group.</p>\n   */\n  logGroupName: string | undefined;\n\n  /**\n   * <p>The number of days to retain the log events in the specified log group.\n   *       Possible values are: 1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, and 3653.</p>\n   *          <p>If you omit <code>retentionInDays</code> in a <code>PutRetentionPolicy</code> operation,\n   *   the events in the log group are always retained and never expire.</p>\n   */\n  retentionInDays: number | undefined;\n}\n\nexport namespace PutRetentionPolicyRequest {\n  export const filterSensitiveLog = (obj: PutRetentionPolicyRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface PutSubscriptionFilterRequest {\n  /**\n   * <p>The name of the log group.</p>\n   */\n  logGroupName: string | undefined;\n\n  /**\n   * <p>A name for the subscription filter. If you are updating an existing filter, you must\n   *       specify the correct name in <code>filterName</code>. Otherwise, the call fails because you\n   *       cannot associate a second filter with a log group. To find the name of the filter currently\n   *       associated with a log group, use <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_DescribeSubscriptionFilters.html\">DescribeSubscriptionFilters</a>.</p>\n   */\n  filterName: string | undefined;\n\n  /**\n   * <p>A filter pattern for subscribing to a filtered stream of log events.</p>\n   */\n  filterPattern: string | undefined;\n\n  /**\n   * <p>The ARN of the destination to deliver matching log events to. Currently, the supported\n   *       destinations are:</p>\n   *          <ul>\n   *             <li>\n   *                <p>An Amazon Kinesis stream belonging to the same account as the subscription filter,\n   *           for same-account delivery.</p>\n   *             </li>\n   *             <li>\n   *                <p>A logical destination (specified using an ARN) belonging to a different account,\n   *           for cross-account delivery.</p>\n   *             </li>\n   *             <li>\n   *                <p>An Amazon Kinesis Firehose delivery stream belonging to the same account as the\n   *           subscription filter, for same-account delivery.</p>\n   *             </li>\n   *             <li>\n   *                <p>An AWS Lambda function belonging to the same account as the subscription filter,\n   *           for same-account delivery.</p>\n   *             </li>\n   *          </ul>\n   */\n  destinationArn: string | undefined;\n\n  /**\n   * <p>The ARN of an IAM role that grants CloudWatch Logs permissions to deliver ingested log\n   *       events to the destination stream. You don't need to provide the ARN when you are working with\n   *       a logical destination for cross-account delivery.</p>\n   */\n  roleArn?: string;\n\n  /**\n   * <p>The method used to distribute log data to the destination. By default, log data is\n   *       grouped by log stream, but the grouping can be set to random for a more even distribution.\n   *       This property is only applicable when the destination is an Amazon Kinesis stream. </p>\n   */\n  distribution?: Distribution | string;\n}\n\nexport namespace PutSubscriptionFilterRequest {\n  export const filterSensitiveLog = (obj: PutSubscriptionFilterRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Reserved.</p>\n */\nexport interface QueryCompileErrorLocation {\n  /**\n   * <p>Reserved.</p>\n   */\n  startCharOffset?: number;\n\n  /**\n   * <p>Reserved.</p>\n   */\n  endCharOffset?: number;\n}\n\nexport namespace QueryCompileErrorLocation {\n  export const filterSensitiveLog = (obj: QueryCompileErrorLocation): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Reserved.</p>\n */\nexport interface QueryCompileError {\n  /**\n   * <p>Reserved.</p>\n   */\n  location?: QueryCompileErrorLocation;\n\n  /**\n   * <p>Reserved.</p>\n   */\n  message?: string;\n}\n\nexport namespace QueryCompileError {\n  export const filterSensitiveLog = (obj: QueryCompileError): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>The query string is not valid. Details about this error are displayed in a\n *       <code>QueryCompileError</code> object. For more information, see\n *       <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_QueryCompileError.html\">QueryCompileError</a>.</p>\n *          <p>For more information about valid query syntax, see\n *       <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CWL_QuerySyntax.html\">CloudWatch Logs Insights Query Syntax</a>.</p>\n */\nexport interface MalformedQueryException extends __SmithyException, $MetadataBearer {\n  name: \"MalformedQueryException\";\n  $fault: \"client\";\n  /**\n   * <p>Reserved.</p>\n   */\n  queryCompileError?: QueryCompileError;\n\n  message?: string;\n}\n\nexport namespace MalformedQueryException {\n  export const filterSensitiveLog = (obj: MalformedQueryException): any => ({\n    ...obj,\n  });\n}\n\nexport interface StartQueryRequest {\n  /**\n   * <p>The log group on which to perform the query.</p>\n   *          <p>A <code>StartQuery</code> operation must include a <code>logGroupNames</code> or a <code>logGroupName</code> parameter, but\n   *       not both.</p>\n   */\n  logGroupName?: string;\n\n  /**\n   * <p>The list of log groups to be queried. You can include up to 20 log groups.</p>\n   *          <p>A <code>StartQuery</code> operation must include a <code>logGroupNames</code> or a <code>logGroupName</code> parameter, but\n   *     not both.</p>\n   */\n  logGroupNames?: string[];\n\n  /**\n   * <p>The beginning of the time range to query. The range is inclusive, so the specified\n   *       start time is included in the query. Specified as epoch time, the\n   *       number of seconds since January 1, 1970, 00:00:00 UTC.</p>\n   */\n  startTime: number | undefined;\n\n  /**\n   * <p>The end of the time range to query. The range is inclusive, so the specified\n   *       end time is included in the query. Specified as epoch\n   *       time, the number of seconds since January 1, 1970, 00:00:00 UTC.</p>\n   */\n  endTime: number | undefined;\n\n  /**\n   * <p>The query string to use.\n   *       For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CWL_QuerySyntax.html\">CloudWatch Logs Insights Query Syntax</a>.</p>\n   */\n  queryString: string | undefined;\n\n  /**\n   * <p>The maximum number of log events to return in the query. If the query string uses the <code>fields</code> command,\n   *     only the specified fields and their values are returned. The default is 1000.</p>\n   */\n  limit?: number;\n}\n\nexport namespace StartQueryRequest {\n  export const filterSensitiveLog = (obj: StartQueryRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface StartQueryResponse {\n  /**\n   * <p>The unique ID of the query. </p>\n   */\n  queryId?: string;\n}\n\nexport namespace StartQueryResponse {\n  export const filterSensitiveLog = (obj: StartQueryResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface StopQueryRequest {\n  /**\n   * <p>The ID number of the query to stop. To find this ID number, use\n   *         <code>DescribeQueries</code>.</p>\n   */\n  queryId: string | undefined;\n}\n\nexport namespace StopQueryRequest {\n  export const filterSensitiveLog = (obj: StopQueryRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface StopQueryResponse {\n  /**\n   * <p>This is true if the query was stopped by the <code>StopQuery</code> operation.</p>\n   */\n  success?: boolean;\n}\n\nexport namespace StopQueryResponse {\n  export const filterSensitiveLog = (obj: StopQueryResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface TagLogGroupRequest {\n  /**\n   * <p>The name of the log group.</p>\n   */\n  logGroupName: string | undefined;\n\n  /**\n   * <p>The key-value pairs to use for the tags.</p>\n   */\n  tags: { [key: string]: string } | undefined;\n}\n\nexport namespace TagLogGroupRequest {\n  export const filterSensitiveLog = (obj: TagLogGroupRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface TestMetricFilterRequest {\n  /**\n   * <p>A symbolic description of how CloudWatch Logs should interpret the data in each log\n   *       event. For example, a log event can contain timestamps, IP addresses, strings, and so on. You\n   *       use the filter pattern to specify what to look for in the log event message.</p>\n   */\n  filterPattern: string | undefined;\n\n  /**\n   * <p>The log event messages to test.</p>\n   */\n  logEventMessages: string[] | undefined;\n}\n\nexport namespace TestMetricFilterRequest {\n  export const filterSensitiveLog = (obj: TestMetricFilterRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Represents a matched event.</p>\n */\nexport interface MetricFilterMatchRecord {\n  /**\n   * <p>The event number.</p>\n   */\n  eventNumber?: number;\n\n  /**\n   * <p>The raw event data.</p>\n   */\n  eventMessage?: string;\n\n  /**\n   * <p>The values extracted from the event data by the filter.</p>\n   */\n  extractedValues?: { [key: string]: string };\n}\n\nexport namespace MetricFilterMatchRecord {\n  export const filterSensitiveLog = (obj: MetricFilterMatchRecord): any => ({\n    ...obj,\n  });\n}\n\nexport interface TestMetricFilterResponse {\n  /**\n   * <p>The matched events.</p>\n   */\n  matches?: MetricFilterMatchRecord[];\n}\n\nexport namespace TestMetricFilterResponse {\n  export const filterSensitiveLog = (obj: TestMetricFilterResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface UntagLogGroupRequest {\n  /**\n   * <p>The name of the log group.</p>\n   */\n  logGroupName: string | undefined;\n\n  /**\n   * <p>The tag keys. The corresponding tags are removed from the log group.</p>\n   */\n  tags: string[] | undefined;\n}\n\nexport namespace UntagLogGroupRequest {\n  export const filterSensitiveLog = (obj: UntagLogGroupRequest): any => ({\n    ...obj,\n  });\n}\n", "import { AssociateKmsKeyCommandInput, AssociateKmsKeyCommandOutput } from \"../commands/AssociateKmsKeyCommand\";\nimport { CancelExportTaskCommandInput, CancelExportTaskCommandOutput } from \"../commands/CancelExportTaskCommand\";\nimport { CreateExportTaskCommandInput, CreateExportTaskCommandOutput } from \"../commands/CreateExportTaskCommand\";\nimport { CreateLogGroupCommandInput, CreateLogGroupCommandOutput } from \"../commands/CreateLogGroupCommand\";\nimport { CreateLogStreamCommandInput, CreateLogStreamCommandOutput } from \"../commands/CreateLogStreamCommand\";\nimport { DeleteDestinationCommandInput, DeleteDestinationCommandOutput } from \"../commands/DeleteDestinationCommand\";\nimport { DeleteLogGroupCommandInput, DeleteLogGroupCommandOutput } from \"../commands/DeleteLogGroupCommand\";\nimport { DeleteLogStreamCommandInput, DeleteLogStreamCommandOutput } from \"../commands/DeleteLogStreamCommand\";\nimport { DeleteMetricFilterCommandInput, DeleteMetricFilterCommandOutput } from \"../commands/DeleteMetricFilterCommand\";\nimport {\n  DeleteQueryDefinitionCommandInput,\n  DeleteQueryDefinitionCommandOutput,\n} from \"../commands/DeleteQueryDefinitionCommand\";\nimport {\n  DeleteResourcePolicyCommandInput,\n  DeleteResourcePolicyCommandOutput,\n} from \"../commands/DeleteResourcePolicyCommand\";\nimport {\n  DeleteRetentionPolicyCommandInput,\n  DeleteRetentionPolicyCommandOutput,\n} from \"../commands/DeleteRetentionPolicyCommand\";\nimport {\n  DeleteSubscriptionFilterCommandInput,\n  DeleteSubscriptionFilterCommandOutput,\n} from \"../commands/DeleteSubscriptionFilterCommand\";\nimport {\n  DescribeDestinationsCommandInput,\n  DescribeDestinationsCommandOutput,\n} from \"../commands/DescribeDestinationsCommand\";\nimport {\n  DescribeExportTasksCommandInput,\n  DescribeExportTasksCommandOutput,\n} from \"../commands/DescribeExportTasksCommand\";\nimport { DescribeLogGroupsCommandInput, DescribeLogGroupsCommandOutput } from \"../commands/DescribeLogGroupsCommand\";\nimport { DescribeLogStreamsCommandInput, DescribeLogStreamsCommandOutput } from \"../commands/DescribeLogStreamsCommand\";\nimport {\n  DescribeMetricFiltersCommandInput,\n  DescribeMetricFiltersCommandOutput,\n} from \"../commands/DescribeMetricFiltersCommand\";\nimport { DescribeQueriesCommandInput, DescribeQueriesCommandOutput } from \"../commands/DescribeQueriesCommand\";\nimport {\n  DescribeQueryDefinitionsCommandInput,\n  DescribeQueryDefinitionsCommandOutput,\n} from \"../commands/DescribeQueryDefinitionsCommand\";\nimport {\n  DescribeResourcePoliciesCommandInput,\n  DescribeResourcePoliciesCommandOutput,\n} from \"../commands/DescribeResourcePoliciesCommand\";\nimport {\n  DescribeSubscriptionFiltersCommandInput,\n  DescribeSubscriptionFiltersCommandOutput,\n} from \"../commands/DescribeSubscriptionFiltersCommand\";\nimport { DisassociateKmsKeyCommandInput, DisassociateKmsKeyCommandOutput } from \"../commands/DisassociateKmsKeyCommand\";\nimport { FilterLogEventsCommandInput, FilterLogEventsCommandOutput } from \"../commands/FilterLogEventsCommand\";\nimport { GetLogEventsCommandInput, GetLogEventsCommandOutput } from \"../commands/GetLogEventsCommand\";\nimport { GetLogGroupFieldsCommandInput, GetLogGroupFieldsCommandOutput } from \"../commands/GetLogGroupFieldsCommand\";\nimport { GetLogRecordCommandInput, GetLogRecordCommandOutput } from \"../commands/GetLogRecordCommand\";\nimport { GetQueryResultsCommandInput, GetQueryResultsCommandOutput } from \"../commands/GetQueryResultsCommand\";\nimport { ListTagsLogGroupCommandInput, ListTagsLogGroupCommandOutput } from \"../commands/ListTagsLogGroupCommand\";\nimport { PutDestinationCommandInput, PutDestinationCommandOutput } from \"../commands/PutDestinationCommand\";\nimport {\n  PutDestinationPolicyCommandInput,\n  PutDestinationPolicyCommandOutput,\n} from \"../commands/PutDestinationPolicyCommand\";\nimport { PutLogEventsCommandInput, PutLogEventsCommandOutput } from \"../commands/PutLogEventsCommand\";\nimport { PutMetricFilterCommandInput, PutMetricFilterCommandOutput } from \"../commands/PutMetricFilterCommand\";\nimport { PutQueryDefinitionCommandInput, PutQueryDefinitionCommandOutput } from \"../commands/PutQueryDefinitionCommand\";\nimport { PutResourcePolicyCommandInput, PutResourcePolicyCommandOutput } from \"../commands/PutResourcePolicyCommand\";\nimport { PutRetentionPolicyCommandInput, PutRetentionPolicyCommandOutput } from \"../commands/PutRetentionPolicyCommand\";\nimport {\n  PutSubscriptionFilterCommandInput,\n  PutSubscriptionFilterCommandOutput,\n} from \"../commands/PutSubscriptionFilterCommand\";\nimport { StartQueryCommandInput, StartQueryCommandOutput } from \"../commands/StartQueryCommand\";\nimport { StopQueryCommandInput, StopQueryCommandOutput } from \"../commands/StopQueryCommand\";\nimport { TagLogGroupCommandInput, TagLogGroupCommandOutput } from \"../commands/TagLogGroupCommand\";\nimport { TestMetricFilterCommandInput, TestMetricFilterCommandOutput } from \"../commands/TestMetricFilterCommand\";\nimport { UntagLogGroupCommandInput, UntagLogGroupCommandOutput } from \"../commands/UntagLogGroupCommand\";\nimport {\n  AssociateKmsKeyRequest,\n  CancelExportTaskRequest,\n  CreateExportTaskRequest,\n  CreateExportTaskResponse,\n  CreateLogGroupRequest,\n  CreateLogStreamRequest,\n  DataAlreadyAcceptedException,\n  DeleteDestinationRequest,\n  DeleteLogGroupRequest,\n  DeleteLogStreamRequest,\n  DeleteMetricFilterRequest,\n  DeleteQueryDefinitionRequest,\n  DeleteQueryDefinitionResponse,\n  DeleteResourcePolicyRequest,\n  DeleteRetentionPolicyRequest,\n  DeleteSubscriptionFilterRequest,\n  DescribeDestinationsRequest,\n  DescribeDestinationsResponse,\n  DescribeExportTasksRequest,\n  DescribeExportTasksResponse,\n  DescribeLogGroupsRequest,\n  DescribeLogGroupsResponse,\n  DescribeLogStreamsRequest,\n  DescribeLogStreamsResponse,\n  DescribeMetricFiltersRequest,\n  DescribeMetricFiltersResponse,\n  DescribeQueriesRequest,\n  DescribeQueriesResponse,\n  DescribeQueryDefinitionsRequest,\n  DescribeQueryDefinitionsResponse,\n  DescribeResourcePoliciesRequest,\n  DescribeResourcePoliciesResponse,\n  DescribeSubscriptionFiltersRequest,\n  DescribeSubscriptionFiltersResponse,\n  Destination,\n  DisassociateKmsKeyRequest,\n  ExportTask,\n  ExportTaskExecutionInfo,\n  ExportTaskStatus,\n  FilterLogEventsRequest,\n  FilterLogEventsResponse,\n  FilteredLogEvent,\n  GetLogEventsRequest,\n  GetLogEventsResponse,\n  GetLogGroupFieldsRequest,\n  GetLogGroupFieldsResponse,\n  GetLogRecordRequest,\n  GetLogRecordResponse,\n  GetQueryResultsRequest,\n  GetQueryResultsResponse,\n  InputLogEvent,\n  InvalidOperationException,\n  InvalidParameterException,\n  InvalidSequenceTokenException,\n  LimitExceededException,\n  ListTagsLogGroupRequest,\n  ListTagsLogGroupResponse,\n  LogGroup,\n  LogGroupField,\n  LogStream,\n  MalformedQueryException,\n  MetricFilter,\n  MetricFilterMatchRecord,\n  MetricTransformation,\n  OperationAbortedException,\n  OutputLogEvent,\n  PutDestinationPolicyRequest,\n  PutDestinationRequest,\n  PutDestinationResponse,\n  PutLogEventsRequest,\n  PutLogEventsResponse,\n  PutMetricFilterRequest,\n  PutQueryDefinitionRequest,\n  PutQueryDefinitionResponse,\n  PutResourcePolicyRequest,\n  PutResourcePolicyResponse,\n  PutRetentionPolicyRequest,\n  PutSubscriptionFilterRequest,\n  QueryCompileError,\n  QueryCompileErrorLocation,\n  QueryDefinition,\n  QueryInfo,\n  QueryStatistics,\n  RejectedLogEventsInfo,\n  ResourceAlreadyExistsException,\n  ResourceNotFoundException,\n  ResourcePolicy,\n  ResultField,\n  SearchedLogStream,\n  ServiceUnavailableException,\n  StartQueryRequest,\n  StartQueryResponse,\n  StopQueryRequest,\n  StopQueryResponse,\n  SubscriptionFilter,\n  TagLogGroupRequest,\n  TestMetricFilterRequest,\n  TestMetricFilterResponse,\n  UnrecognizedClientException,\n  UntagLogGroupRequest,\n} from \"../models/models_0\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { SmithyException as __SmithyException } from \"@aws-sdk/smithy-client\";\nimport {\n  Endpoint as __Endpoint,\n  HeaderBag as __HeaderBag,\n  MetadataBearer as __MetadataBearer,\n  ResponseMetadata as __ResponseMetadata,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport const serializeAws_json1_1AssociateKmsKeyCommand = async (\n  input: AssociateKmsKeyCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.AssociateKmsKey\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1AssociateKmsKeyRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1CancelExportTaskCommand = async (\n  input: CancelExportTaskCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.CancelExportTask\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1CancelExportTaskRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1CreateExportTaskCommand = async (\n  input: CreateExportTaskCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.CreateExportTask\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1CreateExportTaskRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1CreateLogGroupCommand = async (\n  input: CreateLogGroupCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.CreateLogGroup\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1CreateLogGroupRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1CreateLogStreamCommand = async (\n  input: CreateLogStreamCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.CreateLogStream\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1CreateLogStreamRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DeleteDestinationCommand = async (\n  input: DeleteDestinationCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.DeleteDestination\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DeleteDestinationRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DeleteLogGroupCommand = async (\n  input: DeleteLogGroupCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.DeleteLogGroup\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DeleteLogGroupRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DeleteLogStreamCommand = async (\n  input: DeleteLogStreamCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.DeleteLogStream\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DeleteLogStreamRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DeleteMetricFilterCommand = async (\n  input: DeleteMetricFilterCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.DeleteMetricFilter\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DeleteMetricFilterRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DeleteQueryDefinitionCommand = async (\n  input: DeleteQueryDefinitionCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.DeleteQueryDefinition\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DeleteQueryDefinitionRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DeleteResourcePolicyCommand = async (\n  input: DeleteResourcePolicyCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.DeleteResourcePolicy\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DeleteResourcePolicyRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DeleteRetentionPolicyCommand = async (\n  input: DeleteRetentionPolicyCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.DeleteRetentionPolicy\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DeleteRetentionPolicyRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DeleteSubscriptionFilterCommand = async (\n  input: DeleteSubscriptionFilterCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.DeleteSubscriptionFilter\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DeleteSubscriptionFilterRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DescribeDestinationsCommand = async (\n  input: DescribeDestinationsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.DescribeDestinations\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DescribeDestinationsRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DescribeExportTasksCommand = async (\n  input: DescribeExportTasksCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.DescribeExportTasks\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DescribeExportTasksRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DescribeLogGroupsCommand = async (\n  input: DescribeLogGroupsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.DescribeLogGroups\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DescribeLogGroupsRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DescribeLogStreamsCommand = async (\n  input: DescribeLogStreamsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.DescribeLogStreams\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DescribeLogStreamsRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DescribeMetricFiltersCommand = async (\n  input: DescribeMetricFiltersCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.DescribeMetricFilters\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DescribeMetricFiltersRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DescribeQueriesCommand = async (\n  input: DescribeQueriesCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.DescribeQueries\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DescribeQueriesRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DescribeQueryDefinitionsCommand = async (\n  input: DescribeQueryDefinitionsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.DescribeQueryDefinitions\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DescribeQueryDefinitionsRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DescribeResourcePoliciesCommand = async (\n  input: DescribeResourcePoliciesCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.DescribeResourcePolicies\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DescribeResourcePoliciesRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DescribeSubscriptionFiltersCommand = async (\n  input: DescribeSubscriptionFiltersCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.DescribeSubscriptionFilters\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DescribeSubscriptionFiltersRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DisassociateKmsKeyCommand = async (\n  input: DisassociateKmsKeyCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.DisassociateKmsKey\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DisassociateKmsKeyRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1FilterLogEventsCommand = async (\n  input: FilterLogEventsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.FilterLogEvents\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1FilterLogEventsRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1GetLogEventsCommand = async (\n  input: GetLogEventsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.GetLogEvents\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1GetLogEventsRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1GetLogGroupFieldsCommand = async (\n  input: GetLogGroupFieldsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.GetLogGroupFields\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1GetLogGroupFieldsRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1GetLogRecordCommand = async (\n  input: GetLogRecordCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.GetLogRecord\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1GetLogRecordRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1GetQueryResultsCommand = async (\n  input: GetQueryResultsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.GetQueryResults\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1GetQueryResultsRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1ListTagsLogGroupCommand = async (\n  input: ListTagsLogGroupCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.ListTagsLogGroup\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1ListTagsLogGroupRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1PutDestinationCommand = async (\n  input: PutDestinationCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.PutDestination\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1PutDestinationRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1PutDestinationPolicyCommand = async (\n  input: PutDestinationPolicyCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.PutDestinationPolicy\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1PutDestinationPolicyRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1PutLogEventsCommand = async (\n  input: PutLogEventsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.PutLogEvents\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1PutLogEventsRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1PutMetricFilterCommand = async (\n  input: PutMetricFilterCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.PutMetricFilter\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1PutMetricFilterRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1PutQueryDefinitionCommand = async (\n  input: PutQueryDefinitionCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.PutQueryDefinition\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1PutQueryDefinitionRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1PutResourcePolicyCommand = async (\n  input: PutResourcePolicyCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.PutResourcePolicy\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1PutResourcePolicyRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1PutRetentionPolicyCommand = async (\n  input: PutRetentionPolicyCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.PutRetentionPolicy\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1PutRetentionPolicyRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1PutSubscriptionFilterCommand = async (\n  input: PutSubscriptionFilterCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.PutSubscriptionFilter\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1PutSubscriptionFilterRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1StartQueryCommand = async (\n  input: StartQueryCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.StartQuery\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1StartQueryRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1StopQueryCommand = async (\n  input: StopQueryCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.StopQuery\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1StopQueryRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1TagLogGroupCommand = async (\n  input: TagLogGroupCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.TagLogGroup\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1TagLogGroupRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1TestMetricFilterCommand = async (\n  input: TestMetricFilterCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.TestMetricFilter\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1TestMetricFilterRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1UntagLogGroupCommand = async (\n  input: UntagLogGroupCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Logs_20140328.UntagLogGroup\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1UntagLogGroupRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const deserializeAws_json1_1AssociateKmsKeyCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<AssociateKmsKeyCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1AssociateKmsKeyCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: AssociateKmsKeyCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1AssociateKmsKeyCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<AssociateKmsKeyCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"OperationAbortedException\":\n    case \"com.amazonaws.cloudwatchlogs#OperationAbortedException\":\n      response = {\n        ...(await deserializeAws_json1_1OperationAbortedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1CancelExportTaskCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CancelExportTaskCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1CancelExportTaskCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: CancelExportTaskCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1CancelExportTaskCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CancelExportTaskCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidOperationException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidOperationException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidOperationExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1CreateExportTaskCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateExportTaskCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1CreateExportTaskCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1CreateExportTaskResponse(data, context);\n  const response: CreateExportTaskCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1CreateExportTaskCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateExportTaskCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.cloudwatchlogs#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"OperationAbortedException\":\n    case \"com.amazonaws.cloudwatchlogs#OperationAbortedException\":\n      response = {\n        ...(await deserializeAws_json1_1OperationAbortedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceAlreadyExistsException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceAlreadyExistsException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceAlreadyExistsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1CreateLogGroupCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateLogGroupCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1CreateLogGroupCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: CreateLogGroupCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1CreateLogGroupCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateLogGroupCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.cloudwatchlogs#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"OperationAbortedException\":\n    case \"com.amazonaws.cloudwatchlogs#OperationAbortedException\":\n      response = {\n        ...(await deserializeAws_json1_1OperationAbortedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceAlreadyExistsException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceAlreadyExistsException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceAlreadyExistsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1CreateLogStreamCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateLogStreamCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1CreateLogStreamCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: CreateLogStreamCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1CreateLogStreamCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateLogStreamCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceAlreadyExistsException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceAlreadyExistsException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceAlreadyExistsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DeleteDestinationCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteDestinationCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DeleteDestinationCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: DeleteDestinationCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DeleteDestinationCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteDestinationCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"OperationAbortedException\":\n    case \"com.amazonaws.cloudwatchlogs#OperationAbortedException\":\n      response = {\n        ...(await deserializeAws_json1_1OperationAbortedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DeleteLogGroupCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteLogGroupCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DeleteLogGroupCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: DeleteLogGroupCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DeleteLogGroupCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteLogGroupCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"OperationAbortedException\":\n    case \"com.amazonaws.cloudwatchlogs#OperationAbortedException\":\n      response = {\n        ...(await deserializeAws_json1_1OperationAbortedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DeleteLogStreamCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteLogStreamCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DeleteLogStreamCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: DeleteLogStreamCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DeleteLogStreamCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteLogStreamCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"OperationAbortedException\":\n    case \"com.amazonaws.cloudwatchlogs#OperationAbortedException\":\n      response = {\n        ...(await deserializeAws_json1_1OperationAbortedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DeleteMetricFilterCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteMetricFilterCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DeleteMetricFilterCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: DeleteMetricFilterCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DeleteMetricFilterCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteMetricFilterCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"OperationAbortedException\":\n    case \"com.amazonaws.cloudwatchlogs#OperationAbortedException\":\n      response = {\n        ...(await deserializeAws_json1_1OperationAbortedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DeleteQueryDefinitionCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteQueryDefinitionCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DeleteQueryDefinitionCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1DeleteQueryDefinitionResponse(data, context);\n  const response: DeleteQueryDefinitionCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DeleteQueryDefinitionCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteQueryDefinitionCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DeleteResourcePolicyCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteResourcePolicyCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DeleteResourcePolicyCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: DeleteResourcePolicyCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DeleteResourcePolicyCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteResourcePolicyCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DeleteRetentionPolicyCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteRetentionPolicyCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DeleteRetentionPolicyCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: DeleteRetentionPolicyCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DeleteRetentionPolicyCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteRetentionPolicyCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"OperationAbortedException\":\n    case \"com.amazonaws.cloudwatchlogs#OperationAbortedException\":\n      response = {\n        ...(await deserializeAws_json1_1OperationAbortedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DeleteSubscriptionFilterCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteSubscriptionFilterCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DeleteSubscriptionFilterCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: DeleteSubscriptionFilterCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DeleteSubscriptionFilterCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteSubscriptionFilterCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"OperationAbortedException\":\n    case \"com.amazonaws.cloudwatchlogs#OperationAbortedException\":\n      response = {\n        ...(await deserializeAws_json1_1OperationAbortedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DescribeDestinationsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeDestinationsCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DescribeDestinationsCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1DescribeDestinationsResponse(data, context);\n  const response: DescribeDestinationsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DescribeDestinationsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeDestinationsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DescribeExportTasksCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeExportTasksCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DescribeExportTasksCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1DescribeExportTasksResponse(data, context);\n  const response: DescribeExportTasksCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DescribeExportTasksCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeExportTasksCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DescribeLogGroupsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeLogGroupsCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DescribeLogGroupsCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1DescribeLogGroupsResponse(data, context);\n  const response: DescribeLogGroupsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DescribeLogGroupsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeLogGroupsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DescribeLogStreamsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeLogStreamsCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DescribeLogStreamsCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1DescribeLogStreamsResponse(data, context);\n  const response: DescribeLogStreamsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DescribeLogStreamsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeLogStreamsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DescribeMetricFiltersCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeMetricFiltersCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DescribeMetricFiltersCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1DescribeMetricFiltersResponse(data, context);\n  const response: DescribeMetricFiltersCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DescribeMetricFiltersCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeMetricFiltersCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DescribeQueriesCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeQueriesCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DescribeQueriesCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1DescribeQueriesResponse(data, context);\n  const response: DescribeQueriesCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DescribeQueriesCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeQueriesCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DescribeQueryDefinitionsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeQueryDefinitionsCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DescribeQueryDefinitionsCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1DescribeQueryDefinitionsResponse(data, context);\n  const response: DescribeQueryDefinitionsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DescribeQueryDefinitionsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeQueryDefinitionsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DescribeResourcePoliciesCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeResourcePoliciesCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DescribeResourcePoliciesCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1DescribeResourcePoliciesResponse(data, context);\n  const response: DescribeResourcePoliciesCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DescribeResourcePoliciesCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeResourcePoliciesCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DescribeSubscriptionFiltersCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeSubscriptionFiltersCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DescribeSubscriptionFiltersCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1DescribeSubscriptionFiltersResponse(data, context);\n  const response: DescribeSubscriptionFiltersCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DescribeSubscriptionFiltersCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeSubscriptionFiltersCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DisassociateKmsKeyCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DisassociateKmsKeyCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DisassociateKmsKeyCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: DisassociateKmsKeyCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DisassociateKmsKeyCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DisassociateKmsKeyCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"OperationAbortedException\":\n    case \"com.amazonaws.cloudwatchlogs#OperationAbortedException\":\n      response = {\n        ...(await deserializeAws_json1_1OperationAbortedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1FilterLogEventsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<FilterLogEventsCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1FilterLogEventsCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1FilterLogEventsResponse(data, context);\n  const response: FilterLogEventsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1FilterLogEventsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<FilterLogEventsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1GetLogEventsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetLogEventsCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1GetLogEventsCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1GetLogEventsResponse(data, context);\n  const response: GetLogEventsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1GetLogEventsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetLogEventsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1GetLogGroupFieldsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetLogGroupFieldsCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1GetLogGroupFieldsCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1GetLogGroupFieldsResponse(data, context);\n  const response: GetLogGroupFieldsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1GetLogGroupFieldsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetLogGroupFieldsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.cloudwatchlogs#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1GetLogRecordCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetLogRecordCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1GetLogRecordCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1GetLogRecordResponse(data, context);\n  const response: GetLogRecordCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1GetLogRecordCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetLogRecordCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.cloudwatchlogs#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1GetQueryResultsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetQueryResultsCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1GetQueryResultsCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1GetQueryResultsResponse(data, context);\n  const response: GetQueryResultsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1GetQueryResultsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetQueryResultsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1ListTagsLogGroupCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListTagsLogGroupCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1ListTagsLogGroupCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1ListTagsLogGroupResponse(data, context);\n  const response: ListTagsLogGroupCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1ListTagsLogGroupCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListTagsLogGroupCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1PutDestinationCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutDestinationCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1PutDestinationCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1PutDestinationResponse(data, context);\n  const response: PutDestinationCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1PutDestinationCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutDestinationCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"OperationAbortedException\":\n    case \"com.amazonaws.cloudwatchlogs#OperationAbortedException\":\n      response = {\n        ...(await deserializeAws_json1_1OperationAbortedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1PutDestinationPolicyCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutDestinationPolicyCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1PutDestinationPolicyCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: PutDestinationPolicyCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1PutDestinationPolicyCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutDestinationPolicyCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"OperationAbortedException\":\n    case \"com.amazonaws.cloudwatchlogs#OperationAbortedException\":\n      response = {\n        ...(await deserializeAws_json1_1OperationAbortedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1PutLogEventsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutLogEventsCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1PutLogEventsCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1PutLogEventsResponse(data, context);\n  const response: PutLogEventsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1PutLogEventsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutLogEventsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"DataAlreadyAcceptedException\":\n    case \"com.amazonaws.cloudwatchlogs#DataAlreadyAcceptedException\":\n      response = {\n        ...(await deserializeAws_json1_1DataAlreadyAcceptedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidSequenceTokenException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidSequenceTokenException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidSequenceTokenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"UnrecognizedClientException\":\n    case \"com.amazonaws.cloudwatchlogs#UnrecognizedClientException\":\n      response = {\n        ...(await deserializeAws_json1_1UnrecognizedClientExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1PutMetricFilterCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutMetricFilterCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1PutMetricFilterCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: PutMetricFilterCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1PutMetricFilterCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutMetricFilterCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.cloudwatchlogs#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"OperationAbortedException\":\n    case \"com.amazonaws.cloudwatchlogs#OperationAbortedException\":\n      response = {\n        ...(await deserializeAws_json1_1OperationAbortedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1PutQueryDefinitionCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutQueryDefinitionCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1PutQueryDefinitionCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1PutQueryDefinitionResponse(data, context);\n  const response: PutQueryDefinitionCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1PutQueryDefinitionCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutQueryDefinitionCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1PutResourcePolicyCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutResourcePolicyCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1PutResourcePolicyCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1PutResourcePolicyResponse(data, context);\n  const response: PutResourcePolicyCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1PutResourcePolicyCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutResourcePolicyCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.cloudwatchlogs#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1PutRetentionPolicyCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutRetentionPolicyCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1PutRetentionPolicyCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: PutRetentionPolicyCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1PutRetentionPolicyCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutRetentionPolicyCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"OperationAbortedException\":\n    case \"com.amazonaws.cloudwatchlogs#OperationAbortedException\":\n      response = {\n        ...(await deserializeAws_json1_1OperationAbortedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1PutSubscriptionFilterCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutSubscriptionFilterCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1PutSubscriptionFilterCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: PutSubscriptionFilterCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1PutSubscriptionFilterCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutSubscriptionFilterCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.cloudwatchlogs#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"OperationAbortedException\":\n    case \"com.amazonaws.cloudwatchlogs#OperationAbortedException\":\n      response = {\n        ...(await deserializeAws_json1_1OperationAbortedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1StartQueryCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<StartQueryCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1StartQueryCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1StartQueryResponse(data, context);\n  const response: StartQueryCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1StartQueryCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<StartQueryCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.cloudwatchlogs#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MalformedQueryException\":\n    case \"com.amazonaws.cloudwatchlogs#MalformedQueryException\":\n      response = {\n        ...(await deserializeAws_json1_1MalformedQueryExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1StopQueryCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<StopQueryCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1StopQueryCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1StopQueryResponse(data, context);\n  const response: StopQueryCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1StopQueryCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<StopQueryCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1TagLogGroupCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<TagLogGroupCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1TagLogGroupCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: TagLogGroupCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1TagLogGroupCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<TagLogGroupCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1TestMetricFilterCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<TestMetricFilterCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1TestMetricFilterCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1TestMetricFilterResponse(data, context);\n  const response: TestMetricFilterCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1TestMetricFilterCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<TestMetricFilterCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cloudwatchlogs#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.cloudwatchlogs#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1UntagLogGroupCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UntagLogGroupCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1UntagLogGroupCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: UntagLogGroupCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1UntagLogGroupCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UntagLogGroupCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cloudwatchlogs#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nconst deserializeAws_json1_1DataAlreadyAcceptedExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<DataAlreadyAcceptedException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1DataAlreadyAcceptedException(body, context);\n  const contents: DataAlreadyAcceptedException = {\n    name: \"DataAlreadyAcceptedException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1InvalidOperationExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<InvalidOperationException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1InvalidOperationException(body, context);\n  const contents: InvalidOperationException = {\n    name: \"InvalidOperationException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1InvalidParameterExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<InvalidParameterException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1InvalidParameterException(body, context);\n  const contents: InvalidParameterException = {\n    name: \"InvalidParameterException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1InvalidSequenceTokenExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<InvalidSequenceTokenException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1InvalidSequenceTokenException(body, context);\n  const contents: InvalidSequenceTokenException = {\n    name: \"InvalidSequenceTokenException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1LimitExceededExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<LimitExceededException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1LimitExceededException(body, context);\n  const contents: LimitExceededException = {\n    name: \"LimitExceededException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1MalformedQueryExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<MalformedQueryException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1MalformedQueryException(body, context);\n  const contents: MalformedQueryException = {\n    name: \"MalformedQueryException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1OperationAbortedExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<OperationAbortedException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1OperationAbortedException(body, context);\n  const contents: OperationAbortedException = {\n    name: \"OperationAbortedException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1ResourceAlreadyExistsExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ResourceAlreadyExistsException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1ResourceAlreadyExistsException(body, context);\n  const contents: ResourceAlreadyExistsException = {\n    name: \"ResourceAlreadyExistsException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1ResourceNotFoundExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ResourceNotFoundException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1ResourceNotFoundException(body, context);\n  const contents: ResourceNotFoundException = {\n    name: \"ResourceNotFoundException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1ServiceUnavailableExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ServiceUnavailableException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1ServiceUnavailableException(body, context);\n  const contents: ServiceUnavailableException = {\n    name: \"ServiceUnavailableException\",\n    $fault: \"server\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1UnrecognizedClientExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<UnrecognizedClientException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1UnrecognizedClientException(body, context);\n  const contents: UnrecognizedClientException = {\n    name: \"UnrecognizedClientException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst serializeAws_json1_1AssociateKmsKeyRequest = (input: AssociateKmsKeyRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.kmsKeyId !== undefined && input.kmsKeyId !== null && { kmsKeyId: input.kmsKeyId }),\n    ...(input.logGroupName !== undefined && input.logGroupName !== null && { logGroupName: input.logGroupName }),\n  };\n};\n\nconst serializeAws_json1_1CancelExportTaskRequest = (input: CancelExportTaskRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.taskId !== undefined && input.taskId !== null && { taskId: input.taskId }),\n  };\n};\n\nconst serializeAws_json1_1CreateExportTaskRequest = (input: CreateExportTaskRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.destination !== undefined && input.destination !== null && { destination: input.destination }),\n    ...(input.destinationPrefix !== undefined &&\n      input.destinationPrefix !== null && { destinationPrefix: input.destinationPrefix }),\n    ...(input.from !== undefined && input.from !== null && { from: input.from }),\n    ...(input.logGroupName !== undefined && input.logGroupName !== null && { logGroupName: input.logGroupName }),\n    ...(input.logStreamNamePrefix !== undefined &&\n      input.logStreamNamePrefix !== null && { logStreamNamePrefix: input.logStreamNamePrefix }),\n    ...(input.taskName !== undefined && input.taskName !== null && { taskName: input.taskName }),\n    ...(input.to !== undefined && input.to !== null && { to: input.to }),\n  };\n};\n\nconst serializeAws_json1_1CreateLogGroupRequest = (input: CreateLogGroupRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.kmsKeyId !== undefined && input.kmsKeyId !== null && { kmsKeyId: input.kmsKeyId }),\n    ...(input.logGroupName !== undefined && input.logGroupName !== null && { logGroupName: input.logGroupName }),\n    ...(input.tags !== undefined && input.tags !== null && { tags: serializeAws_json1_1Tags(input.tags, context) }),\n  };\n};\n\nconst serializeAws_json1_1CreateLogStreamRequest = (input: CreateLogStreamRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.logGroupName !== undefined && input.logGroupName !== null && { logGroupName: input.logGroupName }),\n    ...(input.logStreamName !== undefined && input.logStreamName !== null && { logStreamName: input.logStreamName }),\n  };\n};\n\nconst serializeAws_json1_1DeleteDestinationRequest = (\n  input: DeleteDestinationRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.destinationName !== undefined &&\n      input.destinationName !== null && { destinationName: input.destinationName }),\n  };\n};\n\nconst serializeAws_json1_1DeleteLogGroupRequest = (input: DeleteLogGroupRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.logGroupName !== undefined && input.logGroupName !== null && { logGroupName: input.logGroupName }),\n  };\n};\n\nconst serializeAws_json1_1DeleteLogStreamRequest = (input: DeleteLogStreamRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.logGroupName !== undefined && input.logGroupName !== null && { logGroupName: input.logGroupName }),\n    ...(input.logStreamName !== undefined && input.logStreamName !== null && { logStreamName: input.logStreamName }),\n  };\n};\n\nconst serializeAws_json1_1DeleteMetricFilterRequest = (\n  input: DeleteMetricFilterRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.filterName !== undefined && input.filterName !== null && { filterName: input.filterName }),\n    ...(input.logGroupName !== undefined && input.logGroupName !== null && { logGroupName: input.logGroupName }),\n  };\n};\n\nconst serializeAws_json1_1DeleteQueryDefinitionRequest = (\n  input: DeleteQueryDefinitionRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.queryDefinitionId !== undefined &&\n      input.queryDefinitionId !== null && { queryDefinitionId: input.queryDefinitionId }),\n  };\n};\n\nconst serializeAws_json1_1DeleteResourcePolicyRequest = (\n  input: DeleteResourcePolicyRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.policyName !== undefined && input.policyName !== null && { policyName: input.policyName }),\n  };\n};\n\nconst serializeAws_json1_1DeleteRetentionPolicyRequest = (\n  input: DeleteRetentionPolicyRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.logGroupName !== undefined && input.logGroupName !== null && { logGroupName: input.logGroupName }),\n  };\n};\n\nconst serializeAws_json1_1DeleteSubscriptionFilterRequest = (\n  input: DeleteSubscriptionFilterRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.filterName !== undefined && input.filterName !== null && { filterName: input.filterName }),\n    ...(input.logGroupName !== undefined && input.logGroupName !== null && { logGroupName: input.logGroupName }),\n  };\n};\n\nconst serializeAws_json1_1DescribeDestinationsRequest = (\n  input: DescribeDestinationsRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.DestinationNamePrefix !== undefined &&\n      input.DestinationNamePrefix !== null && { DestinationNamePrefix: input.DestinationNamePrefix }),\n    ...(input.limit !== undefined && input.limit !== null && { limit: input.limit }),\n    ...(input.nextToken !== undefined && input.nextToken !== null && { nextToken: input.nextToken }),\n  };\n};\n\nconst serializeAws_json1_1DescribeExportTasksRequest = (\n  input: DescribeExportTasksRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.limit !== undefined && input.limit !== null && { limit: input.limit }),\n    ...(input.nextToken !== undefined && input.nextToken !== null && { nextToken: input.nextToken }),\n    ...(input.statusCode !== undefined && input.statusCode !== null && { statusCode: input.statusCode }),\n    ...(input.taskId !== undefined && input.taskId !== null && { taskId: input.taskId }),\n  };\n};\n\nconst serializeAws_json1_1DescribeLogGroupsRequest = (\n  input: DescribeLogGroupsRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.limit !== undefined && input.limit !== null && { limit: input.limit }),\n    ...(input.logGroupNamePrefix !== undefined &&\n      input.logGroupNamePrefix !== null && { logGroupNamePrefix: input.logGroupNamePrefix }),\n    ...(input.nextToken !== undefined && input.nextToken !== null && { nextToken: input.nextToken }),\n  };\n};\n\nconst serializeAws_json1_1DescribeLogStreamsRequest = (\n  input: DescribeLogStreamsRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.descending !== undefined && input.descending !== null && { descending: input.descending }),\n    ...(input.limit !== undefined && input.limit !== null && { limit: input.limit }),\n    ...(input.logGroupName !== undefined && input.logGroupName !== null && { logGroupName: input.logGroupName }),\n    ...(input.logStreamNamePrefix !== undefined &&\n      input.logStreamNamePrefix !== null && { logStreamNamePrefix: input.logStreamNamePrefix }),\n    ...(input.nextToken !== undefined && input.nextToken !== null && { nextToken: input.nextToken }),\n    ...(input.orderBy !== undefined && input.orderBy !== null && { orderBy: input.orderBy }),\n  };\n};\n\nconst serializeAws_json1_1DescribeMetricFiltersRequest = (\n  input: DescribeMetricFiltersRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.filterNamePrefix !== undefined &&\n      input.filterNamePrefix !== null && { filterNamePrefix: input.filterNamePrefix }),\n    ...(input.limit !== undefined && input.limit !== null && { limit: input.limit }),\n    ...(input.logGroupName !== undefined && input.logGroupName !== null && { logGroupName: input.logGroupName }),\n    ...(input.metricName !== undefined && input.metricName !== null && { metricName: input.metricName }),\n    ...(input.metricNamespace !== undefined &&\n      input.metricNamespace !== null && { metricNamespace: input.metricNamespace }),\n    ...(input.nextToken !== undefined && input.nextToken !== null && { nextToken: input.nextToken }),\n  };\n};\n\nconst serializeAws_json1_1DescribeQueriesRequest = (input: DescribeQueriesRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.logGroupName !== undefined && input.logGroupName !== null && { logGroupName: input.logGroupName }),\n    ...(input.maxResults !== undefined && input.maxResults !== null && { maxResults: input.maxResults }),\n    ...(input.nextToken !== undefined && input.nextToken !== null && { nextToken: input.nextToken }),\n    ...(input.status !== undefined && input.status !== null && { status: input.status }),\n  };\n};\n\nconst serializeAws_json1_1DescribeQueryDefinitionsRequest = (\n  input: DescribeQueryDefinitionsRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.maxResults !== undefined && input.maxResults !== null && { maxResults: input.maxResults }),\n    ...(input.nextToken !== undefined && input.nextToken !== null && { nextToken: input.nextToken }),\n    ...(input.queryDefinitionNamePrefix !== undefined &&\n      input.queryDefinitionNamePrefix !== null && { queryDefinitionNamePrefix: input.queryDefinitionNamePrefix }),\n  };\n};\n\nconst serializeAws_json1_1DescribeResourcePoliciesRequest = (\n  input: DescribeResourcePoliciesRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.limit !== undefined && input.limit !== null && { limit: input.limit }),\n    ...(input.nextToken !== undefined && input.nextToken !== null && { nextToken: input.nextToken }),\n  };\n};\n\nconst serializeAws_json1_1DescribeSubscriptionFiltersRequest = (\n  input: DescribeSubscriptionFiltersRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.filterNamePrefix !== undefined &&\n      input.filterNamePrefix !== null && { filterNamePrefix: input.filterNamePrefix }),\n    ...(input.limit !== undefined && input.limit !== null && { limit: input.limit }),\n    ...(input.logGroupName !== undefined && input.logGroupName !== null && { logGroupName: input.logGroupName }),\n    ...(input.nextToken !== undefined && input.nextToken !== null && { nextToken: input.nextToken }),\n  };\n};\n\nconst serializeAws_json1_1DisassociateKmsKeyRequest = (\n  input: DisassociateKmsKeyRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.logGroupName !== undefined && input.logGroupName !== null && { logGroupName: input.logGroupName }),\n  };\n};\n\nconst serializeAws_json1_1FilterLogEventsRequest = (input: FilterLogEventsRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.endTime !== undefined && input.endTime !== null && { endTime: input.endTime }),\n    ...(input.filterPattern !== undefined && input.filterPattern !== null && { filterPattern: input.filterPattern }),\n    ...(input.interleaved !== undefined && input.interleaved !== null && { interleaved: input.interleaved }),\n    ...(input.limit !== undefined && input.limit !== null && { limit: input.limit }),\n    ...(input.logGroupName !== undefined && input.logGroupName !== null && { logGroupName: input.logGroupName }),\n    ...(input.logStreamNamePrefix !== undefined &&\n      input.logStreamNamePrefix !== null && { logStreamNamePrefix: input.logStreamNamePrefix }),\n    ...(input.logStreamNames !== undefined &&\n      input.logStreamNames !== null && {\n        logStreamNames: serializeAws_json1_1InputLogStreamNames(input.logStreamNames, context),\n      }),\n    ...(input.nextToken !== undefined && input.nextToken !== null && { nextToken: input.nextToken }),\n    ...(input.startTime !== undefined && input.startTime !== null && { startTime: input.startTime }),\n  };\n};\n\nconst serializeAws_json1_1GetLogEventsRequest = (input: GetLogEventsRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.endTime !== undefined && input.endTime !== null && { endTime: input.endTime }),\n    ...(input.limit !== undefined && input.limit !== null && { limit: input.limit }),\n    ...(input.logGroupName !== undefined && input.logGroupName !== null && { logGroupName: input.logGroupName }),\n    ...(input.logStreamName !== undefined && input.logStreamName !== null && { logStreamName: input.logStreamName }),\n    ...(input.nextToken !== undefined && input.nextToken !== null && { nextToken: input.nextToken }),\n    ...(input.startFromHead !== undefined && input.startFromHead !== null && { startFromHead: input.startFromHead }),\n    ...(input.startTime !== undefined && input.startTime !== null && { startTime: input.startTime }),\n  };\n};\n\nconst serializeAws_json1_1GetLogGroupFieldsRequest = (\n  input: GetLogGroupFieldsRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.logGroupName !== undefined && input.logGroupName !== null && { logGroupName: input.logGroupName }),\n    ...(input.time !== undefined && input.time !== null && { time: input.time }),\n  };\n};\n\nconst serializeAws_json1_1GetLogRecordRequest = (input: GetLogRecordRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.logRecordPointer !== undefined &&\n      input.logRecordPointer !== null && { logRecordPointer: input.logRecordPointer }),\n  };\n};\n\nconst serializeAws_json1_1GetQueryResultsRequest = (input: GetQueryResultsRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.queryId !== undefined && input.queryId !== null && { queryId: input.queryId }),\n  };\n};\n\nconst serializeAws_json1_1InputLogEvent = (input: InputLogEvent, context: __SerdeContext): any => {\n  return {\n    ...(input.message !== undefined && input.message !== null && { message: input.message }),\n    ...(input.timestamp !== undefined && input.timestamp !== null && { timestamp: input.timestamp }),\n  };\n};\n\nconst serializeAws_json1_1InputLogEvents = (input: InputLogEvent[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return serializeAws_json1_1InputLogEvent(entry, context);\n    });\n};\n\nconst serializeAws_json1_1InputLogStreamNames = (input: string[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst serializeAws_json1_1ListTagsLogGroupRequest = (input: ListTagsLogGroupRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.logGroupName !== undefined && input.logGroupName !== null && { logGroupName: input.logGroupName }),\n  };\n};\n\nconst serializeAws_json1_1LogGroupNames = (input: string[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst serializeAws_json1_1MetricTransformation = (input: MetricTransformation, context: __SerdeContext): any => {\n  return {\n    ...(input.defaultValue !== undefined && input.defaultValue !== null && { defaultValue: input.defaultValue }),\n    ...(input.metricName !== undefined && input.metricName !== null && { metricName: input.metricName }),\n    ...(input.metricNamespace !== undefined &&\n      input.metricNamespace !== null && { metricNamespace: input.metricNamespace }),\n    ...(input.metricValue !== undefined && input.metricValue !== null && { metricValue: input.metricValue }),\n  };\n};\n\nconst serializeAws_json1_1MetricTransformations = (input: MetricTransformation[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return serializeAws_json1_1MetricTransformation(entry, context);\n    });\n};\n\nconst serializeAws_json1_1PutDestinationPolicyRequest = (\n  input: PutDestinationPolicyRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.accessPolicy !== undefined && input.accessPolicy !== null && { accessPolicy: input.accessPolicy }),\n    ...(input.destinationName !== undefined &&\n      input.destinationName !== null && { destinationName: input.destinationName }),\n  };\n};\n\nconst serializeAws_json1_1PutDestinationRequest = (input: PutDestinationRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.destinationName !== undefined &&\n      input.destinationName !== null && { destinationName: input.destinationName }),\n    ...(input.roleArn !== undefined && input.roleArn !== null && { roleArn: input.roleArn }),\n    ...(input.targetArn !== undefined && input.targetArn !== null && { targetArn: input.targetArn }),\n  };\n};\n\nconst serializeAws_json1_1PutLogEventsRequest = (input: PutLogEventsRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.logEvents !== undefined &&\n      input.logEvents !== null && { logEvents: serializeAws_json1_1InputLogEvents(input.logEvents, context) }),\n    ...(input.logGroupName !== undefined && input.logGroupName !== null && { logGroupName: input.logGroupName }),\n    ...(input.logStreamName !== undefined && input.logStreamName !== null && { logStreamName: input.logStreamName }),\n    ...(input.sequenceToken !== undefined && input.sequenceToken !== null && { sequenceToken: input.sequenceToken }),\n  };\n};\n\nconst serializeAws_json1_1PutMetricFilterRequest = (input: PutMetricFilterRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.filterName !== undefined && input.filterName !== null && { filterName: input.filterName }),\n    ...(input.filterPattern !== undefined && input.filterPattern !== null && { filterPattern: input.filterPattern }),\n    ...(input.logGroupName !== undefined && input.logGroupName !== null && { logGroupName: input.logGroupName }),\n    ...(input.metricTransformations !== undefined &&\n      input.metricTransformations !== null && {\n        metricTransformations: serializeAws_json1_1MetricTransformations(input.metricTransformations, context),\n      }),\n  };\n};\n\nconst serializeAws_json1_1PutQueryDefinitionRequest = (\n  input: PutQueryDefinitionRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.logGroupNames !== undefined &&\n      input.logGroupNames !== null && {\n        logGroupNames: serializeAws_json1_1LogGroupNames(input.logGroupNames, context),\n      }),\n    ...(input.name !== undefined && input.name !== null && { name: input.name }),\n    ...(input.queryDefinitionId !== undefined &&\n      input.queryDefinitionId !== null && { queryDefinitionId: input.queryDefinitionId }),\n    ...(input.queryString !== undefined && input.queryString !== null && { queryString: input.queryString }),\n  };\n};\n\nconst serializeAws_json1_1PutResourcePolicyRequest = (\n  input: PutResourcePolicyRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.policyDocument !== undefined &&\n      input.policyDocument !== null && { policyDocument: input.policyDocument }),\n    ...(input.policyName !== undefined && input.policyName !== null && { policyName: input.policyName }),\n  };\n};\n\nconst serializeAws_json1_1PutRetentionPolicyRequest = (\n  input: PutRetentionPolicyRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.logGroupName !== undefined && input.logGroupName !== null && { logGroupName: input.logGroupName }),\n    ...(input.retentionInDays !== undefined &&\n      input.retentionInDays !== null && { retentionInDays: input.retentionInDays }),\n  };\n};\n\nconst serializeAws_json1_1PutSubscriptionFilterRequest = (\n  input: PutSubscriptionFilterRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.destinationArn !== undefined &&\n      input.destinationArn !== null && { destinationArn: input.destinationArn }),\n    ...(input.distribution !== undefined && input.distribution !== null && { distribution: input.distribution }),\n    ...(input.filterName !== undefined && input.filterName !== null && { filterName: input.filterName }),\n    ...(input.filterPattern !== undefined && input.filterPattern !== null && { filterPattern: input.filterPattern }),\n    ...(input.logGroupName !== undefined && input.logGroupName !== null && { logGroupName: input.logGroupName }),\n    ...(input.roleArn !== undefined && input.roleArn !== null && { roleArn: input.roleArn }),\n  };\n};\n\nconst serializeAws_json1_1StartQueryRequest = (input: StartQueryRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.endTime !== undefined && input.endTime !== null && { endTime: input.endTime }),\n    ...(input.limit !== undefined && input.limit !== null && { limit: input.limit }),\n    ...(input.logGroupName !== undefined && input.logGroupName !== null && { logGroupName: input.logGroupName }),\n    ...(input.logGroupNames !== undefined &&\n      input.logGroupNames !== null && {\n        logGroupNames: serializeAws_json1_1LogGroupNames(input.logGroupNames, context),\n      }),\n    ...(input.queryString !== undefined && input.queryString !== null && { queryString: input.queryString }),\n    ...(input.startTime !== undefined && input.startTime !== null && { startTime: input.startTime }),\n  };\n};\n\nconst serializeAws_json1_1StopQueryRequest = (input: StopQueryRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.queryId !== undefined && input.queryId !== null && { queryId: input.queryId }),\n  };\n};\n\nconst serializeAws_json1_1TagList = (input: string[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst serializeAws_json1_1TagLogGroupRequest = (input: TagLogGroupRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.logGroupName !== undefined && input.logGroupName !== null && { logGroupName: input.logGroupName }),\n    ...(input.tags !== undefined && input.tags !== null && { tags: serializeAws_json1_1Tags(input.tags, context) }),\n  };\n};\n\nconst serializeAws_json1_1Tags = (input: { [key: string]: string }, context: __SerdeContext): any => {\n  return Object.entries(input).reduce((acc: { [key: string]: string }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: value,\n    };\n  }, {});\n};\n\nconst serializeAws_json1_1TestEventMessages = (input: string[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst serializeAws_json1_1TestMetricFilterRequest = (input: TestMetricFilterRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.filterPattern !== undefined && input.filterPattern !== null && { filterPattern: input.filterPattern }),\n    ...(input.logEventMessages !== undefined &&\n      input.logEventMessages !== null && {\n        logEventMessages: serializeAws_json1_1TestEventMessages(input.logEventMessages, context),\n      }),\n  };\n};\n\nconst serializeAws_json1_1UntagLogGroupRequest = (input: UntagLogGroupRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.logGroupName !== undefined && input.logGroupName !== null && { logGroupName: input.logGroupName }),\n    ...(input.tags !== undefined && input.tags !== null && { tags: serializeAws_json1_1TagList(input.tags, context) }),\n  };\n};\n\nconst deserializeAws_json1_1CreateExportTaskResponse = (\n  output: any,\n  context: __SerdeContext\n): CreateExportTaskResponse => {\n  return {\n    taskId: output.taskId !== undefined && output.taskId !== null ? output.taskId : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1DataAlreadyAcceptedException = (\n  output: any,\n  context: __SerdeContext\n): DataAlreadyAcceptedException => {\n  return {\n    expectedSequenceToken:\n      output.expectedSequenceToken !== undefined && output.expectedSequenceToken !== null\n        ? output.expectedSequenceToken\n        : undefined,\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1DeleteQueryDefinitionResponse = (\n  output: any,\n  context: __SerdeContext\n): DeleteQueryDefinitionResponse => {\n  return {\n    success: output.success !== undefined && output.success !== null ? output.success : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1DescribeDestinationsResponse = (\n  output: any,\n  context: __SerdeContext\n): DescribeDestinationsResponse => {\n  return {\n    destinations:\n      output.destinations !== undefined && output.destinations !== null\n        ? deserializeAws_json1_1Destinations(output.destinations, context)\n        : undefined,\n    nextToken: output.nextToken !== undefined && output.nextToken !== null ? output.nextToken : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1DescribeExportTasksResponse = (\n  output: any,\n  context: __SerdeContext\n): DescribeExportTasksResponse => {\n  return {\n    exportTasks:\n      output.exportTasks !== undefined && output.exportTasks !== null\n        ? deserializeAws_json1_1ExportTasks(output.exportTasks, context)\n        : undefined,\n    nextToken: output.nextToken !== undefined && output.nextToken !== null ? output.nextToken : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1DescribeLogGroupsResponse = (\n  output: any,\n  context: __SerdeContext\n): DescribeLogGroupsResponse => {\n  return {\n    logGroups:\n      output.logGroups !== undefined && output.logGroups !== null\n        ? deserializeAws_json1_1LogGroups(output.logGroups, context)\n        : undefined,\n    nextToken: output.nextToken !== undefined && output.nextToken !== null ? output.nextToken : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1DescribeLogStreamsResponse = (\n  output: any,\n  context: __SerdeContext\n): DescribeLogStreamsResponse => {\n  return {\n    logStreams:\n      output.logStreams !== undefined && output.logStreams !== null\n        ? deserializeAws_json1_1LogStreams(output.logStreams, context)\n        : undefined,\n    nextToken: output.nextToken !== undefined && output.nextToken !== null ? output.nextToken : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1DescribeMetricFiltersResponse = (\n  output: any,\n  context: __SerdeContext\n): DescribeMetricFiltersResponse => {\n  return {\n    metricFilters:\n      output.metricFilters !== undefined && output.metricFilters !== null\n        ? deserializeAws_json1_1MetricFilters(output.metricFilters, context)\n        : undefined,\n    nextToken: output.nextToken !== undefined && output.nextToken !== null ? output.nextToken : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1DescribeQueriesResponse = (\n  output: any,\n  context: __SerdeContext\n): DescribeQueriesResponse => {\n  return {\n    nextToken: output.nextToken !== undefined && output.nextToken !== null ? output.nextToken : undefined,\n    queries:\n      output.queries !== undefined && output.queries !== null\n        ? deserializeAws_json1_1QueryInfoList(output.queries, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1DescribeQueryDefinitionsResponse = (\n  output: any,\n  context: __SerdeContext\n): DescribeQueryDefinitionsResponse => {\n  return {\n    nextToken: output.nextToken !== undefined && output.nextToken !== null ? output.nextToken : undefined,\n    queryDefinitions:\n      output.queryDefinitions !== undefined && output.queryDefinitions !== null\n        ? deserializeAws_json1_1QueryDefinitionList(output.queryDefinitions, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1DescribeResourcePoliciesResponse = (\n  output: any,\n  context: __SerdeContext\n): DescribeResourcePoliciesResponse => {\n  return {\n    nextToken: output.nextToken !== undefined && output.nextToken !== null ? output.nextToken : undefined,\n    resourcePolicies:\n      output.resourcePolicies !== undefined && output.resourcePolicies !== null\n        ? deserializeAws_json1_1ResourcePolicies(output.resourcePolicies, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1DescribeSubscriptionFiltersResponse = (\n  output: any,\n  context: __SerdeContext\n): DescribeSubscriptionFiltersResponse => {\n  return {\n    nextToken: output.nextToken !== undefined && output.nextToken !== null ? output.nextToken : undefined,\n    subscriptionFilters:\n      output.subscriptionFilters !== undefined && output.subscriptionFilters !== null\n        ? deserializeAws_json1_1SubscriptionFilters(output.subscriptionFilters, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1Destination = (output: any, context: __SerdeContext): Destination => {\n  return {\n    accessPolicy: output.accessPolicy !== undefined && output.accessPolicy !== null ? output.accessPolicy : undefined,\n    arn: output.arn !== undefined && output.arn !== null ? output.arn : undefined,\n    creationTime: output.creationTime !== undefined && output.creationTime !== null ? output.creationTime : undefined,\n    destinationName:\n      output.destinationName !== undefined && output.destinationName !== null ? output.destinationName : undefined,\n    roleArn: output.roleArn !== undefined && output.roleArn !== null ? output.roleArn : undefined,\n    targetArn: output.targetArn !== undefined && output.targetArn !== null ? output.targetArn : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1Destinations = (output: any, context: __SerdeContext): Destination[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1Destination(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1ExportTask = (output: any, context: __SerdeContext): ExportTask => {\n  return {\n    destination: output.destination !== undefined && output.destination !== null ? output.destination : undefined,\n    destinationPrefix:\n      output.destinationPrefix !== undefined && output.destinationPrefix !== null\n        ? output.destinationPrefix\n        : undefined,\n    executionInfo:\n      output.executionInfo !== undefined && output.executionInfo !== null\n        ? deserializeAws_json1_1ExportTaskExecutionInfo(output.executionInfo, context)\n        : undefined,\n    from: output.from !== undefined && output.from !== null ? output.from : undefined,\n    logGroupName: output.logGroupName !== undefined && output.logGroupName !== null ? output.logGroupName : undefined,\n    status:\n      output.status !== undefined && output.status !== null\n        ? deserializeAws_json1_1ExportTaskStatus(output.status, context)\n        : undefined,\n    taskId: output.taskId !== undefined && output.taskId !== null ? output.taskId : undefined,\n    taskName: output.taskName !== undefined && output.taskName !== null ? output.taskName : undefined,\n    to: output.to !== undefined && output.to !== null ? output.to : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ExportTaskExecutionInfo = (\n  output: any,\n  context: __SerdeContext\n): ExportTaskExecutionInfo => {\n  return {\n    completionTime:\n      output.completionTime !== undefined && output.completionTime !== null ? output.completionTime : undefined,\n    creationTime: output.creationTime !== undefined && output.creationTime !== null ? output.creationTime : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ExportTasks = (output: any, context: __SerdeContext): ExportTask[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1ExportTask(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1ExportTaskStatus = (output: any, context: __SerdeContext): ExportTaskStatus => {\n  return {\n    code: output.code !== undefined && output.code !== null ? output.code : undefined,\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ExtractedValues = (output: any, context: __SerdeContext): { [key: string]: string } => {\n  return Object.entries(output).reduce((acc: { [key: string]: string }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: value,\n    };\n  }, {});\n};\n\nconst deserializeAws_json1_1FilteredLogEvent = (output: any, context: __SerdeContext): FilteredLogEvent => {\n  return {\n    eventId: output.eventId !== undefined && output.eventId !== null ? output.eventId : undefined,\n    ingestionTime:\n      output.ingestionTime !== undefined && output.ingestionTime !== null ? output.ingestionTime : undefined,\n    logStreamName:\n      output.logStreamName !== undefined && output.logStreamName !== null ? output.logStreamName : undefined,\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    timestamp: output.timestamp !== undefined && output.timestamp !== null ? output.timestamp : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1FilteredLogEvents = (output: any, context: __SerdeContext): FilteredLogEvent[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1FilteredLogEvent(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1FilterLogEventsResponse = (\n  output: any,\n  context: __SerdeContext\n): FilterLogEventsResponse => {\n  return {\n    events:\n      output.events !== undefined && output.events !== null\n        ? deserializeAws_json1_1FilteredLogEvents(output.events, context)\n        : undefined,\n    nextToken: output.nextToken !== undefined && output.nextToken !== null ? output.nextToken : undefined,\n    searchedLogStreams:\n      output.searchedLogStreams !== undefined && output.searchedLogStreams !== null\n        ? deserializeAws_json1_1SearchedLogStreams(output.searchedLogStreams, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1GetLogEventsResponse = (output: any, context: __SerdeContext): GetLogEventsResponse => {\n  return {\n    events:\n      output.events !== undefined && output.events !== null\n        ? deserializeAws_json1_1OutputLogEvents(output.events, context)\n        : undefined,\n    nextBackwardToken:\n      output.nextBackwardToken !== undefined && output.nextBackwardToken !== null\n        ? output.nextBackwardToken\n        : undefined,\n    nextForwardToken:\n      output.nextForwardToken !== undefined && output.nextForwardToken !== null ? output.nextForwardToken : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1GetLogGroupFieldsResponse = (\n  output: any,\n  context: __SerdeContext\n): GetLogGroupFieldsResponse => {\n  return {\n    logGroupFields:\n      output.logGroupFields !== undefined && output.logGroupFields !== null\n        ? deserializeAws_json1_1LogGroupFieldList(output.logGroupFields, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1GetLogRecordResponse = (output: any, context: __SerdeContext): GetLogRecordResponse => {\n  return {\n    logRecord:\n      output.logRecord !== undefined && output.logRecord !== null\n        ? deserializeAws_json1_1LogRecord(output.logRecord, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1GetQueryResultsResponse = (\n  output: any,\n  context: __SerdeContext\n): GetQueryResultsResponse => {\n  return {\n    results:\n      output.results !== undefined && output.results !== null\n        ? deserializeAws_json1_1QueryResults(output.results, context)\n        : undefined,\n    statistics:\n      output.statistics !== undefined && output.statistics !== null\n        ? deserializeAws_json1_1QueryStatistics(output.statistics, context)\n        : undefined,\n    status: output.status !== undefined && output.status !== null ? output.status : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1InvalidOperationException = (\n  output: any,\n  context: __SerdeContext\n): InvalidOperationException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1InvalidParameterException = (\n  output: any,\n  context: __SerdeContext\n): InvalidParameterException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1InvalidSequenceTokenException = (\n  output: any,\n  context: __SerdeContext\n): InvalidSequenceTokenException => {\n  return {\n    expectedSequenceToken:\n      output.expectedSequenceToken !== undefined && output.expectedSequenceToken !== null\n        ? output.expectedSequenceToken\n        : undefined,\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1LimitExceededException = (output: any, context: __SerdeContext): LimitExceededException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ListTagsLogGroupResponse = (\n  output: any,\n  context: __SerdeContext\n): ListTagsLogGroupResponse => {\n  return {\n    tags:\n      output.tags !== undefined && output.tags !== null ? deserializeAws_json1_1Tags(output.tags, context) : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1LogGroup = (output: any, context: __SerdeContext): LogGroup => {\n  return {\n    arn: output.arn !== undefined && output.arn !== null ? output.arn : undefined,\n    creationTime: output.creationTime !== undefined && output.creationTime !== null ? output.creationTime : undefined,\n    kmsKeyId: output.kmsKeyId !== undefined && output.kmsKeyId !== null ? output.kmsKeyId : undefined,\n    logGroupName: output.logGroupName !== undefined && output.logGroupName !== null ? output.logGroupName : undefined,\n    metricFilterCount:\n      output.metricFilterCount !== undefined && output.metricFilterCount !== null\n        ? output.metricFilterCount\n        : undefined,\n    retentionInDays:\n      output.retentionInDays !== undefined && output.retentionInDays !== null ? output.retentionInDays : undefined,\n    storedBytes: output.storedBytes !== undefined && output.storedBytes !== null ? output.storedBytes : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1LogGroupField = (output: any, context: __SerdeContext): LogGroupField => {\n  return {\n    name: output.name !== undefined && output.name !== null ? output.name : undefined,\n    percent: output.percent !== undefined && output.percent !== null ? output.percent : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1LogGroupFieldList = (output: any, context: __SerdeContext): LogGroupField[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1LogGroupField(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1LogGroupNames = (output: any, context: __SerdeContext): string[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst deserializeAws_json1_1LogGroups = (output: any, context: __SerdeContext): LogGroup[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1LogGroup(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1LogRecord = (output: any, context: __SerdeContext): { [key: string]: string } => {\n  return Object.entries(output).reduce((acc: { [key: string]: string }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: value,\n    };\n  }, {});\n};\n\nconst deserializeAws_json1_1LogStream = (output: any, context: __SerdeContext): LogStream => {\n  return {\n    arn: output.arn !== undefined && output.arn !== null ? output.arn : undefined,\n    creationTime: output.creationTime !== undefined && output.creationTime !== null ? output.creationTime : undefined,\n    firstEventTimestamp:\n      output.firstEventTimestamp !== undefined && output.firstEventTimestamp !== null\n        ? output.firstEventTimestamp\n        : undefined,\n    lastEventTimestamp:\n      output.lastEventTimestamp !== undefined && output.lastEventTimestamp !== null\n        ? output.lastEventTimestamp\n        : undefined,\n    lastIngestionTime:\n      output.lastIngestionTime !== undefined && output.lastIngestionTime !== null\n        ? output.lastIngestionTime\n        : undefined,\n    logStreamName:\n      output.logStreamName !== undefined && output.logStreamName !== null ? output.logStreamName : undefined,\n    storedBytes: output.storedBytes !== undefined && output.storedBytes !== null ? output.storedBytes : undefined,\n    uploadSequenceToken:\n      output.uploadSequenceToken !== undefined && output.uploadSequenceToken !== null\n        ? output.uploadSequenceToken\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1LogStreams = (output: any, context: __SerdeContext): LogStream[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1LogStream(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1MalformedQueryException = (\n  output: any,\n  context: __SerdeContext\n): MalformedQueryException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    queryCompileError:\n      output.queryCompileError !== undefined && output.queryCompileError !== null\n        ? deserializeAws_json1_1QueryCompileError(output.queryCompileError, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1MetricFilter = (output: any, context: __SerdeContext): MetricFilter => {\n  return {\n    creationTime: output.creationTime !== undefined && output.creationTime !== null ? output.creationTime : undefined,\n    filterName: output.filterName !== undefined && output.filterName !== null ? output.filterName : undefined,\n    filterPattern:\n      output.filterPattern !== undefined && output.filterPattern !== null ? output.filterPattern : undefined,\n    logGroupName: output.logGroupName !== undefined && output.logGroupName !== null ? output.logGroupName : undefined,\n    metricTransformations:\n      output.metricTransformations !== undefined && output.metricTransformations !== null\n        ? deserializeAws_json1_1MetricTransformations(output.metricTransformations, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1MetricFilterMatches = (output: any, context: __SerdeContext): MetricFilterMatchRecord[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1MetricFilterMatchRecord(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1MetricFilterMatchRecord = (\n  output: any,\n  context: __SerdeContext\n): MetricFilterMatchRecord => {\n  return {\n    eventMessage: output.eventMessage !== undefined && output.eventMessage !== null ? output.eventMessage : undefined,\n    eventNumber: output.eventNumber !== undefined && output.eventNumber !== null ? output.eventNumber : undefined,\n    extractedValues:\n      output.extractedValues !== undefined && output.extractedValues !== null\n        ? deserializeAws_json1_1ExtractedValues(output.extractedValues, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1MetricFilters = (output: any, context: __SerdeContext): MetricFilter[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1MetricFilter(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1MetricTransformation = (output: any, context: __SerdeContext): MetricTransformation => {\n  return {\n    defaultValue: output.defaultValue !== undefined && output.defaultValue !== null ? output.defaultValue : undefined,\n    metricName: output.metricName !== undefined && output.metricName !== null ? output.metricName : undefined,\n    metricNamespace:\n      output.metricNamespace !== undefined && output.metricNamespace !== null ? output.metricNamespace : undefined,\n    metricValue: output.metricValue !== undefined && output.metricValue !== null ? output.metricValue : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1MetricTransformations = (output: any, context: __SerdeContext): MetricTransformation[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1MetricTransformation(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1OperationAbortedException = (\n  output: any,\n  context: __SerdeContext\n): OperationAbortedException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1OutputLogEvent = (output: any, context: __SerdeContext): OutputLogEvent => {\n  return {\n    ingestionTime:\n      output.ingestionTime !== undefined && output.ingestionTime !== null ? output.ingestionTime : undefined,\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    timestamp: output.timestamp !== undefined && output.timestamp !== null ? output.timestamp : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1OutputLogEvents = (output: any, context: __SerdeContext): OutputLogEvent[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1OutputLogEvent(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1PutDestinationResponse = (output: any, context: __SerdeContext): PutDestinationResponse => {\n  return {\n    destination:\n      output.destination !== undefined && output.destination !== null\n        ? deserializeAws_json1_1Destination(output.destination, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1PutLogEventsResponse = (output: any, context: __SerdeContext): PutLogEventsResponse => {\n  return {\n    nextSequenceToken:\n      output.nextSequenceToken !== undefined && output.nextSequenceToken !== null\n        ? output.nextSequenceToken\n        : undefined,\n    rejectedLogEventsInfo:\n      output.rejectedLogEventsInfo !== undefined && output.rejectedLogEventsInfo !== null\n        ? deserializeAws_json1_1RejectedLogEventsInfo(output.rejectedLogEventsInfo, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1PutQueryDefinitionResponse = (\n  output: any,\n  context: __SerdeContext\n): PutQueryDefinitionResponse => {\n  return {\n    queryDefinitionId:\n      output.queryDefinitionId !== undefined && output.queryDefinitionId !== null\n        ? output.queryDefinitionId\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1PutResourcePolicyResponse = (\n  output: any,\n  context: __SerdeContext\n): PutResourcePolicyResponse => {\n  return {\n    resourcePolicy:\n      output.resourcePolicy !== undefined && output.resourcePolicy !== null\n        ? deserializeAws_json1_1ResourcePolicy(output.resourcePolicy, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1QueryCompileError = (output: any, context: __SerdeContext): QueryCompileError => {\n  return {\n    location:\n      output.location !== undefined && output.location !== null\n        ? deserializeAws_json1_1QueryCompileErrorLocation(output.location, context)\n        : undefined,\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1QueryCompileErrorLocation = (\n  output: any,\n  context: __SerdeContext\n): QueryCompileErrorLocation => {\n  return {\n    endCharOffset:\n      output.endCharOffset !== undefined && output.endCharOffset !== null ? output.endCharOffset : undefined,\n    startCharOffset:\n      output.startCharOffset !== undefined && output.startCharOffset !== null ? output.startCharOffset : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1QueryDefinition = (output: any, context: __SerdeContext): QueryDefinition => {\n  return {\n    lastModified: output.lastModified !== undefined && output.lastModified !== null ? output.lastModified : undefined,\n    logGroupNames:\n      output.logGroupNames !== undefined && output.logGroupNames !== null\n        ? deserializeAws_json1_1LogGroupNames(output.logGroupNames, context)\n        : undefined,\n    name: output.name !== undefined && output.name !== null ? output.name : undefined,\n    queryDefinitionId:\n      output.queryDefinitionId !== undefined && output.queryDefinitionId !== null\n        ? output.queryDefinitionId\n        : undefined,\n    queryString: output.queryString !== undefined && output.queryString !== null ? output.queryString : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1QueryDefinitionList = (output: any, context: __SerdeContext): QueryDefinition[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1QueryDefinition(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1QueryInfo = (output: any, context: __SerdeContext): QueryInfo => {\n  return {\n    createTime: output.createTime !== undefined && output.createTime !== null ? output.createTime : undefined,\n    logGroupName: output.logGroupName !== undefined && output.logGroupName !== null ? output.logGroupName : undefined,\n    queryId: output.queryId !== undefined && output.queryId !== null ? output.queryId : undefined,\n    queryString: output.queryString !== undefined && output.queryString !== null ? output.queryString : undefined,\n    status: output.status !== undefined && output.status !== null ? output.status : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1QueryInfoList = (output: any, context: __SerdeContext): QueryInfo[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1QueryInfo(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1QueryResults = (output: any, context: __SerdeContext): ResultField[][] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1ResultRows(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1QueryStatistics = (output: any, context: __SerdeContext): QueryStatistics => {\n  return {\n    bytesScanned: output.bytesScanned !== undefined && output.bytesScanned !== null ? output.bytesScanned : undefined,\n    recordsMatched:\n      output.recordsMatched !== undefined && output.recordsMatched !== null ? output.recordsMatched : undefined,\n    recordsScanned:\n      output.recordsScanned !== undefined && output.recordsScanned !== null ? output.recordsScanned : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1RejectedLogEventsInfo = (output: any, context: __SerdeContext): RejectedLogEventsInfo => {\n  return {\n    expiredLogEventEndIndex:\n      output.expiredLogEventEndIndex !== undefined && output.expiredLogEventEndIndex !== null\n        ? output.expiredLogEventEndIndex\n        : undefined,\n    tooNewLogEventStartIndex:\n      output.tooNewLogEventStartIndex !== undefined && output.tooNewLogEventStartIndex !== null\n        ? output.tooNewLogEventStartIndex\n        : undefined,\n    tooOldLogEventEndIndex:\n      output.tooOldLogEventEndIndex !== undefined && output.tooOldLogEventEndIndex !== null\n        ? output.tooOldLogEventEndIndex\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ResourceAlreadyExistsException = (\n  output: any,\n  context: __SerdeContext\n): ResourceAlreadyExistsException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ResourceNotFoundException = (\n  output: any,\n  context: __SerdeContext\n): ResourceNotFoundException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ResourcePolicies = (output: any, context: __SerdeContext): ResourcePolicy[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1ResourcePolicy(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1ResourcePolicy = (output: any, context: __SerdeContext): ResourcePolicy => {\n  return {\n    lastUpdatedTime:\n      output.lastUpdatedTime !== undefined && output.lastUpdatedTime !== null ? output.lastUpdatedTime : undefined,\n    policyDocument:\n      output.policyDocument !== undefined && output.policyDocument !== null ? output.policyDocument : undefined,\n    policyName: output.policyName !== undefined && output.policyName !== null ? output.policyName : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ResultField = (output: any, context: __SerdeContext): ResultField => {\n  return {\n    field: output.field !== undefined && output.field !== null ? output.field : undefined,\n    value: output.value !== undefined && output.value !== null ? output.value : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ResultRows = (output: any, context: __SerdeContext): ResultField[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1ResultField(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1SearchedLogStream = (output: any, context: __SerdeContext): SearchedLogStream => {\n  return {\n    logStreamName:\n      output.logStreamName !== undefined && output.logStreamName !== null ? output.logStreamName : undefined,\n    searchedCompletely:\n      output.searchedCompletely !== undefined && output.searchedCompletely !== null\n        ? output.searchedCompletely\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1SearchedLogStreams = (output: any, context: __SerdeContext): SearchedLogStream[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1SearchedLogStream(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1ServiceUnavailableException = (\n  output: any,\n  context: __SerdeContext\n): ServiceUnavailableException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1StartQueryResponse = (output: any, context: __SerdeContext): StartQueryResponse => {\n  return {\n    queryId: output.queryId !== undefined && output.queryId !== null ? output.queryId : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1StopQueryResponse = (output: any, context: __SerdeContext): StopQueryResponse => {\n  return {\n    success: output.success !== undefined && output.success !== null ? output.success : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1SubscriptionFilter = (output: any, context: __SerdeContext): SubscriptionFilter => {\n  return {\n    creationTime: output.creationTime !== undefined && output.creationTime !== null ? output.creationTime : undefined,\n    destinationArn:\n      output.destinationArn !== undefined && output.destinationArn !== null ? output.destinationArn : undefined,\n    distribution: output.distribution !== undefined && output.distribution !== null ? output.distribution : undefined,\n    filterName: output.filterName !== undefined && output.filterName !== null ? output.filterName : undefined,\n    filterPattern:\n      output.filterPattern !== undefined && output.filterPattern !== null ? output.filterPattern : undefined,\n    logGroupName: output.logGroupName !== undefined && output.logGroupName !== null ? output.logGroupName : undefined,\n    roleArn: output.roleArn !== undefined && output.roleArn !== null ? output.roleArn : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1SubscriptionFilters = (output: any, context: __SerdeContext): SubscriptionFilter[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1SubscriptionFilter(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1Tags = (output: any, context: __SerdeContext): { [key: string]: string } => {\n  return Object.entries(output).reduce((acc: { [key: string]: string }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: value,\n    };\n  }, {});\n};\n\nconst deserializeAws_json1_1TestMetricFilterResponse = (\n  output: any,\n  context: __SerdeContext\n): TestMetricFilterResponse => {\n  return {\n    matches:\n      output.matches !== undefined && output.matches !== null\n        ? deserializeAws_json1_1MetricFilterMatches(output.matches, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1UnrecognizedClientException = (\n  output: any,\n  context: __SerdeContext\n): UnrecognizedClientException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeMetadata = (output: __HttpResponse): __ResponseMetadata => ({\n  httpStatusCode: output.statusCode,\n  requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"],\n  extendedRequestId: output.headers[\"x-amz-id-2\"],\n  cfId: output.headers[\"x-amz-cf-id\"],\n});\n\n// Collect low-level response body stream to Uint8Array.\nconst collectBody = (streamBody: any = new Uint8Array(), context: __SerdeContext): Promise<Uint8Array> => {\n  if (streamBody instanceof Uint8Array) {\n    return Promise.resolve(streamBody);\n  }\n  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\n\n// Encode Uint8Array data into string with utf-8.\nconst collectBodyString = (streamBody: any, context: __SerdeContext): Promise<string> =>\n  collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\n\nconst buildHttpRpcRequest = async (\n  context: __SerdeContext,\n  headers: __HeaderBag,\n  path: string,\n  resolvedHostname: string | undefined,\n  body: any\n): Promise<__HttpRequest> => {\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  const contents: any = {\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    path,\n    headers,\n  };\n  if (resolvedHostname !== undefined) {\n    contents.hostname = resolvedHostname;\n  }\n  if (body !== undefined) {\n    contents.body = body;\n  }\n  return new __HttpRequest(contents);\n};\n\nconst parseBody = (streamBody: any, context: __SerdeContext): any =>\n  collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n      return JSON.parse(encoded);\n    }\n    return {};\n  });\n\n/**\n * Load an error code for the aws.rest-json-1.1 protocol.\n */\nconst loadRestJsonErrorCode = (output: __HttpResponse, data: any): string => {\n  const findKey = (object: any, key: string) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase());\n\n  const sanitizeErrorCode = (rawValue: string): string => {\n    let cleanValue = rawValue;\n    if (cleanValue.indexOf(\":\") >= 0) {\n      cleanValue = cleanValue.split(\":\")[0];\n    }\n    if (cleanValue.indexOf(\"#\") >= 0) {\n      cleanValue = cleanValue.split(\"#\")[1];\n    }\n    return cleanValue;\n  };\n\n  const headerKey = findKey(output.headers, \"x-amzn-errortype\");\n  if (headerKey !== undefined) {\n    return sanitizeErrorCode(output.headers[headerKey]);\n  }\n\n  if (data.code !== undefined) {\n    return sanitizeErrorCode(data.code);\n  }\n\n  if (data[\"__type\"] !== undefined) {\n    return sanitizeErrorCode(data[\"__type\"]);\n  }\n\n  return \"\";\n};\n", "import {\n  DeserializeHandler,\n  DeserializeHandlerArguments,\n  DeserializeHandlerOutput,\n  DeserializeMiddleware,\n  HandlerExecutionContext,\n  ResponseDeserializer,\n} from \"@aws-sdk/types\";\n\nexport const deserializerMiddleware = <Input extends object, Output extends object, RuntimeUtils = any>(\n  options: RuntimeUtils,\n  deserializer: ResponseDeserializer<any, any, RuntimeUtils>\n): DeserializeMiddleware<Input, Output> => (\n  next: DeserializeHandler<Input, Output>,\n  context: HandlerExecutionContext\n): DeserializeHandler<Input, Output> => async (\n  args: DeserializeHandlerArguments<Input>\n): Promise<DeserializeHandlerOutput<Output>> => {\n  const { response } = await next(args);\n  const parsed = await deserializer(response, options);\n  return {\n    response,\n    output: parsed as Output,\n  };\n};\n", "import {\n  EndpointBearer,\n  HandlerExecutionContext,\n  RequestSerializer,\n  SerializeHandler,\n  SerializeHandlerArguments,\n  SerializeHandlerOutput,\n  SerializeMiddleware,\n} from \"@aws-sdk/types\";\n\nexport const serializerMiddleware = <Input extends object, Output extends object, RuntimeUtils extends EndpointBearer>(\n  options: RuntimeUtils,\n  serializer: RequestSerializer<any, RuntimeUtils>\n): SerializeMiddleware<Input, Output> => (\n  next: SerializeHandler<Input, Output>,\n  context: HandlerExecutionContext\n): SerializeHandler<Input, Output> => async (\n  args: SerializeHandlerArguments<Input>\n): Promise<SerializeHandlerOutput<Output>> => {\n  const request = await serializer(args.input, options);\n  return next({\n    ...args,\n    request,\n  });\n};\n", "import {\n  DeserializeHandlerOptions,\n  EndpointBearer,\n  MetadataBearer,\n  MiddlewareStack,\n  Pluggable,\n  RequestSerializer,\n  ResponseDeserializer,\n  SerializeHandlerOptions,\n} from \"@aws-sdk/types\";\n\nimport { deserializerMiddleware } from \"./deserializerMiddleware\";\nimport { serializerMiddleware } from \"./serializerMiddleware\";\n\nexport const deserializerMiddlewareOption: DeserializeHandlerOptions = {\n  name: \"deserializerMiddleware\",\n  step: \"deserialize\",\n  tags: [\"DESERIALIZER\"],\n  override: true,\n};\n\nexport const serializerMiddlewareOption: SerializeHandlerOptions = {\n  name: \"serializerMiddleware\",\n  step: \"serialize\",\n  tags: [\"SERIALIZER\"],\n  override: true,\n};\n\nexport function getSerdePlugin<\n  InputType extends object,\n  SerDeContext extends EndpointBearer,\n  OutputType extends MetadataBearer\n>(\n  config: SerDeContext,\n  serializer: RequestSerializer<any, SerDeContext>,\n  deserializer: ResponseDeserializer<OutputType, any, SerDeContext>\n): Pluggable<InputType, OutputType> {\n  return {\n    applyToStack: (commandStack: MiddlewareStack<InputType, OutputType>) => {\n      commandStack.add(deserializerMiddleware(config, deserializer), deserializerMiddlewareOption);\n      commandStack.add(serializerMiddleware(config, serializer), serializerMiddlewareOption);\n    },\n  };\n}\n", "import { CloudWatchLogsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CloudWatchLogsClient\";\nimport { AssociateKmsKeyRequest } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1AssociateKmsKeyCommand,\n  serializeAws_json1_1AssociateKmsKeyCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type AssociateKmsKeyCommandInput = AssociateKmsKeyRequest;\nexport type AssociateKmsKeyCommandOutput = __MetadataBearer;\n\n/**\n * <p>Associates the specified AWS Key Management Service (AWS KMS) customer master key (CMK) with the specified log group.</p>\n *          <p>Associating an AWS KMS CMK with a log group overrides any existing associations between the log group and a CMK.\n *       After a CMK is associated with a log group, all newly ingested data for the log group is encrypted using the CMK.\n *       This association is stored as long as the data encrypted with the CMK is still within Amazon CloudWatch Logs.\n *       This enables Amazon CloudWatch Logs to decrypt this data whenever it is requested.</p>\n *          <important>\n *             <p>CloudWatch Logs supports only symmetric CMKs. Do not use an associate an asymmetric CMK\n *         with your log group. For more information, see <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html\">Using Symmetric and Asymmetric\n *           Keys</a>.</p>\n *          </important>\n *          <p>It can take up to 5 minutes for this operation to take effect.</p>\n *          <p>If you attempt to associate a CMK with a log group but the CMK does not exist or the\n *       CMK is disabled, you receive an <code>InvalidParameterException</code> error. </p>\n */\nexport class AssociateKmsKeyCommand extends $Command<\n  AssociateKmsKeyCommandInput,\n  AssociateKmsKeyCommandOutput,\n  CloudWatchLogsClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: AssociateKmsKeyCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CloudWatchLogsClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<AssociateKmsKeyCommandInput, AssociateKmsKeyCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CloudWatchLogsClient\";\n    const commandName = \"AssociateKmsKeyCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: AssociateKmsKeyRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: (output: any) => output,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: AssociateKmsKeyCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1AssociateKmsKeyCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<AssociateKmsKeyCommandOutput> {\n    return deserializeAws_json1_1AssociateKmsKeyCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CloudWatchLogsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CloudWatchLogsClient\";\nimport { CancelExportTaskRequest } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1CancelExportTaskCommand,\n  serializeAws_json1_1CancelExportTaskCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type CancelExportTaskCommandInput = CancelExportTaskRequest;\nexport type CancelExportTaskCommandOutput = __MetadataBearer;\n\n/**\n * <p>Cancels the specified export task.</p>\n *          <p>The task must be in the <code>PENDING</code> or <code>RUNNING</code> state.</p>\n */\nexport class CancelExportTaskCommand extends $Command<\n  CancelExportTaskCommandInput,\n  CancelExportTaskCommandOutput,\n  CloudWatchLogsClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: CancelExportTaskCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CloudWatchLogsClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<CancelExportTaskCommandInput, CancelExportTaskCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CloudWatchLogsClient\";\n    const commandName = \"CancelExportTaskCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: CancelExportTaskRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: (output: any) => output,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: CancelExportTaskCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1CancelExportTaskCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<CancelExportTaskCommandOutput> {\n    return deserializeAws_json1_1CancelExportTaskCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CloudWatchLogsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CloudWatchLogsClient\";\nimport { CreateExportTaskRequest, CreateExportTaskResponse } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1CreateExportTaskCommand,\n  serializeAws_json1_1CreateExportTaskCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type CreateExportTaskCommandInput = CreateExportTaskRequest;\nexport type CreateExportTaskCommandOutput = CreateExportTaskResponse & __MetadataBearer;\n\n/**\n * <p>Creates an export task, which allows you to efficiently export data from a\n *       log group to an Amazon S3 bucket. When you perform a <code>CreateExportTask</code>\n *       operation, you must use credentials that have permission to write to the S3 bucket\n *       that you specify as the destination.</p>\n *          <p>This is an asynchronous call. If all the required information is provided, this\n *       operation initiates an export task and responds with the ID of the task. After the task has started,\n *       you can use <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_DescribeExportTasks.html\">DescribeExportTasks</a> to get the status of the export task. Each account can\n *       only have one active (<code>RUNNING</code> or <code>PENDING</code>) export task at a time.\n *       To cancel an export task, use <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_CancelExportTask.html\">CancelExportTask</a>.</p>\n *          <p>You can export logs from multiple log groups or multiple time ranges to the same S3\n *       bucket. To separate out log data for each export task, you can specify a prefix to be used as\n *       the Amazon S3 key prefix for all exported objects.</p>\n *          <p>Exporting to S3 buckets that are encrypted with AES-256 is supported. Exporting to S3 buckets\n *       encrypted with SSE-KMS is not supported. </p>\n */\nexport class CreateExportTaskCommand extends $Command<\n  CreateExportTaskCommandInput,\n  CreateExportTaskCommandOutput,\n  CloudWatchLogsClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: CreateExportTaskCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CloudWatchLogsClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<CreateExportTaskCommandInput, CreateExportTaskCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CloudWatchLogsClient\";\n    const commandName = \"CreateExportTaskCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: CreateExportTaskRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: CreateExportTaskResponse.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: CreateExportTaskCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1CreateExportTaskCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<CreateExportTaskCommandOutput> {\n    return deserializeAws_json1_1CreateExportTaskCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CloudWatchLogsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CloudWatchLogsClient\";\nimport { CreateLogGroupRequest } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1CreateLogGroupCommand,\n  serializeAws_json1_1CreateLogGroupCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type CreateLogGroupCommandInput = CreateLogGroupRequest;\nexport type CreateLogGroupCommandOutput = __MetadataBearer;\n\n/**\n * <p>Creates a log group with the specified name. You can create up to 20,000 log groups per account.</p>\n *          <p>You must use the following guidelines when naming a log group:</p>\n *          <ul>\n *             <li>\n *                <p>Log group names must be unique within a region for an AWS account.</p>\n *             </li>\n *             <li>\n *                <p>Log group names can be between 1 and 512 characters long.</p>\n *             </li>\n *             <li>\n *                <p>Log group names consist of the following characters: a-z, A-Z, 0-9, '_' (underscore), '-' (hyphen),\n *           '/' (forward slash), '.' (period), and '#' (number sign)</p>\n *             </li>\n *          </ul>\n *          <p>When you create a log group, by default the log events in the log group never expire. To set\n *     a retention policy so that events expire and are deleted after a specified time, use\n *       <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutRetentionPolicy.html\">PutRetentionPolicy</a>.</p>\n *          <p>If you associate a AWS Key Management Service (AWS KMS) customer master key (CMK) with the log group, ingested data is encrypted using the CMK.\n *       This association is stored as long as the data encrypted with the CMK is still within Amazon CloudWatch Logs.\n *       This enables Amazon CloudWatch Logs to decrypt this data whenever it is requested.</p>\n *          <p>If you attempt to associate a CMK with the log group but the CMK does not exist or the\n *       CMK is disabled, you receive an <code>InvalidParameterException</code> error. </p>\n *          <important>\n *             <p> CloudWatch Logs supports only symmetric CMKs. Do not associate an asymmetric CMK with\n *         your log group. For more information, see <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html\">Using Symmetric and Asymmetric\n *           Keys</a>.</p>\n *          </important>\n */\nexport class CreateLogGroupCommand extends $Command<\n  CreateLogGroupCommandInput,\n  CreateLogGroupCommandOutput,\n  CloudWatchLogsClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: CreateLogGroupCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CloudWatchLogsClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<CreateLogGroupCommandInput, CreateLogGroupCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CloudWatchLogsClient\";\n    const commandName = \"CreateLogGroupCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: CreateLogGroupRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: (output: any) => output,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: CreateLogGroupCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1CreateLogGroupCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<CreateLogGroupCommandOutput> {\n    return deserializeAws_json1_1CreateLogGroupCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CloudWatchLogsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CloudWatchLogsClient\";\nimport { CreateLogStreamRequest } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1CreateLogStreamCommand,\n  serializeAws_json1_1CreateLogStreamCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type CreateLogStreamCommandInput = CreateLogStreamRequest;\nexport type CreateLogStreamCommandOutput = __MetadataBearer;\n\n/**\n * <p>Creates a log stream for the specified log group. A log stream is a sequence of log events\n *       that originate from a single source, such as an application instance or a resource that is\n *       being monitored.</p>\n *          <p>There is no limit on the number of log streams that you can create for a log group. There is a limit\n *     of 50 TPS on <code>CreateLogStream</code> operations, after which transactions are throttled.</p>\n *          <p>You must use the following guidelines when naming a log stream:</p>\n *          <ul>\n *             <li>\n *                <p>Log stream names must be unique within the log group.</p>\n *             </li>\n *             <li>\n *                <p>Log stream names can be between 1 and 512 characters long.</p>\n *             </li>\n *             <li>\n *                <p>The ':' (colon) and '*' (asterisk) characters are not allowed.</p>\n *             </li>\n *          </ul>\n */\nexport class CreateLogStreamCommand extends $Command<\n  CreateLogStreamCommandInput,\n  CreateLogStreamCommandOutput,\n  CloudWatchLogsClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: CreateLogStreamCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CloudWatchLogsClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<CreateLogStreamCommandInput, CreateLogStreamCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CloudWatchLogsClient\";\n    const commandName = \"CreateLogStreamCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: CreateLogStreamRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: (output: any) => output,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: CreateLogStreamCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1CreateLogStreamCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<CreateLogStreamCommandOutput> {\n    return deserializeAws_json1_1CreateLogStreamCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CloudWatchLogsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CloudWatchLogsClient\";\nimport { DeleteDestinationRequest } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1DeleteDestinationCommand,\n  serializeAws_json1_1DeleteDestinationCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type DeleteDestinationCommandInput = DeleteDestinationRequest;\nexport type DeleteDestinationCommandOutput = __MetadataBearer;\n\n/**\n * <p>Deletes the specified destination, and eventually disables all the\n *       subscription filters that publish to it. This operation does not delete the\n *       physical resource encapsulated by the destination.</p>\n */\nexport class DeleteDestinationCommand extends $Command<\n  DeleteDestinationCommandInput,\n  DeleteDestinationCommandOutput,\n  CloudWatchLogsClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: DeleteDestinationCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CloudWatchLogsClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<DeleteDestinationCommandInput, DeleteDestinationCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CloudWatchLogsClient\";\n    const commandName = \"DeleteDestinationCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: DeleteDestinationRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: (output: any) => output,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: DeleteDestinationCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1DeleteDestinationCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<DeleteDestinationCommandOutput> {\n    return deserializeAws_json1_1DeleteDestinationCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CloudWatchLogsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CloudWatchLogsClient\";\nimport { DeleteLogGroupRequest } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1DeleteLogGroupCommand,\n  serializeAws_json1_1DeleteLogGroupCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type DeleteLogGroupCommandInput = DeleteLogGroupRequest;\nexport type DeleteLogGroupCommandOutput = __MetadataBearer;\n\n/**\n * <p>Deletes the specified log group and permanently deletes all the archived\n *       log events associated with the log group.</p>\n */\nexport class DeleteLogGroupCommand extends $Command<\n  DeleteLogGroupCommandInput,\n  DeleteLogGroupCommandOutput,\n  CloudWatchLogsClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: DeleteLogGroupCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CloudWatchLogsClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<DeleteLogGroupCommandInput, DeleteLogGroupCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CloudWatchLogsClient\";\n    const commandName = \"DeleteLogGroupCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: DeleteLogGroupRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: (output: any) => output,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: DeleteLogGroupCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1DeleteLogGroupCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<DeleteLogGroupCommandOutput> {\n    return deserializeAws_json1_1DeleteLogGroupCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CloudWatchLogsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CloudWatchLogsClient\";\nimport { DeleteLogStreamRequest } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1DeleteLogStreamCommand,\n  serializeAws_json1_1DeleteLogStreamCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type DeleteLogStreamCommandInput = DeleteLogStreamRequest;\nexport type DeleteLogStreamCommandOutput = __MetadataBearer;\n\n/**\n * <p>Deletes the specified log stream and permanently deletes all the archived log events associated\n *       with the log stream.</p>\n */\nexport class DeleteLogStreamCommand extends $Command<\n  DeleteLogStreamCommandInput,\n  DeleteLogStreamCommandOutput,\n  CloudWatchLogsClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: DeleteLogStreamCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CloudWatchLogsClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<DeleteLogStreamCommandInput, DeleteLogStreamCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CloudWatchLogsClient\";\n    const commandName = \"DeleteLogStreamCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: DeleteLogStreamRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: (output: any) => output,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: DeleteLogStreamCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1DeleteLogStreamCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<DeleteLogStreamCommandOutput> {\n    return deserializeAws_json1_1DeleteLogStreamCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CloudWatchLogsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CloudWatchLogsClient\";\nimport { DeleteMetricFilterRequest } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1DeleteMetricFilterCommand,\n  serializeAws_json1_1DeleteMetricFilterCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type DeleteMetricFilterCommandInput = DeleteMetricFilterRequest;\nexport type DeleteMetricFilterCommandOutput = __MetadataBearer;\n\n/**\n * <p>Deletes the specified metric filter.</p>\n */\nexport class DeleteMetricFilterCommand extends $Command<\n  DeleteMetricFilterCommandInput,\n  DeleteMetricFilterCommandOutput,\n  CloudWatchLogsClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: DeleteMetricFilterCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CloudWatchLogsClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<DeleteMetricFilterCommandInput, DeleteMetricFilterCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CloudWatchLogsClient\";\n    const commandName = \"DeleteMetricFilterCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: DeleteMetricFilterRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: (output: any) => output,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: DeleteMetricFilterCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1DeleteMetricFilterCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<DeleteMetricFilterCommandOutput> {\n    return deserializeAws_json1_1DeleteMetricFilterCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CloudWatchLogsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CloudWatchLogsClient\";\nimport { DeleteQueryDefinitionRequest, DeleteQueryDefinitionResponse } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1DeleteQueryDefinitionCommand,\n  serializeAws_json1_1DeleteQueryDefinitionCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type DeleteQueryDefinitionCommandInput = DeleteQueryDefinitionRequest;\nexport type DeleteQueryDefinitionCommandOutput = DeleteQueryDefinitionResponse & __MetadataBearer;\n\n/**\n * <p>Deletes a saved CloudWatch Logs Insights query definition.\n *       A query definition contains details about a saved CloudWatch Logs Insights query.</p>\n *          <p>Each <code>DeleteQueryDefinition</code> operation can delete one query definition.</p>\n *          <p>You must have the <code>logs:DeleteQueryDefinition</code> permission to be able to perform\n *       this operation.</p>\n */\nexport class DeleteQueryDefinitionCommand extends $Command<\n  DeleteQueryDefinitionCommandInput,\n  DeleteQueryDefinitionCommandOutput,\n  CloudWatchLogsClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: DeleteQueryDefinitionCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CloudWatchLogsClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<DeleteQueryDefinitionCommandInput, DeleteQueryDefinitionCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CloudWatchLogsClient\";\n    const commandName = \"DeleteQueryDefinitionCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: DeleteQueryDefinitionRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: DeleteQueryDefinitionResponse.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: DeleteQueryDefinitionCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1DeleteQueryDefinitionCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<DeleteQueryDefinitionCommandOutput> {\n    return deserializeAws_json1_1DeleteQueryDefinitionCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CloudWatchLogsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CloudWatchLogsClient\";\nimport { DeleteResourcePolicyRequest } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1DeleteResourcePolicyCommand,\n  serializeAws_json1_1DeleteResourcePolicyCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type DeleteResourcePolicyCommandInput = DeleteResourcePolicyRequest;\nexport type DeleteResourcePolicyCommandOutput = __MetadataBearer;\n\n/**\n * <p>Deletes a resource policy from this account. This revokes\n *     the access of the identities in that policy to put log events to this account.</p>\n */\nexport class DeleteResourcePolicyCommand extends $Command<\n  DeleteResourcePolicyCommandInput,\n  DeleteResourcePolicyCommandOutput,\n  CloudWatchLogsClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: DeleteResourcePolicyCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CloudWatchLogsClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<DeleteResourcePolicyCommandInput, DeleteResourcePolicyCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CloudWatchLogsClient\";\n    const commandName = \"DeleteResourcePolicyCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: DeleteResourcePolicyRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: (output: any) => output,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: DeleteResourcePolicyCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1DeleteResourcePolicyCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<DeleteResourcePolicyCommandOutput> {\n    return deserializeAws_json1_1DeleteResourcePolicyCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CloudWatchLogsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CloudWatchLogsClient\";\nimport { DeleteRetentionPolicyRequest } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1DeleteRetentionPolicyCommand,\n  serializeAws_json1_1DeleteRetentionPolicyCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type DeleteRetentionPolicyCommandInput = DeleteRetentionPolicyRequest;\nexport type DeleteRetentionPolicyCommandOutput = __MetadataBearer;\n\n/**\n * <p>Deletes the specified retention policy.</p>\n *          <p>Log events do not expire if they belong to log groups without a retention policy.</p>\n */\nexport class DeleteRetentionPolicyCommand extends $Command<\n  DeleteRetentionPolicyCommandInput,\n  DeleteRetentionPolicyCommandOutput,\n  CloudWatchLogsClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: DeleteRetentionPolicyCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CloudWatchLogsClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<DeleteRetentionPolicyCommandInput, DeleteRetentionPolicyCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CloudWatchLogsClient\";\n    const commandName = \"DeleteRetentionPolicyCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: DeleteRetentionPolicyRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: (output: any) => output,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: DeleteRetentionPolicyCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1DeleteRetentionPolicyCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<DeleteRetentionPolicyCommandOutput> {\n    return deserializeAws_json1_1DeleteRetentionPolicyCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CloudWatchLogsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CloudWatchLogsClient\";\nimport { DeleteSubscriptionFilterRequest } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1DeleteSubscriptionFilterCommand,\n  serializeAws_json1_1DeleteSubscriptionFilterCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type DeleteSubscriptionFilterCommandInput = DeleteSubscriptionFilterRequest;\nexport type DeleteSubscriptionFilterCommandOutput = __MetadataBearer;\n\n/**\n * <p>Deletes the specified subscription filter.</p>\n */\nexport class DeleteSubscriptionFilterCommand extends $Command<\n  DeleteSubscriptionFilterCommandInput,\n  DeleteSubscriptionFilterCommandOutput,\n  CloudWatchLogsClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: DeleteSubscriptionFilterCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CloudWatchLogsClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<DeleteSubscriptionFilterCommandInput, DeleteSubscriptionFilterCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CloudWatchLogsClient\";\n    const commandName = \"DeleteSubscriptionFilterCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: DeleteSubscriptionFilterRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: (output: any) => output,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: DeleteSubscriptionFilterCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1DeleteSubscriptionFilterCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<DeleteSubscriptionFilterCommandOutput> {\n    return deserializeAws_json1_1DeleteSubscriptionFilterCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CloudWatchLogsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CloudWatchLogsClient\";\nimport { DescribeDestinationsRequest, DescribeDestinationsResponse } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1DescribeDestinationsCommand,\n  serializeAws_json1_1DescribeDestinationsCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type DescribeDestinationsCommandInput = DescribeDestinationsRequest;\nexport type DescribeDestinationsCommandOutput = DescribeDestinationsResponse & __MetadataBearer;\n\n/**\n * <p>Lists all your destinations. The results are ASCII-sorted by destination name.</p>\n */\nexport class DescribeDestinationsCommand extends $Command<\n  DescribeDestinationsCommandInput,\n  DescribeDestinationsCommandOutput,\n  CloudWatchLogsClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: DescribeDestinationsCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CloudWatchLogsClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<DescribeDestinationsCommandInput, DescribeDestinationsCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CloudWatchLogsClient\";\n    const commandName = \"DescribeDestinationsCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: DescribeDestinationsRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: DescribeDestinationsResponse.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: DescribeDestinationsCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1DescribeDestinationsCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<DescribeDestinationsCommandOutput> {\n    return deserializeAws_json1_1DescribeDestinationsCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CloudWatchLogsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CloudWatchLogsClient\";\nimport { DescribeExportTasksRequest, DescribeExportTasksResponse } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1DescribeExportTasksCommand,\n  serializeAws_json1_1DescribeExportTasksCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type DescribeExportTasksCommandInput = DescribeExportTasksRequest;\nexport type DescribeExportTasksCommandOutput = DescribeExportTasksResponse & __MetadataBearer;\n\n/**\n * <p>Lists the specified export tasks. You can list all your export tasks or filter\n *       the results based on task ID or task status.</p>\n */\nexport class DescribeExportTasksCommand extends $Command<\n  DescribeExportTasksCommandInput,\n  DescribeExportTasksCommandOutput,\n  CloudWatchLogsClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: DescribeExportTasksCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CloudWatchLogsClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<DescribeExportTasksCommandInput, DescribeExportTasksCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CloudWatchLogsClient\";\n    const commandName = \"DescribeExportTasksCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: DescribeExportTasksRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: DescribeExportTasksResponse.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: DescribeExportTasksCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1DescribeExportTasksCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<DescribeExportTasksCommandOutput> {\n    return deserializeAws_json1_1DescribeExportTasksCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CloudWatchLogsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CloudWatchLogsClient\";\nimport { DescribeLogGroupsRequest, DescribeLogGroupsResponse } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1DescribeLogGroupsCommand,\n  serializeAws_json1_1DescribeLogGroupsCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type DescribeLogGroupsCommandInput = DescribeLogGroupsRequest;\nexport type DescribeLogGroupsCommandOutput = DescribeLogGroupsResponse & __MetadataBearer;\n\n/**\n * <p>Lists the specified log groups. You can list all your log groups or filter the results by prefix.\n *       The results are ASCII-sorted by log group name.</p>\n */\nexport class DescribeLogGroupsCommand extends $Command<\n  DescribeLogGroupsCommandInput,\n  DescribeLogGroupsCommandOutput,\n  CloudWatchLogsClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: DescribeLogGroupsCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CloudWatchLogsClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<DescribeLogGroupsCommandInput, DescribeLogGroupsCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CloudWatchLogsClient\";\n    const commandName = \"DescribeLogGroupsCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: DescribeLogGroupsRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: DescribeLogGroupsResponse.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: DescribeLogGroupsCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1DescribeLogGroupsCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<DescribeLogGroupsCommandOutput> {\n    return deserializeAws_json1_1DescribeLogGroupsCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CloudWatchLogsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CloudWatchLogsClient\";\nimport { DescribeLogStreamsRequest, DescribeLogStreamsResponse } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1DescribeLogStreamsCommand,\n  serializeAws_json1_1DescribeLogStreamsCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type DescribeLogStreamsCommandInput = DescribeLogStreamsRequest;\nexport type DescribeLogStreamsCommandOutput = DescribeLogStreamsResponse & __MetadataBearer;\n\n/**\n * <p>Lists the log streams for the specified log group.\n *       You can list all the log streams or filter the results by prefix.\n *       You can also control how the results are ordered.</p>\n *          <p>This operation has a limit of five transactions per second, after which transactions are throttled.</p>\n */\nexport class DescribeLogStreamsCommand extends $Command<\n  DescribeLogStreamsCommandInput,\n  DescribeLogStreamsCommandOutput,\n  CloudWatchLogsClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: DescribeLogStreamsCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CloudWatchLogsClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<DescribeLogStreamsCommandInput, DescribeLogStreamsCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CloudWatchLogsClient\";\n    const commandName = \"DescribeLogStreamsCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: DescribeLogStreamsRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: DescribeLogStreamsResponse.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: DescribeLogStreamsCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1DescribeLogStreamsCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<DescribeLogStreamsCommandOutput> {\n    return deserializeAws_json1_1DescribeLogStreamsCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CloudWatchLogsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CloudWatchLogsClient\";\nimport { DescribeMetricFiltersRequest, DescribeMetricFiltersResponse } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1DescribeMetricFiltersCommand,\n  serializeAws_json1_1DescribeMetricFiltersCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type DescribeMetricFiltersCommandInput = DescribeMetricFiltersRequest;\nexport type DescribeMetricFiltersCommandOutput = DescribeMetricFiltersResponse & __MetadataBearer;\n\n/**\n * <p>Lists the specified metric filters. You can list all of the metric filters or filter\n *       the results by log name, prefix, metric name, or metric namespace. The results are\n *       ASCII-sorted by filter name.</p>\n */\nexport class DescribeMetricFiltersCommand extends $Command<\n  DescribeMetricFiltersCommandInput,\n  DescribeMetricFiltersCommandOutput,\n  CloudWatchLogsClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: DescribeMetricFiltersCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CloudWatchLogsClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<DescribeMetricFiltersCommandInput, DescribeMetricFiltersCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CloudWatchLogsClient\";\n    const commandName = \"DescribeMetricFiltersCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: DescribeMetricFiltersRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: DescribeMetricFiltersResponse.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: DescribeMetricFiltersCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1DescribeMetricFiltersCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<DescribeMetricFiltersCommandOutput> {\n    return deserializeAws_json1_1DescribeMetricFiltersCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CloudWatchLogsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CloudWatchLogsClient\";\nimport { DescribeQueriesRequest, DescribeQueriesResponse } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1DescribeQueriesCommand,\n  serializeAws_json1_1DescribeQueriesCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type DescribeQueriesCommandInput = DescribeQueriesRequest;\nexport type DescribeQueriesCommandOutput = DescribeQueriesResponse & __MetadataBearer;\n\n/**\n * <p>Returns a list of CloudWatch Logs Insights queries that are scheduled, executing, or have\n *       been executed recently in this account. You can request all queries or limit it to queries of\n *       a specific log group or queries with a certain status.</p>\n */\nexport class DescribeQueriesCommand extends $Command<\n  DescribeQueriesCommandInput,\n  DescribeQueriesCommandOutput,\n  CloudWatchLogsClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: DescribeQueriesCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CloudWatchLogsClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<DescribeQueriesCommandInput, DescribeQueriesCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CloudWatchLogsClient\";\n    const commandName = \"DescribeQueriesCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: DescribeQueriesRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: DescribeQueriesResponse.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: DescribeQueriesCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1DescribeQueriesCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<DescribeQueriesCommandOutput> {\n    return deserializeAws_json1_1DescribeQueriesCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CloudWatchLogsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CloudWatchLogsClient\";\nimport { DescribeQueryDefinitionsRequest, DescribeQueryDefinitionsResponse } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1DescribeQueryDefinitionsCommand,\n  serializeAws_json1_1DescribeQueryDefinitionsCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type DescribeQueryDefinitionsCommandInput = DescribeQueryDefinitionsRequest;\nexport type DescribeQueryDefinitionsCommandOutput = DescribeQueryDefinitionsResponse & __MetadataBearer;\n\n/**\n * <p>This operation returns a paginated list of your saved CloudWatch Logs Insights query definitions.</p>\n *          <p>You can use the <code>queryDefinitionNamePrefix</code> parameter to limit the results to only the\n *       query definitions that have names that start with a certain string.</p>\n */\nexport class DescribeQueryDefinitionsCommand extends $Command<\n  DescribeQueryDefinitionsCommandInput,\n  DescribeQueryDefinitionsCommandOutput,\n  CloudWatchLogsClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: DescribeQueryDefinitionsCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CloudWatchLogsClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<DescribeQueryDefinitionsCommandInput, DescribeQueryDefinitionsCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CloudWatchLogsClient\";\n    const commandName = \"DescribeQueryDefinitionsCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: DescribeQueryDefinitionsRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: DescribeQueryDefinitionsResponse.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: DescribeQueryDefinitionsCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1DescribeQueryDefinitionsCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<DescribeQueryDefinitionsCommandOutput> {\n    return deserializeAws_json1_1DescribeQueryDefinitionsCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CloudWatchLogsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CloudWatchLogsClient\";\nimport { DescribeResourcePoliciesRequest, DescribeResourcePoliciesResponse } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1DescribeResourcePoliciesCommand,\n  serializeAws_json1_1DescribeResourcePoliciesCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type DescribeResourcePoliciesCommandInput = DescribeResourcePoliciesRequest;\nexport type DescribeResourcePoliciesCommandOutput = DescribeResourcePoliciesResponse & __MetadataBearer;\n\n/**\n * <p>Lists the resource policies in this account.</p>\n */\nexport class DescribeResourcePoliciesCommand extends $Command<\n  DescribeResourcePoliciesCommandInput,\n  DescribeResourcePoliciesCommandOutput,\n  CloudWatchLogsClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: DescribeResourcePoliciesCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CloudWatchLogsClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<DescribeResourcePoliciesCommandInput, DescribeResourcePoliciesCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CloudWatchLogsClient\";\n    const commandName = \"DescribeResourcePoliciesCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: DescribeResourcePoliciesRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: DescribeResourcePoliciesResponse.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: DescribeResourcePoliciesCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1DescribeResourcePoliciesCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<DescribeResourcePoliciesCommandOutput> {\n    return deserializeAws_json1_1DescribeResourcePoliciesCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CloudWatchLogsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CloudWatchLogsClient\";\nimport { DescribeSubscriptionFiltersRequest, DescribeSubscriptionFiltersResponse } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1DescribeSubscriptionFiltersCommand,\n  serializeAws_json1_1DescribeSubscriptionFiltersCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type DescribeSubscriptionFiltersCommandInput = DescribeSubscriptionFiltersRequest;\nexport type DescribeSubscriptionFiltersCommandOutput = DescribeSubscriptionFiltersResponse & __MetadataBearer;\n\n/**\n * <p>Lists the subscription filters for the specified log group. You can list all the subscription filters or filter the results by prefix.\n *       The results are ASCII-sorted by filter name.</p>\n */\nexport class DescribeSubscriptionFiltersCommand extends $Command<\n  DescribeSubscriptionFiltersCommandInput,\n  DescribeSubscriptionFiltersCommandOutput,\n  CloudWatchLogsClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: DescribeSubscriptionFiltersCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CloudWatchLogsClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<DescribeSubscriptionFiltersCommandInput, DescribeSubscriptionFiltersCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CloudWatchLogsClient\";\n    const commandName = \"DescribeSubscriptionFiltersCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: DescribeSubscriptionFiltersRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: DescribeSubscriptionFiltersResponse.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: DescribeSubscriptionFiltersCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1DescribeSubscriptionFiltersCommand(input, context);\n  }\n\n  private deserialize(\n    output: __HttpResponse,\n    context: __SerdeContext\n  ): Promise<DescribeSubscriptionFiltersCommandOutput> {\n    return deserializeAws_json1_1DescribeSubscriptionFiltersCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CloudWatchLogsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CloudWatchLogsClient\";\nimport { DisassociateKmsKeyRequest } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1DisassociateKmsKeyCommand,\n  serializeAws_json1_1DisassociateKmsKeyCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type DisassociateKmsKeyCommandInput = DisassociateKmsKeyRequest;\nexport type DisassociateKmsKeyCommandOutput = __MetadataBearer;\n\n/**\n * <p>Disassociates the associated AWS Key Management Service (AWS KMS) customer master key (CMK) from the specified log group.</p>\n *          <p>After the AWS KMS CMK is disassociated from the log group, AWS CloudWatch Logs stops encrypting newly ingested data for the log group.\n *       All previously ingested data remains encrypted, and AWS CloudWatch Logs requires permissions for the CMK whenever the encrypted data is requested.</p>\n *          <p>Note that it can take up to 5 minutes for this operation to take effect.</p>\n */\nexport class DisassociateKmsKeyCommand extends $Command<\n  DisassociateKmsKeyCommandInput,\n  DisassociateKmsKeyCommandOutput,\n  CloudWatchLogsClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: DisassociateKmsKeyCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CloudWatchLogsClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<DisassociateKmsKeyCommandInput, DisassociateKmsKeyCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CloudWatchLogsClient\";\n    const commandName = \"DisassociateKmsKeyCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: DisassociateKmsKeyRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: (output: any) => output,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: DisassociateKmsKeyCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1DisassociateKmsKeyCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<DisassociateKmsKeyCommandOutput> {\n    return deserializeAws_json1_1DisassociateKmsKeyCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CloudWatchLogsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CloudWatchLogsClient\";\nimport { FilterLogEventsRequest, FilterLogEventsResponse } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1FilterLogEventsCommand,\n  serializeAws_json1_1FilterLogEventsCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type FilterLogEventsCommandInput = FilterLogEventsRequest;\nexport type FilterLogEventsCommandOutput = FilterLogEventsResponse & __MetadataBearer;\n\n/**\n * <p>Lists log events from the specified log group. You can list all the log events or filter the results\n *       using a filter pattern, a time range, and the name of the log stream.</p>\n *          <p>By default, this operation returns as many log events as can fit in 1 MB (up to 10,000\n *       log events) or all the events found within the time range that you specify. If the results\n *       include a token, then there are more log events available, and you can get additional results\n *       by specifying the token in a subsequent call. This operation can return empty results\n *     while there are more log events available through the token.</p>\n *          <p>The returned log events are sorted by event timestamp, the timestamp when the event was ingested\n *     by CloudWatch Logs, and the ID of the <code>PutLogEvents</code> request.</p>\n */\nexport class FilterLogEventsCommand extends $Command<\n  FilterLogEventsCommandInput,\n  FilterLogEventsCommandOutput,\n  CloudWatchLogsClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: FilterLogEventsCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CloudWatchLogsClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<FilterLogEventsCommandInput, FilterLogEventsCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CloudWatchLogsClient\";\n    const commandName = \"FilterLogEventsCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: FilterLogEventsRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: FilterLogEventsResponse.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: FilterLogEventsCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1FilterLogEventsCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<FilterLogEventsCommandOutput> {\n    return deserializeAws_json1_1FilterLogEventsCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CloudWatchLogsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CloudWatchLogsClient\";\nimport { GetLogEventsRequest, GetLogEventsResponse } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1GetLogEventsCommand,\n  serializeAws_json1_1GetLogEventsCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type GetLogEventsCommandInput = GetLogEventsRequest;\nexport type GetLogEventsCommandOutput = GetLogEventsResponse & __MetadataBearer;\n\n/**\n * <p>Lists log events from the specified log stream. You can list all of the log events or\n *       filter using a time range.</p>\n *\n *          <p>By default, this operation returns as many log events as can fit in a response size of 1MB (up to 10,000 log events).\n *       You can get additional log events by specifying one of the tokens in a subsequent call.\n *       This operation can return empty results while there are more log events available through the token.</p>\n */\nexport class GetLogEventsCommand extends $Command<\n  GetLogEventsCommandInput,\n  GetLogEventsCommandOutput,\n  CloudWatchLogsClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: GetLogEventsCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CloudWatchLogsClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<GetLogEventsCommandInput, GetLogEventsCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CloudWatchLogsClient\";\n    const commandName = \"GetLogEventsCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: GetLogEventsRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: GetLogEventsResponse.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: GetLogEventsCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1GetLogEventsCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<GetLogEventsCommandOutput> {\n    return deserializeAws_json1_1GetLogEventsCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CloudWatchLogsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CloudWatchLogsClient\";\nimport { GetLogGroupFieldsRequest, GetLogGroupFieldsResponse } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1GetLogGroupFieldsCommand,\n  serializeAws_json1_1GetLogGroupFieldsCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type GetLogGroupFieldsCommandInput = GetLogGroupFieldsRequest;\nexport type GetLogGroupFieldsCommandOutput = GetLogGroupFieldsResponse & __MetadataBearer;\n\n/**\n * <p>Returns a list of the fields that are included in log events in the specified log group, along with the percentage of log events\n *     that contain each field. The search is limited to a time period that you specify.</p>\n *          <p>In the results, fields that start with @ are fields generated by CloudWatch Logs. For\n *       example, <code>@timestamp</code> is the timestamp of each log event. For more information about the fields that are\n *       generated by CloudWatch logs, see\n *       <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CWL_AnalyzeLogData-discoverable-fields.html\">Supported Logs and Discovered Fields</a>.</p>\n *          <p>The response results are sorted by the frequency percentage, starting\n *     with the highest percentage.</p>\n */\nexport class GetLogGroupFieldsCommand extends $Command<\n  GetLogGroupFieldsCommandInput,\n  GetLogGroupFieldsCommandOutput,\n  CloudWatchLogsClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: GetLogGroupFieldsCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CloudWatchLogsClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<GetLogGroupFieldsCommandInput, GetLogGroupFieldsCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CloudWatchLogsClient\";\n    const commandName = \"GetLogGroupFieldsCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: GetLogGroupFieldsRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: GetLogGroupFieldsResponse.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: GetLogGroupFieldsCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1GetLogGroupFieldsCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<GetLogGroupFieldsCommandOutput> {\n    return deserializeAws_json1_1GetLogGroupFieldsCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CloudWatchLogsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CloudWatchLogsClient\";\nimport { GetLogRecordRequest, GetLogRecordResponse } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1GetLogRecordCommand,\n  serializeAws_json1_1GetLogRecordCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type GetLogRecordCommandInput = GetLogRecordRequest;\nexport type GetLogRecordCommandOutput = GetLogRecordResponse & __MetadataBearer;\n\n/**\n * <p>Retrieves all of the fields and values of a single log event. All fields are retrieved,\n *       even if the original query that produced the <code>logRecordPointer</code> retrieved only a\n *       subset of fields. Fields are returned as field name/field value pairs.</p>\n *          <p>The full unparsed log event is returned within <code>@message</code>.</p>\n */\nexport class GetLogRecordCommand extends $Command<\n  GetLogRecordCommandInput,\n  GetLogRecordCommandOutput,\n  CloudWatchLogsClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: GetLogRecordCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CloudWatchLogsClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<GetLogRecordCommandInput, GetLogRecordCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CloudWatchLogsClient\";\n    const commandName = \"GetLogRecordCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: GetLogRecordRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: GetLogRecordResponse.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: GetLogRecordCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1GetLogRecordCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<GetLogRecordCommandOutput> {\n    return deserializeAws_json1_1GetLogRecordCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CloudWatchLogsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CloudWatchLogsClient\";\nimport { GetQueryResultsRequest, GetQueryResultsResponse } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1GetQueryResultsCommand,\n  serializeAws_json1_1GetQueryResultsCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type GetQueryResultsCommandInput = GetQueryResultsRequest;\nexport type GetQueryResultsCommandOutput = GetQueryResultsResponse & __MetadataBearer;\n\n/**\n * <p>Returns the results from the specified query.</p>\n *          <p>Only the fields requested in the query are returned, along with a <code>@ptr</code>\n *       field, which is the identifier for the log record. You can use the value of <code>@ptr</code>\n *       in a <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_GetLogRecord.html\">GetLogRecord</a>\n *       operation to get the full log record.</p>\n *          <p>\n *             <code>GetQueryResults</code>\n *       does not start a query execution. To run a query, use <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_StartQuery.html\">StartQuery</a>.</p>\n *          <p>If the value of the <code>Status</code> field in the output is <code>Running</code>, this operation\n *       returns only partial results. If you see a value of <code>Scheduled</code> or <code>Running</code> for the status,\n *       you can retry the operation later to see the final results. </p>\n */\nexport class GetQueryResultsCommand extends $Command<\n  GetQueryResultsCommandInput,\n  GetQueryResultsCommandOutput,\n  CloudWatchLogsClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: GetQueryResultsCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CloudWatchLogsClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<GetQueryResultsCommandInput, GetQueryResultsCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CloudWatchLogsClient\";\n    const commandName = \"GetQueryResultsCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: GetQueryResultsRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: GetQueryResultsResponse.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: GetQueryResultsCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1GetQueryResultsCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<GetQueryResultsCommandOutput> {\n    return deserializeAws_json1_1GetQueryResultsCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CloudWatchLogsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CloudWatchLogsClient\";\nimport { ListTagsLogGroupRequest, ListTagsLogGroupResponse } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1ListTagsLogGroupCommand,\n  serializeAws_json1_1ListTagsLogGroupCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type ListTagsLogGroupCommandInput = ListTagsLogGroupRequest;\nexport type ListTagsLogGroupCommandOutput = ListTagsLogGroupResponse & __MetadataBearer;\n\n/**\n * <p>Lists the tags for the specified log group.</p>\n */\nexport class ListTagsLogGroupCommand extends $Command<\n  ListTagsLogGroupCommandInput,\n  ListTagsLogGroupCommandOutput,\n  CloudWatchLogsClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: ListTagsLogGroupCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CloudWatchLogsClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<ListTagsLogGroupCommandInput, ListTagsLogGroupCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CloudWatchLogsClient\";\n    const commandName = \"ListTagsLogGroupCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: ListTagsLogGroupRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: ListTagsLogGroupResponse.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: ListTagsLogGroupCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1ListTagsLogGroupCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<ListTagsLogGroupCommandOutput> {\n    return deserializeAws_json1_1ListTagsLogGroupCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CloudWatchLogsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CloudWatchLogsClient\";\nimport { PutDestinationRequest, PutDestinationResponse } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1PutDestinationCommand,\n  serializeAws_json1_1PutDestinationCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type PutDestinationCommandInput = PutDestinationRequest;\nexport type PutDestinationCommandOutput = PutDestinationResponse & __MetadataBearer;\n\n/**\n * <p>Creates or updates a destination. This operation is used only to create destinations for cross-account subscriptions.</p>\n *          <p>A destination encapsulates a physical resource (such\n *       as an Amazon Kinesis stream) and enables you to subscribe to a real-time stream of log events\n *       for a different account, ingested using <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutLogEvents.html\">PutLogEvents</a>.</p>\n *          <p>Through an access policy, a destination controls what is written to it.\n *       By default, <code>PutDestination</code> does not set any access policy with the destination,\n *       which means a cross-account user cannot call <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutSubscriptionFilter.html\">PutSubscriptionFilter</a> against\n *       this destination. To enable this, the destination owner must call <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDestinationPolicy.html\">PutDestinationPolicy</a> after <code>PutDestination</code>.</p>\n *          <p>To perform a <code>PutDestination</code> operation, you must also have the\n *     <code>iam:PassRole</code> permission.</p>\n */\nexport class PutDestinationCommand extends $Command<\n  PutDestinationCommandInput,\n  PutDestinationCommandOutput,\n  CloudWatchLogsClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: PutDestinationCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CloudWatchLogsClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<PutDestinationCommandInput, PutDestinationCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CloudWatchLogsClient\";\n    const commandName = \"PutDestinationCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: PutDestinationRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: PutDestinationResponse.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: PutDestinationCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1PutDestinationCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<PutDestinationCommandOutput> {\n    return deserializeAws_json1_1PutDestinationCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CloudWatchLogsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CloudWatchLogsClient\";\nimport { PutDestinationPolicyRequest } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1PutDestinationPolicyCommand,\n  serializeAws_json1_1PutDestinationPolicyCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type PutDestinationPolicyCommandInput = PutDestinationPolicyRequest;\nexport type PutDestinationPolicyCommandOutput = __MetadataBearer;\n\n/**\n * <p>Creates or updates an access policy associated with an existing\n *       destination. An access policy is an <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies_overview.html\">IAM policy document</a> that is used\n *       to authorize claims to register a subscription filter against a given destination.</p>\n */\nexport class PutDestinationPolicyCommand extends $Command<\n  PutDestinationPolicyCommandInput,\n  PutDestinationPolicyCommandOutput,\n  CloudWatchLogsClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: PutDestinationPolicyCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CloudWatchLogsClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<PutDestinationPolicyCommandInput, PutDestinationPolicyCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CloudWatchLogsClient\";\n    const commandName = \"PutDestinationPolicyCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: PutDestinationPolicyRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: (output: any) => output,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: PutDestinationPolicyCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1PutDestinationPolicyCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<PutDestinationPolicyCommandOutput> {\n    return deserializeAws_json1_1PutDestinationPolicyCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CloudWatchLogsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CloudWatchLogsClient\";\nimport { PutLogEventsRequest, PutLogEventsResponse } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1PutLogEventsCommand,\n  serializeAws_json1_1PutLogEventsCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type PutLogEventsCommandInput = PutLogEventsRequest;\nexport type PutLogEventsCommandOutput = PutLogEventsResponse & __MetadataBearer;\n\n/**\n * <p>Uploads a batch of log events to the specified log stream.</p>\n *          <p>You must include the sequence token obtained from the response of the previous call. An\n *       upload in a newly created log stream does not require a sequence token. You can also get the\n *       sequence token in the <code>expectedSequenceToken</code> field from\n *         <code>InvalidSequenceTokenException</code>. If you call <code>PutLogEvents</code> twice\n *       within a narrow time period using the same value for <code>sequenceToken</code>, both calls\n *       might be successful or one might be rejected.</p>\n *          <p>The batch of events must satisfy the following constraints:</p>\n *          <ul>\n *             <li>\n *                <p>The maximum batch size is 1,048,576 bytes. This size is calculated as the sum of\n *           all event messages in UTF-8, plus 26 bytes for each log event.</p>\n *             </li>\n *             <li>\n *                <p>None of the log events in the batch can be more than 2 hours in the future.</p>\n *             </li>\n *             <li>\n *                <p>None of the log events in the batch can be older than 14 days or older than the retention\n *           period of the log group.</p>\n *             </li>\n *             <li>\n *                <p>The log events in the batch must be in chronological order by their timestamp. The\n *           timestamp is the time the event occurred, expressed as the number of milliseconds after\n *           Jan 1, 1970 00:00:00 UTC. (In AWS Tools for PowerShell and the AWS SDK for .NET, the\n *           timestamp is specified in .NET format: yyyy-mm-ddThh:mm:ss. For example,\n *           2017-09-15T13:45:30.) </p>\n *             </li>\n *             <li>\n *                <p>A batch of log events in a single request cannot span more than 24 hours. Otherwise, the operation fails.</p>\n *             </li>\n *             <li>\n *                <p>The maximum number of log events in a batch is 10,000.</p>\n *             </li>\n *             <li>\n *                <p>There is a quota of 5 requests per second per log stream. Additional requests are throttled. This quota can't be changed.</p>\n *             </li>\n *          </ul>\n *          <p>If a call to <code>PutLogEvents</code> returns \"UnrecognizedClientException\" the most likely cause is an invalid AWS access key ID or secret key. </p>\n */\nexport class PutLogEventsCommand extends $Command<\n  PutLogEventsCommandInput,\n  PutLogEventsCommandOutput,\n  CloudWatchLogsClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: PutLogEventsCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CloudWatchLogsClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<PutLogEventsCommandInput, PutLogEventsCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CloudWatchLogsClient\";\n    const commandName = \"PutLogEventsCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: PutLogEventsRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: PutLogEventsResponse.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: PutLogEventsCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1PutLogEventsCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<PutLogEventsCommandOutput> {\n    return deserializeAws_json1_1PutLogEventsCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CloudWatchLogsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CloudWatchLogsClient\";\nimport { PutMetricFilterRequest } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1PutMetricFilterCommand,\n  serializeAws_json1_1PutMetricFilterCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type PutMetricFilterCommandInput = PutMetricFilterRequest;\nexport type PutMetricFilterCommandOutput = __MetadataBearer;\n\n/**\n * <p>Creates or updates a metric filter and associates it with the specified log group.\n *       Metric filters allow you to configure rules to extract metric data from log events ingested\n *       through <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutLogEvents.html\">PutLogEvents</a>.</p>\n *          <p>The maximum number of metric filters that can be associated with a log group is\n *       100.</p>\n */\nexport class PutMetricFilterCommand extends $Command<\n  PutMetricFilterCommandInput,\n  PutMetricFilterCommandOutput,\n  CloudWatchLogsClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: PutMetricFilterCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CloudWatchLogsClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<PutMetricFilterCommandInput, PutMetricFilterCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CloudWatchLogsClient\";\n    const commandName = \"PutMetricFilterCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: PutMetricFilterRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: (output: any) => output,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: PutMetricFilterCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1PutMetricFilterCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<PutMetricFilterCommandOutput> {\n    return deserializeAws_json1_1PutMetricFilterCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CloudWatchLogsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CloudWatchLogsClient\";\nimport { PutQueryDefinitionRequest, PutQueryDefinitionResponse } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1PutQueryDefinitionCommand,\n  serializeAws_json1_1PutQueryDefinitionCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type PutQueryDefinitionCommandInput = PutQueryDefinitionRequest;\nexport type PutQueryDefinitionCommandOutput = PutQueryDefinitionResponse & __MetadataBearer;\n\n/**\n * <p>Creates or updates a query definition for CloudWatch Logs Insights. For\n *       more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/AnalyzingLogData.html\">Analyzing Log Data with CloudWatch Logs Insights</a>.</p>\n *\n *          <p>To update a query definition, specify its\n *         <code>queryDefinitionId</code> in your request. The values of <code>name</code>, <code>queryString</code>,\n *       and <code>logGroupNames</code> are changed to the values that you specify in your update\n *       operation. No current values are retained from the current query definition. For example, if\n *       you update a current query definition that includes log groups, and you don't specify the\n *         <code>logGroupNames</code> parameter in your update operation, the query definition changes\n *       to contain no log groups.</p>\n *          <p>You must have the <code>logs:PutQueryDefinition</code> permission to be able to perform\n *     this operation.</p>\n */\nexport class PutQueryDefinitionCommand extends $Command<\n  PutQueryDefinitionCommandInput,\n  PutQueryDefinitionCommandOutput,\n  CloudWatchLogsClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: PutQueryDefinitionCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CloudWatchLogsClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<PutQueryDefinitionCommandInput, PutQueryDefinitionCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CloudWatchLogsClient\";\n    const commandName = \"PutQueryDefinitionCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: PutQueryDefinitionRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: PutQueryDefinitionResponse.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: PutQueryDefinitionCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1PutQueryDefinitionCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<PutQueryDefinitionCommandOutput> {\n    return deserializeAws_json1_1PutQueryDefinitionCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CloudWatchLogsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CloudWatchLogsClient\";\nimport { PutResourcePolicyRequest, PutResourcePolicyResponse } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1PutResourcePolicyCommand,\n  serializeAws_json1_1PutResourcePolicyCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type PutResourcePolicyCommandInput = PutResourcePolicyRequest;\nexport type PutResourcePolicyCommandOutput = PutResourcePolicyResponse & __MetadataBearer;\n\n/**\n * <p>Creates or updates a resource policy allowing other AWS services to put log events to\n *       this account, such as Amazon Route 53. An account can have up to 10 resource policies per AWS\n *       Region.</p>\n */\nexport class PutResourcePolicyCommand extends $Command<\n  PutResourcePolicyCommandInput,\n  PutResourcePolicyCommandOutput,\n  CloudWatchLogsClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: PutResourcePolicyCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CloudWatchLogsClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<PutResourcePolicyCommandInput, PutResourcePolicyCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CloudWatchLogsClient\";\n    const commandName = \"PutResourcePolicyCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: PutResourcePolicyRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: PutResourcePolicyResponse.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: PutResourcePolicyCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1PutResourcePolicyCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<PutResourcePolicyCommandOutput> {\n    return deserializeAws_json1_1PutResourcePolicyCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CloudWatchLogsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CloudWatchLogsClient\";\nimport { PutRetentionPolicyRequest } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1PutRetentionPolicyCommand,\n  serializeAws_json1_1PutRetentionPolicyCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type PutRetentionPolicyCommandInput = PutRetentionPolicyRequest;\nexport type PutRetentionPolicyCommandOutput = __MetadataBearer;\n\n/**\n * <p>Sets the retention of the specified log group. A retention policy allows you to\n *       configure the number of days for which to retain log events in the specified log\n *       group.</p>\n */\nexport class PutRetentionPolicyCommand extends $Command<\n  PutRetentionPolicyCommandInput,\n  PutRetentionPolicyCommandOutput,\n  CloudWatchLogsClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: PutRetentionPolicyCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CloudWatchLogsClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<PutRetentionPolicyCommandInput, PutRetentionPolicyCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CloudWatchLogsClient\";\n    const commandName = \"PutRetentionPolicyCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: PutRetentionPolicyRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: (output: any) => output,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: PutRetentionPolicyCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1PutRetentionPolicyCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<PutRetentionPolicyCommandOutput> {\n    return deserializeAws_json1_1PutRetentionPolicyCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CloudWatchLogsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CloudWatchLogsClient\";\nimport { PutSubscriptionFilterRequest } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1PutSubscriptionFilterCommand,\n  serializeAws_json1_1PutSubscriptionFilterCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type PutSubscriptionFilterCommandInput = PutSubscriptionFilterRequest;\nexport type PutSubscriptionFilterCommandOutput = __MetadataBearer;\n\n/**\n * <p>Creates or updates a subscription filter and associates it with the specified log\n *       group. Subscription filters allow you to subscribe to a real-time stream of log events\n *       ingested through <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutLogEvents.html\">PutLogEvents</a> and have them delivered to a specific\n *       destination. When log events are sent to the\n *       receiving service, they are Base64 encoded\n *       and compressed with the gzip format.</p>\n *          <p>The following destinations are supported for subscription filters:</p>\n *          <ul>\n *             <li>\n *                <p>An Amazon Kinesis stream belonging to the same account as the subscription filter,\n *           for same-account delivery.</p>\n *             </li>\n *             <li>\n *                <p>A logical destination that belongs to a different account, for cross-account delivery.</p>\n *             </li>\n *             <li>\n *                <p>An Amazon Kinesis Firehose delivery stream that belongs to the same account as the\n *           subscription filter, for same-account delivery.</p>\n *             </li>\n *             <li>\n *                <p>An AWS Lambda function that belongs to the same account as the subscription filter,\n *           for same-account delivery.</p>\n *             </li>\n *          </ul>\n *          <p>There can only be one subscription filter associated with a log group. If you are\n *       updating an existing filter, you must specify the correct name in <code>filterName</code>.\n *       Otherwise, the call fails because you cannot associate a second filter with a log\n *       group.</p>\n *          <p>To perform a <code>PutSubscriptionFilter</code> operation, you must also have the\n *       <code>iam:PassRole</code> permission.</p>\n */\nexport class PutSubscriptionFilterCommand extends $Command<\n  PutSubscriptionFilterCommandInput,\n  PutSubscriptionFilterCommandOutput,\n  CloudWatchLogsClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: PutSubscriptionFilterCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CloudWatchLogsClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<PutSubscriptionFilterCommandInput, PutSubscriptionFilterCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CloudWatchLogsClient\";\n    const commandName = \"PutSubscriptionFilterCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: PutSubscriptionFilterRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: (output: any) => output,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: PutSubscriptionFilterCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1PutSubscriptionFilterCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<PutSubscriptionFilterCommandOutput> {\n    return deserializeAws_json1_1PutSubscriptionFilterCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CloudWatchLogsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CloudWatchLogsClient\";\nimport { StartQueryRequest, StartQueryResponse } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1StartQueryCommand,\n  serializeAws_json1_1StartQueryCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type StartQueryCommandInput = StartQueryRequest;\nexport type StartQueryCommandOutput = StartQueryResponse & __MetadataBearer;\n\n/**\n * <p>Schedules a query of a log group using CloudWatch Logs Insights. You specify the log group\n *       and time range to query and the query string to use.</p>\n *          <p>For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CWL_QuerySyntax.html\">CloudWatch Logs Insights Query Syntax</a>.</p>\n *\n *          <p>Queries time out after 15 minutes of execution. If your queries are timing out, reduce the\n *       time range being searched or partition your query into a number of queries.</p>\n */\nexport class StartQueryCommand extends $Command<\n  StartQueryCommandInput,\n  StartQueryCommandOutput,\n  CloudWatchLogsClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: StartQueryCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CloudWatchLogsClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<StartQueryCommandInput, StartQueryCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CloudWatchLogsClient\";\n    const commandName = \"StartQueryCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: StartQueryRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: StartQueryResponse.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: StartQueryCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1StartQueryCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<StartQueryCommandOutput> {\n    return deserializeAws_json1_1StartQueryCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CloudWatchLogsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CloudWatchLogsClient\";\nimport { StopQueryRequest, StopQueryResponse } from \"../models/models_0\";\nimport { deserializeAws_json1_1StopQueryCommand, serializeAws_json1_1StopQueryCommand } from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type StopQueryCommandInput = StopQueryRequest;\nexport type StopQueryCommandOutput = StopQueryResponse & __MetadataBearer;\n\n/**\n * <p>Stops a CloudWatch Logs Insights query that is in progress. If the query has already ended, the operation\n *     returns an error indicating that the specified query is not running.</p>\n */\nexport class StopQueryCommand extends $Command<\n  StopQueryCommandInput,\n  StopQueryCommandOutput,\n  CloudWatchLogsClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: StopQueryCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CloudWatchLogsClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<StopQueryCommandInput, StopQueryCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CloudWatchLogsClient\";\n    const commandName = \"StopQueryCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: StopQueryRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: StopQueryResponse.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: StopQueryCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1StopQueryCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<StopQueryCommandOutput> {\n    return deserializeAws_json1_1StopQueryCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CloudWatchLogsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CloudWatchLogsClient\";\nimport { TagLogGroupRequest } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1TagLogGroupCommand,\n  serializeAws_json1_1TagLogGroupCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type TagLogGroupCommandInput = TagLogGroupRequest;\nexport type TagLogGroupCommandOutput = __MetadataBearer;\n\n/**\n * <p>Adds or updates the specified tags for the specified log group.</p>\n *          <p>To list the tags for a log group, use <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_ListTagsLogGroup.html\">ListTagsLogGroup</a>.\n *       To remove tags, use <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_UntagLogGroup.html\">UntagLogGroup</a>.</p>\n *          <p>For more information about tags, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html#log-group-tagging\">Tag Log Groups in Amazon CloudWatch Logs</a>\n *       in the <i>Amazon CloudWatch Logs User Guide</i>.</p>\n */\nexport class TagLogGroupCommand extends $Command<\n  TagLogGroupCommandInput,\n  TagLogGroupCommandOutput,\n  CloudWatchLogsClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: TagLogGroupCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CloudWatchLogsClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<TagLogGroupCommandInput, TagLogGroupCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CloudWatchLogsClient\";\n    const commandName = \"TagLogGroupCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: TagLogGroupRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: (output: any) => output,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: TagLogGroupCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1TagLogGroupCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<TagLogGroupCommandOutput> {\n    return deserializeAws_json1_1TagLogGroupCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CloudWatchLogsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CloudWatchLogsClient\";\nimport { TestMetricFilterRequest, TestMetricFilterResponse } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1TestMetricFilterCommand,\n  serializeAws_json1_1TestMetricFilterCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type TestMetricFilterCommandInput = TestMetricFilterRequest;\nexport type TestMetricFilterCommandOutput = TestMetricFilterResponse & __MetadataBearer;\n\n/**\n * <p>Tests the filter pattern of a metric filter against a sample of log event messages. You\n *       can use this operation to validate the correctness of a metric filter pattern.</p>\n */\nexport class TestMetricFilterCommand extends $Command<\n  TestMetricFilterCommandInput,\n  TestMetricFilterCommandOutput,\n  CloudWatchLogsClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: TestMetricFilterCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CloudWatchLogsClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<TestMetricFilterCommandInput, TestMetricFilterCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CloudWatchLogsClient\";\n    const commandName = \"TestMetricFilterCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: TestMetricFilterRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: TestMetricFilterResponse.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: TestMetricFilterCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1TestMetricFilterCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<TestMetricFilterCommandOutput> {\n    return deserializeAws_json1_1TestMetricFilterCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CloudWatchLogsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CloudWatchLogsClient\";\nimport { UntagLogGroupRequest } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1UntagLogGroupCommand,\n  serializeAws_json1_1UntagLogGroupCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type UntagLogGroupCommandInput = UntagLogGroupRequest;\nexport type UntagLogGroupCommandOutput = __MetadataBearer;\n\n/**\n * <p>Removes the specified tags from the specified log group.</p>\n *          <p>To list the tags for a log group, use <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_ListTagsLogGroup.html\">ListTagsLogGroup</a>.\n *       To add tags, use <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_TagLogGroup.html\">TagLogGroup</a>.</p>\n */\nexport class UntagLogGroupCommand extends $Command<\n  UntagLogGroupCommandInput,\n  UntagLogGroupCommandOutput,\n  CloudWatchLogsClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: UntagLogGroupCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CloudWatchLogsClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<UntagLogGroupCommandInput, UntagLogGroupCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CloudWatchLogsClient\";\n    const commandName = \"UntagLogGroupCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: UntagLogGroupRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: (output: any) => output,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: UntagLogGroupCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1UntagLogGroupCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<UntagLogGroupCommandOutput> {\n    return deserializeAws_json1_1UntagLogGroupCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CloudWatchLogsClient } from \"./CloudWatchLogsClient\";\nimport {\n  AssociateKmsKeyCommand,\n  AssociateKmsKeyCommandInput,\n  AssociateKmsKeyCommandOutput,\n} from \"./commands/AssociateKmsKeyCommand\";\nimport {\n  CancelExportTaskCommand,\n  CancelExportTaskCommandInput,\n  CancelExportTaskCommandOutput,\n} from \"./commands/CancelExportTaskCommand\";\nimport {\n  CreateExportTaskCommand,\n  CreateExportTaskCommandInput,\n  CreateExportTaskCommandOutput,\n} from \"./commands/CreateExportTaskCommand\";\nimport {\n  CreateLogGroupCommand,\n  CreateLogGroupCommandInput,\n  CreateLogGroupCommandOutput,\n} from \"./commands/CreateLogGroupCommand\";\nimport {\n  CreateLogStreamCommand,\n  CreateLogStreamCommandInput,\n  CreateLogStreamCommandOutput,\n} from \"./commands/CreateLogStreamCommand\";\nimport {\n  DeleteDestinationCommand,\n  DeleteDestinationCommandInput,\n  DeleteDestinationCommandOutput,\n} from \"./commands/DeleteDestinationCommand\";\nimport {\n  DeleteLogGroupCommand,\n  DeleteLogGroupCommandInput,\n  DeleteLogGroupCommandOutput,\n} from \"./commands/DeleteLogGroupCommand\";\nimport {\n  DeleteLogStreamCommand,\n  DeleteLogStreamCommandInput,\n  DeleteLogStreamCommandOutput,\n} from \"./commands/DeleteLogStreamCommand\";\nimport {\n  DeleteMetricFilterCommand,\n  DeleteMetricFilterCommandInput,\n  DeleteMetricFilterCommandOutput,\n} from \"./commands/DeleteMetricFilterCommand\";\nimport {\n  DeleteQueryDefinitionCommand,\n  DeleteQueryDefinitionCommandInput,\n  DeleteQueryDefinitionCommandOutput,\n} from \"./commands/DeleteQueryDefinitionCommand\";\nimport {\n  DeleteResourcePolicyCommand,\n  DeleteResourcePolicyCommandInput,\n  DeleteResourcePolicyCommandOutput,\n} from \"./commands/DeleteResourcePolicyCommand\";\nimport {\n  DeleteRetentionPolicyCommand,\n  DeleteRetentionPolicyCommandInput,\n  DeleteRetentionPolicyCommandOutput,\n} from \"./commands/DeleteRetentionPolicyCommand\";\nimport {\n  DeleteSubscriptionFilterCommand,\n  DeleteSubscriptionFilterCommandInput,\n  DeleteSubscriptionFilterCommandOutput,\n} from \"./commands/DeleteSubscriptionFilterCommand\";\nimport {\n  DescribeDestinationsCommand,\n  DescribeDestinationsCommandInput,\n  DescribeDestinationsCommandOutput,\n} from \"./commands/DescribeDestinationsCommand\";\nimport {\n  DescribeExportTasksCommand,\n  DescribeExportTasksCommandInput,\n  DescribeExportTasksCommandOutput,\n} from \"./commands/DescribeExportTasksCommand\";\nimport {\n  DescribeLogGroupsCommand,\n  DescribeLogGroupsCommandInput,\n  DescribeLogGroupsCommandOutput,\n} from \"./commands/DescribeLogGroupsCommand\";\nimport {\n  DescribeLogStreamsCommand,\n  DescribeLogStreamsCommandInput,\n  DescribeLogStreamsCommandOutput,\n} from \"./commands/DescribeLogStreamsCommand\";\nimport {\n  DescribeMetricFiltersCommand,\n  DescribeMetricFiltersCommandInput,\n  DescribeMetricFiltersCommandOutput,\n} from \"./commands/DescribeMetricFiltersCommand\";\nimport {\n  DescribeQueriesCommand,\n  DescribeQueriesCommandInput,\n  DescribeQueriesCommandOutput,\n} from \"./commands/DescribeQueriesCommand\";\nimport {\n  DescribeQueryDefinitionsCommand,\n  DescribeQueryDefinitionsCommandInput,\n  DescribeQueryDefinitionsCommandOutput,\n} from \"./commands/DescribeQueryDefinitionsCommand\";\nimport {\n  DescribeResourcePoliciesCommand,\n  DescribeResourcePoliciesCommandInput,\n  DescribeResourcePoliciesCommandOutput,\n} from \"./commands/DescribeResourcePoliciesCommand\";\nimport {\n  DescribeSubscriptionFiltersCommand,\n  DescribeSubscriptionFiltersCommandInput,\n  DescribeSubscriptionFiltersCommandOutput,\n} from \"./commands/DescribeSubscriptionFiltersCommand\";\nimport {\n  DisassociateKmsKeyCommand,\n  DisassociateKmsKeyCommandInput,\n  DisassociateKmsKeyCommandOutput,\n} from \"./commands/DisassociateKmsKeyCommand\";\nimport {\n  FilterLogEventsCommand,\n  FilterLogEventsCommandInput,\n  FilterLogEventsCommandOutput,\n} from \"./commands/FilterLogEventsCommand\";\nimport {\n  GetLogEventsCommand,\n  GetLogEventsCommandInput,\n  GetLogEventsCommandOutput,\n} from \"./commands/GetLogEventsCommand\";\nimport {\n  GetLogGroupFieldsCommand,\n  GetLogGroupFieldsCommandInput,\n  GetLogGroupFieldsCommandOutput,\n} from \"./commands/GetLogGroupFieldsCommand\";\nimport {\n  GetLogRecordCommand,\n  GetLogRecordCommandInput,\n  GetLogRecordCommandOutput,\n} from \"./commands/GetLogRecordCommand\";\nimport {\n  GetQueryResultsCommand,\n  GetQueryResultsCommandInput,\n  GetQueryResultsCommandOutput,\n} from \"./commands/GetQueryResultsCommand\";\nimport {\n  ListTagsLogGroupCommand,\n  ListTagsLogGroupCommandInput,\n  ListTagsLogGroupCommandOutput,\n} from \"./commands/ListTagsLogGroupCommand\";\nimport {\n  PutDestinationCommand,\n  PutDestinationCommandInput,\n  PutDestinationCommandOutput,\n} from \"./commands/PutDestinationCommand\";\nimport {\n  PutDestinationPolicyCommand,\n  PutDestinationPolicyCommandInput,\n  PutDestinationPolicyCommandOutput,\n} from \"./commands/PutDestinationPolicyCommand\";\nimport {\n  PutLogEventsCommand,\n  PutLogEventsCommandInput,\n  PutLogEventsCommandOutput,\n} from \"./commands/PutLogEventsCommand\";\nimport {\n  PutMetricFilterCommand,\n  PutMetricFilterCommandInput,\n  PutMetricFilterCommandOutput,\n} from \"./commands/PutMetricFilterCommand\";\nimport {\n  PutQueryDefinitionCommand,\n  PutQueryDefinitionCommandInput,\n  PutQueryDefinitionCommandOutput,\n} from \"./commands/PutQueryDefinitionCommand\";\nimport {\n  PutResourcePolicyCommand,\n  PutResourcePolicyCommandInput,\n  PutResourcePolicyCommandOutput,\n} from \"./commands/PutResourcePolicyCommand\";\nimport {\n  PutRetentionPolicyCommand,\n  PutRetentionPolicyCommandInput,\n  PutRetentionPolicyCommandOutput,\n} from \"./commands/PutRetentionPolicyCommand\";\nimport {\n  PutSubscriptionFilterCommand,\n  PutSubscriptionFilterCommandInput,\n  PutSubscriptionFilterCommandOutput,\n} from \"./commands/PutSubscriptionFilterCommand\";\nimport { StartQueryCommand, StartQueryCommandInput, StartQueryCommandOutput } from \"./commands/StartQueryCommand\";\nimport { StopQueryCommand, StopQueryCommandInput, StopQueryCommandOutput } from \"./commands/StopQueryCommand\";\nimport { TagLogGroupCommand, TagLogGroupCommandInput, TagLogGroupCommandOutput } from \"./commands/TagLogGroupCommand\";\nimport {\n  TestMetricFilterCommand,\n  TestMetricFilterCommandInput,\n  TestMetricFilterCommandOutput,\n} from \"./commands/TestMetricFilterCommand\";\nimport {\n  UntagLogGroupCommand,\n  UntagLogGroupCommandInput,\n  UntagLogGroupCommandOutput,\n} from \"./commands/UntagLogGroupCommand\";\nimport { HttpHandlerOptions as __HttpHandlerOptions } from \"@aws-sdk/types\";\n\n/**\n * <p>You can use Amazon CloudWatch Logs to monitor, store, and access your log files from\n *       EC2 instances, AWS CloudTrail, or other sources. You can then retrieve the associated\n *       log data from CloudWatch Logs using the CloudWatch console, CloudWatch Logs commands in the\n *       AWS CLI, CloudWatch Logs API, or CloudWatch Logs SDK.</p>\n *          <p>You can use CloudWatch Logs to:</p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <b>Monitor logs from EC2 instances in real-time</b>: You\n *           can use CloudWatch Logs to monitor applications and systems using log data. For example,\n *           CloudWatch Logs can track the number of errors that occur in your application logs and\n *           send you a notification whenever the rate of errors exceeds a threshold that you specify.\n *           CloudWatch Logs uses your log data for monitoring so no code changes are required. For\n *           example, you can monitor application logs for specific literal terms (such as\n *           \"NullReferenceException\") or count the number of occurrences of a literal term at a\n *           particular position in log data (such as \"404\" status codes in an Apache access log). When\n *           the term you are searching for is found, CloudWatch Logs reports the data to a CloudWatch\n *           metric that you specify.</p>\n *             </li>\n *             <li>\n *                <p>\n *                   <b>Monitor AWS CloudTrail logged events</b>: You can\n *           create alarms in CloudWatch and receive notifications of particular API activity as\n *           captured by CloudTrail. You can use the notification to perform troubleshooting.</p>\n *             </li>\n *             <li>\n *                <p>\n *                   <b>Archive log data</b>: You can use CloudWatch Logs to\n *           store your log data in highly durable storage. You can change the log retention setting so\n *           that any log events older than this setting are automatically deleted. The CloudWatch Logs\n *           agent makes it easy to quickly send both rotated and non-rotated log data off of a host\n *           and into the log service. You can then access the raw log data when you need it.</p>\n *             </li>\n *          </ul>\n */\nexport class CloudWatchLogs extends CloudWatchLogsClient {\n  /**\n   * <p>Associates the specified AWS Key Management Service (AWS KMS) customer master key (CMK) with the specified log group.</p>\n   *          <p>Associating an AWS KMS CMK with a log group overrides any existing associations between the log group and a CMK.\n   *       After a CMK is associated with a log group, all newly ingested data for the log group is encrypted using the CMK.\n   *       This association is stored as long as the data encrypted with the CMK is still within Amazon CloudWatch Logs.\n   *       This enables Amazon CloudWatch Logs to decrypt this data whenever it is requested.</p>\n   *          <important>\n   *             <p>CloudWatch Logs supports only symmetric CMKs. Do not use an associate an asymmetric CMK\n   *         with your log group. For more information, see <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html\">Using Symmetric and Asymmetric\n   *           Keys</a>.</p>\n   *          </important>\n   *          <p>It can take up to 5 minutes for this operation to take effect.</p>\n   *          <p>If you attempt to associate a CMK with a log group but the CMK does not exist or the\n   *       CMK is disabled, you receive an <code>InvalidParameterException</code> error. </p>\n   */\n  public associateKmsKey(\n    args: AssociateKmsKeyCommandInput,\n    options?: __HttpHandlerOptions\n  ): Promise<AssociateKmsKeyCommandOutput>;\n  public associateKmsKey(\n    args: AssociateKmsKeyCommandInput,\n    cb: (err: any, data?: AssociateKmsKeyCommandOutput) => void\n  ): void;\n  public associateKmsKey(\n    args: AssociateKmsKeyCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: AssociateKmsKeyCommandOutput) => void\n  ): void;\n  public associateKmsKey(\n    args: AssociateKmsKeyCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: AssociateKmsKeyCommandOutput) => void),\n    cb?: (err: any, data?: AssociateKmsKeyCommandOutput) => void\n  ): Promise<AssociateKmsKeyCommandOutput> | void {\n    const command = new AssociateKmsKeyCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Cancels the specified export task.</p>\n   *          <p>The task must be in the <code>PENDING</code> or <code>RUNNING</code> state.</p>\n   */\n  public cancelExportTask(\n    args: CancelExportTaskCommandInput,\n    options?: __HttpHandlerOptions\n  ): Promise<CancelExportTaskCommandOutput>;\n  public cancelExportTask(\n    args: CancelExportTaskCommandInput,\n    cb: (err: any, data?: CancelExportTaskCommandOutput) => void\n  ): void;\n  public cancelExportTask(\n    args: CancelExportTaskCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: CancelExportTaskCommandOutput) => void\n  ): void;\n  public cancelExportTask(\n    args: CancelExportTaskCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: CancelExportTaskCommandOutput) => void),\n    cb?: (err: any, data?: CancelExportTaskCommandOutput) => void\n  ): Promise<CancelExportTaskCommandOutput> | void {\n    const command = new CancelExportTaskCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Creates an export task, which allows you to efficiently export data from a\n   *       log group to an Amazon S3 bucket. When you perform a <code>CreateExportTask</code>\n   *       operation, you must use credentials that have permission to write to the S3 bucket\n   *       that you specify as the destination.</p>\n   *          <p>This is an asynchronous call. If all the required information is provided, this\n   *       operation initiates an export task and responds with the ID of the task. After the task has started,\n   *       you can use <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_DescribeExportTasks.html\">DescribeExportTasks</a> to get the status of the export task. Each account can\n   *       only have one active (<code>RUNNING</code> or <code>PENDING</code>) export task at a time.\n   *       To cancel an export task, use <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_CancelExportTask.html\">CancelExportTask</a>.</p>\n   *          <p>You can export logs from multiple log groups or multiple time ranges to the same S3\n   *       bucket. To separate out log data for each export task, you can specify a prefix to be used as\n   *       the Amazon S3 key prefix for all exported objects.</p>\n   *          <p>Exporting to S3 buckets that are encrypted with AES-256 is supported. Exporting to S3 buckets\n   *       encrypted with SSE-KMS is not supported. </p>\n   */\n  public createExportTask(\n    args: CreateExportTaskCommandInput,\n    options?: __HttpHandlerOptions\n  ): Promise<CreateExportTaskCommandOutput>;\n  public createExportTask(\n    args: CreateExportTaskCommandInput,\n    cb: (err: any, data?: CreateExportTaskCommandOutput) => void\n  ): void;\n  public createExportTask(\n    args: CreateExportTaskCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: CreateExportTaskCommandOutput) => void\n  ): void;\n  public createExportTask(\n    args: CreateExportTaskCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: CreateExportTaskCommandOutput) => void),\n    cb?: (err: any, data?: CreateExportTaskCommandOutput) => void\n  ): Promise<CreateExportTaskCommandOutput> | void {\n    const command = new CreateExportTaskCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Creates a log group with the specified name. You can create up to 20,000 log groups per account.</p>\n   *          <p>You must use the following guidelines when naming a log group:</p>\n   *          <ul>\n   *             <li>\n   *                <p>Log group names must be unique within a region for an AWS account.</p>\n   *             </li>\n   *             <li>\n   *                <p>Log group names can be between 1 and 512 characters long.</p>\n   *             </li>\n   *             <li>\n   *                <p>Log group names consist of the following characters: a-z, A-Z, 0-9, '_' (underscore), '-' (hyphen),\n   *           '/' (forward slash), '.' (period), and '#' (number sign)</p>\n   *             </li>\n   *          </ul>\n   *          <p>When you create a log group, by default the log events in the log group never expire. To set\n   *     a retention policy so that events expire and are deleted after a specified time, use\n   *       <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutRetentionPolicy.html\">PutRetentionPolicy</a>.</p>\n   *          <p>If you associate a AWS Key Management Service (AWS KMS) customer master key (CMK) with the log group, ingested data is encrypted using the CMK.\n   *       This association is stored as long as the data encrypted with the CMK is still within Amazon CloudWatch Logs.\n   *       This enables Amazon CloudWatch Logs to decrypt this data whenever it is requested.</p>\n   *          <p>If you attempt to associate a CMK with the log group but the CMK does not exist or the\n   *       CMK is disabled, you receive an <code>InvalidParameterException</code> error. </p>\n   *          <important>\n   *             <p> CloudWatch Logs supports only symmetric CMKs. Do not associate an asymmetric CMK with\n   *         your log group. For more information, see <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html\">Using Symmetric and Asymmetric\n   *           Keys</a>.</p>\n   *          </important>\n   */\n  public createLogGroup(\n    args: CreateLogGroupCommandInput,\n    options?: __HttpHandlerOptions\n  ): Promise<CreateLogGroupCommandOutput>;\n  public createLogGroup(\n    args: CreateLogGroupCommandInput,\n    cb: (err: any, data?: CreateLogGroupCommandOutput) => void\n  ): void;\n  public createLogGroup(\n    args: CreateLogGroupCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: CreateLogGroupCommandOutput) => void\n  ): void;\n  public createLogGroup(\n    args: CreateLogGroupCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: CreateLogGroupCommandOutput) => void),\n    cb?: (err: any, data?: CreateLogGroupCommandOutput) => void\n  ): Promise<CreateLogGroupCommandOutput> | void {\n    const command = new CreateLogGroupCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Creates a log stream for the specified log group. A log stream is a sequence of log events\n   *       that originate from a single source, such as an application instance or a resource that is\n   *       being monitored.</p>\n   *          <p>There is no limit on the number of log streams that you can create for a log group. There is a limit\n   *     of 50 TPS on <code>CreateLogStream</code> operations, after which transactions are throttled.</p>\n   *          <p>You must use the following guidelines when naming a log stream:</p>\n   *          <ul>\n   *             <li>\n   *                <p>Log stream names must be unique within the log group.</p>\n   *             </li>\n   *             <li>\n   *                <p>Log stream names can be between 1 and 512 characters long.</p>\n   *             </li>\n   *             <li>\n   *                <p>The ':' (colon) and '*' (asterisk) characters are not allowed.</p>\n   *             </li>\n   *          </ul>\n   */\n  public createLogStream(\n    args: CreateLogStreamCommandInput,\n    options?: __HttpHandlerOptions\n  ): Promise<CreateLogStreamCommandOutput>;\n  public createLogStream(\n    args: CreateLogStreamCommandInput,\n    cb: (err: any, data?: CreateLogStreamCommandOutput) => void\n  ): void;\n  public createLogStream(\n    args: CreateLogStreamCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: CreateLogStreamCommandOutput) => void\n  ): void;\n  public createLogStream(\n    args: CreateLogStreamCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: CreateLogStreamCommandOutput) => void),\n    cb?: (err: any, data?: CreateLogStreamCommandOutput) => void\n  ): Promise<CreateLogStreamCommandOutput> | void {\n    const command = new CreateLogStreamCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Deletes the specified destination, and eventually disables all the\n   *       subscription filters that publish to it. This operation does not delete the\n   *       physical resource encapsulated by the destination.</p>\n   */\n  public deleteDestination(\n    args: DeleteDestinationCommandInput,\n    options?: __HttpHandlerOptions\n  ): Promise<DeleteDestinationCommandOutput>;\n  public deleteDestination(\n    args: DeleteDestinationCommandInput,\n    cb: (err: any, data?: DeleteDestinationCommandOutput) => void\n  ): void;\n  public deleteDestination(\n    args: DeleteDestinationCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: DeleteDestinationCommandOutput) => void\n  ): void;\n  public deleteDestination(\n    args: DeleteDestinationCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: DeleteDestinationCommandOutput) => void),\n    cb?: (err: any, data?: DeleteDestinationCommandOutput) => void\n  ): Promise<DeleteDestinationCommandOutput> | void {\n    const command = new DeleteDestinationCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Deletes the specified log group and permanently deletes all the archived\n   *       log events associated with the log group.</p>\n   */\n  public deleteLogGroup(\n    args: DeleteLogGroupCommandInput,\n    options?: __HttpHandlerOptions\n  ): Promise<DeleteLogGroupCommandOutput>;\n  public deleteLogGroup(\n    args: DeleteLogGroupCommandInput,\n    cb: (err: any, data?: DeleteLogGroupCommandOutput) => void\n  ): void;\n  public deleteLogGroup(\n    args: DeleteLogGroupCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: DeleteLogGroupCommandOutput) => void\n  ): void;\n  public deleteLogGroup(\n    args: DeleteLogGroupCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: DeleteLogGroupCommandOutput) => void),\n    cb?: (err: any, data?: DeleteLogGroupCommandOutput) => void\n  ): Promise<DeleteLogGroupCommandOutput> | void {\n    const command = new DeleteLogGroupCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Deletes the specified log stream and permanently deletes all the archived log events associated\n   *       with the log stream.</p>\n   */\n  public deleteLogStream(\n    args: DeleteLogStreamCommandInput,\n    options?: __HttpHandlerOptions\n  ): Promise<DeleteLogStreamCommandOutput>;\n  public deleteLogStream(\n    args: DeleteLogStreamCommandInput,\n    cb: (err: any, data?: DeleteLogStreamCommandOutput) => void\n  ): void;\n  public deleteLogStream(\n    args: DeleteLogStreamCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: DeleteLogStreamCommandOutput) => void\n  ): void;\n  public deleteLogStream(\n    args: DeleteLogStreamCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: DeleteLogStreamCommandOutput) => void),\n    cb?: (err: any, data?: DeleteLogStreamCommandOutput) => void\n  ): Promise<DeleteLogStreamCommandOutput> | void {\n    const command = new DeleteLogStreamCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Deletes the specified metric filter.</p>\n   */\n  public deleteMetricFilter(\n    args: DeleteMetricFilterCommandInput,\n    options?: __HttpHandlerOptions\n  ): Promise<DeleteMetricFilterCommandOutput>;\n  public deleteMetricFilter(\n    args: DeleteMetricFilterCommandInput,\n    cb: (err: any, data?: DeleteMetricFilterCommandOutput) => void\n  ): void;\n  public deleteMetricFilter(\n    args: DeleteMetricFilterCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: DeleteMetricFilterCommandOutput) => void\n  ): void;\n  public deleteMetricFilter(\n    args: DeleteMetricFilterCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: DeleteMetricFilterCommandOutput) => void),\n    cb?: (err: any, data?: DeleteMetricFilterCommandOutput) => void\n  ): Promise<DeleteMetricFilterCommandOutput> | void {\n    const command = new DeleteMetricFilterCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Deletes a saved CloudWatch Logs Insights query definition.\n   *       A query definition contains details about a saved CloudWatch Logs Insights query.</p>\n   *          <p>Each <code>DeleteQueryDefinition</code> operation can delete one query definition.</p>\n   *          <p>You must have the <code>logs:DeleteQueryDefinition</code> permission to be able to perform\n   *       this operation.</p>\n   */\n  public deleteQueryDefinition(\n    args: DeleteQueryDefinitionCommandInput,\n    options?: __HttpHandlerOptions\n  ): Promise<DeleteQueryDefinitionCommandOutput>;\n  public deleteQueryDefinition(\n    args: DeleteQueryDefinitionCommandInput,\n    cb: (err: any, data?: DeleteQueryDefinitionCommandOutput) => void\n  ): void;\n  public deleteQueryDefinition(\n    args: DeleteQueryDefinitionCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: DeleteQueryDefinitionCommandOutput) => void\n  ): void;\n  public deleteQueryDefinition(\n    args: DeleteQueryDefinitionCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: DeleteQueryDefinitionCommandOutput) => void),\n    cb?: (err: any, data?: DeleteQueryDefinitionCommandOutput) => void\n  ): Promise<DeleteQueryDefinitionCommandOutput> | void {\n    const command = new DeleteQueryDefinitionCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Deletes a resource policy from this account. This revokes\n   *     the access of the identities in that policy to put log events to this account.</p>\n   */\n  public deleteResourcePolicy(\n    args: DeleteResourcePolicyCommandInput,\n    options?: __HttpHandlerOptions\n  ): Promise<DeleteResourcePolicyCommandOutput>;\n  public deleteResourcePolicy(\n    args: DeleteResourcePolicyCommandInput,\n    cb: (err: any, data?: DeleteResourcePolicyCommandOutput) => void\n  ): void;\n  public deleteResourcePolicy(\n    args: DeleteResourcePolicyCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: DeleteResourcePolicyCommandOutput) => void\n  ): void;\n  public deleteResourcePolicy(\n    args: DeleteResourcePolicyCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: DeleteResourcePolicyCommandOutput) => void),\n    cb?: (err: any, data?: DeleteResourcePolicyCommandOutput) => void\n  ): Promise<DeleteResourcePolicyCommandOutput> | void {\n    const command = new DeleteResourcePolicyCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Deletes the specified retention policy.</p>\n   *          <p>Log events do not expire if they belong to log groups without a retention policy.</p>\n   */\n  public deleteRetentionPolicy(\n    args: DeleteRetentionPolicyCommandInput,\n    options?: __HttpHandlerOptions\n  ): Promise<DeleteRetentionPolicyCommandOutput>;\n  public deleteRetentionPolicy(\n    args: DeleteRetentionPolicyCommandInput,\n    cb: (err: any, data?: DeleteRetentionPolicyCommandOutput) => void\n  ): void;\n  public deleteRetentionPolicy(\n    args: DeleteRetentionPolicyCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: DeleteRetentionPolicyCommandOutput) => void\n  ): void;\n  public deleteRetentionPolicy(\n    args: DeleteRetentionPolicyCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: DeleteRetentionPolicyCommandOutput) => void),\n    cb?: (err: any, data?: DeleteRetentionPolicyCommandOutput) => void\n  ): Promise<DeleteRetentionPolicyCommandOutput> | void {\n    const command = new DeleteRetentionPolicyCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Deletes the specified subscription filter.</p>\n   */\n  public deleteSubscriptionFilter(\n    args: DeleteSubscriptionFilterCommandInput,\n    options?: __HttpHandlerOptions\n  ): Promise<DeleteSubscriptionFilterCommandOutput>;\n  public deleteSubscriptionFilter(\n    args: DeleteSubscriptionFilterCommandInput,\n    cb: (err: any, data?: DeleteSubscriptionFilterCommandOutput) => void\n  ): void;\n  public deleteSubscriptionFilter(\n    args: DeleteSubscriptionFilterCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: DeleteSubscriptionFilterCommandOutput) => void\n  ): void;\n  public deleteSubscriptionFilter(\n    args: DeleteSubscriptionFilterCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: DeleteSubscriptionFilterCommandOutput) => void),\n    cb?: (err: any, data?: DeleteSubscriptionFilterCommandOutput) => void\n  ): Promise<DeleteSubscriptionFilterCommandOutput> | void {\n    const command = new DeleteSubscriptionFilterCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Lists all your destinations. The results are ASCII-sorted by destination name.</p>\n   */\n  public describeDestinations(\n    args: DescribeDestinationsCommandInput,\n    options?: __HttpHandlerOptions\n  ): Promise<DescribeDestinationsCommandOutput>;\n  public describeDestinations(\n    args: DescribeDestinationsCommandInput,\n    cb: (err: any, data?: DescribeDestinationsCommandOutput) => void\n  ): void;\n  public describeDestinations(\n    args: DescribeDestinationsCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: DescribeDestinationsCommandOutput) => void\n  ): void;\n  public describeDestinations(\n    args: DescribeDestinationsCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: DescribeDestinationsCommandOutput) => void),\n    cb?: (err: any, data?: DescribeDestinationsCommandOutput) => void\n  ): Promise<DescribeDestinationsCommandOutput> | void {\n    const command = new DescribeDestinationsCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Lists the specified export tasks. You can list all your export tasks or filter\n   *       the results based on task ID or task status.</p>\n   */\n  public describeExportTasks(\n    args: DescribeExportTasksCommandInput,\n    options?: __HttpHandlerOptions\n  ): Promise<DescribeExportTasksCommandOutput>;\n  public describeExportTasks(\n    args: DescribeExportTasksCommandInput,\n    cb: (err: any, data?: DescribeExportTasksCommandOutput) => void\n  ): void;\n  public describeExportTasks(\n    args: DescribeExportTasksCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: DescribeExportTasksCommandOutput) => void\n  ): void;\n  public describeExportTasks(\n    args: DescribeExportTasksCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: DescribeExportTasksCommandOutput) => void),\n    cb?: (err: any, data?: DescribeExportTasksCommandOutput) => void\n  ): Promise<DescribeExportTasksCommandOutput> | void {\n    const command = new DescribeExportTasksCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Lists the specified log groups. You can list all your log groups or filter the results by prefix.\n   *       The results are ASCII-sorted by log group name.</p>\n   */\n  public describeLogGroups(\n    args: DescribeLogGroupsCommandInput,\n    options?: __HttpHandlerOptions\n  ): Promise<DescribeLogGroupsCommandOutput>;\n  public describeLogGroups(\n    args: DescribeLogGroupsCommandInput,\n    cb: (err: any, data?: DescribeLogGroupsCommandOutput) => void\n  ): void;\n  public describeLogGroups(\n    args: DescribeLogGroupsCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: DescribeLogGroupsCommandOutput) => void\n  ): void;\n  public describeLogGroups(\n    args: DescribeLogGroupsCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: DescribeLogGroupsCommandOutput) => void),\n    cb?: (err: any, data?: DescribeLogGroupsCommandOutput) => void\n  ): Promise<DescribeLogGroupsCommandOutput> | void {\n    const command = new DescribeLogGroupsCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Lists the log streams for the specified log group.\n   *       You can list all the log streams or filter the results by prefix.\n   *       You can also control how the results are ordered.</p>\n   *          <p>This operation has a limit of five transactions per second, after which transactions are throttled.</p>\n   */\n  public describeLogStreams(\n    args: DescribeLogStreamsCommandInput,\n    options?: __HttpHandlerOptions\n  ): Promise<DescribeLogStreamsCommandOutput>;\n  public describeLogStreams(\n    args: DescribeLogStreamsCommandInput,\n    cb: (err: any, data?: DescribeLogStreamsCommandOutput) => void\n  ): void;\n  public describeLogStreams(\n    args: DescribeLogStreamsCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: DescribeLogStreamsCommandOutput) => void\n  ): void;\n  public describeLogStreams(\n    args: DescribeLogStreamsCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: DescribeLogStreamsCommandOutput) => void),\n    cb?: (err: any, data?: DescribeLogStreamsCommandOutput) => void\n  ): Promise<DescribeLogStreamsCommandOutput> | void {\n    const command = new DescribeLogStreamsCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Lists the specified metric filters. You can list all of the metric filters or filter\n   *       the results by log name, prefix, metric name, or metric namespace. The results are\n   *       ASCII-sorted by filter name.</p>\n   */\n  public describeMetricFilters(\n    args: DescribeMetricFiltersCommandInput,\n    options?: __HttpHandlerOptions\n  ): Promise<DescribeMetricFiltersCommandOutput>;\n  public describeMetricFilters(\n    args: DescribeMetricFiltersCommandInput,\n    cb: (err: any, data?: DescribeMetricFiltersCommandOutput) => void\n  ): void;\n  public describeMetricFilters(\n    args: DescribeMetricFiltersCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: DescribeMetricFiltersCommandOutput) => void\n  ): void;\n  public describeMetricFilters(\n    args: DescribeMetricFiltersCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: DescribeMetricFiltersCommandOutput) => void),\n    cb?: (err: any, data?: DescribeMetricFiltersCommandOutput) => void\n  ): Promise<DescribeMetricFiltersCommandOutput> | void {\n    const command = new DescribeMetricFiltersCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Returns a list of CloudWatch Logs Insights queries that are scheduled, executing, or have\n   *       been executed recently in this account. You can request all queries or limit it to queries of\n   *       a specific log group or queries with a certain status.</p>\n   */\n  public describeQueries(\n    args: DescribeQueriesCommandInput,\n    options?: __HttpHandlerOptions\n  ): Promise<DescribeQueriesCommandOutput>;\n  public describeQueries(\n    args: DescribeQueriesCommandInput,\n    cb: (err: any, data?: DescribeQueriesCommandOutput) => void\n  ): void;\n  public describeQueries(\n    args: DescribeQueriesCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: DescribeQueriesCommandOutput) => void\n  ): void;\n  public describeQueries(\n    args: DescribeQueriesCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: DescribeQueriesCommandOutput) => void),\n    cb?: (err: any, data?: DescribeQueriesCommandOutput) => void\n  ): Promise<DescribeQueriesCommandOutput> | void {\n    const command = new DescribeQueriesCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>This operation returns a paginated list of your saved CloudWatch Logs Insights query definitions.</p>\n   *          <p>You can use the <code>queryDefinitionNamePrefix</code> parameter to limit the results to only the\n   *       query definitions that have names that start with a certain string.</p>\n   */\n  public describeQueryDefinitions(\n    args: DescribeQueryDefinitionsCommandInput,\n    options?: __HttpHandlerOptions\n  ): Promise<DescribeQueryDefinitionsCommandOutput>;\n  public describeQueryDefinitions(\n    args: DescribeQueryDefinitionsCommandInput,\n    cb: (err: any, data?: DescribeQueryDefinitionsCommandOutput) => void\n  ): void;\n  public describeQueryDefinitions(\n    args: DescribeQueryDefinitionsCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: DescribeQueryDefinitionsCommandOutput) => void\n  ): void;\n  public describeQueryDefinitions(\n    args: DescribeQueryDefinitionsCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: DescribeQueryDefinitionsCommandOutput) => void),\n    cb?: (err: any, data?: DescribeQueryDefinitionsCommandOutput) => void\n  ): Promise<DescribeQueryDefinitionsCommandOutput> | void {\n    const command = new DescribeQueryDefinitionsCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Lists the resource policies in this account.</p>\n   */\n  public describeResourcePolicies(\n    args: DescribeResourcePoliciesCommandInput,\n    options?: __HttpHandlerOptions\n  ): Promise<DescribeResourcePoliciesCommandOutput>;\n  public describeResourcePolicies(\n    args: DescribeResourcePoliciesCommandInput,\n    cb: (err: any, data?: DescribeResourcePoliciesCommandOutput) => void\n  ): void;\n  public describeResourcePolicies(\n    args: DescribeResourcePoliciesCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: DescribeResourcePoliciesCommandOutput) => void\n  ): void;\n  public describeResourcePolicies(\n    args: DescribeResourcePoliciesCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: DescribeResourcePoliciesCommandOutput) => void),\n    cb?: (err: any, data?: DescribeResourcePoliciesCommandOutput) => void\n  ): Promise<DescribeResourcePoliciesCommandOutput> | void {\n    const command = new DescribeResourcePoliciesCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Lists the subscription filters for the specified log group. You can list all the subscription filters or filter the results by prefix.\n   *       The results are ASCII-sorted by filter name.</p>\n   */\n  public describeSubscriptionFilters(\n    args: DescribeSubscriptionFiltersCommandInput,\n    options?: __HttpHandlerOptions\n  ): Promise<DescribeSubscriptionFiltersCommandOutput>;\n  public describeSubscriptionFilters(\n    args: DescribeSubscriptionFiltersCommandInput,\n    cb: (err: any, data?: DescribeSubscriptionFiltersCommandOutput) => void\n  ): void;\n  public describeSubscriptionFilters(\n    args: DescribeSubscriptionFiltersCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: DescribeSubscriptionFiltersCommandOutput) => void\n  ): void;\n  public describeSubscriptionFilters(\n    args: DescribeSubscriptionFiltersCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: DescribeSubscriptionFiltersCommandOutput) => void),\n    cb?: (err: any, data?: DescribeSubscriptionFiltersCommandOutput) => void\n  ): Promise<DescribeSubscriptionFiltersCommandOutput> | void {\n    const command = new DescribeSubscriptionFiltersCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Disassociates the associated AWS Key Management Service (AWS KMS) customer master key (CMK) from the specified log group.</p>\n   *          <p>After the AWS KMS CMK is disassociated from the log group, AWS CloudWatch Logs stops encrypting newly ingested data for the log group.\n   *       All previously ingested data remains encrypted, and AWS CloudWatch Logs requires permissions for the CMK whenever the encrypted data is requested.</p>\n   *          <p>Note that it can take up to 5 minutes for this operation to take effect.</p>\n   */\n  public disassociateKmsKey(\n    args: DisassociateKmsKeyCommandInput,\n    options?: __HttpHandlerOptions\n  ): Promise<DisassociateKmsKeyCommandOutput>;\n  public disassociateKmsKey(\n    args: DisassociateKmsKeyCommandInput,\n    cb: (err: any, data?: DisassociateKmsKeyCommandOutput) => void\n  ): void;\n  public disassociateKmsKey(\n    args: DisassociateKmsKeyCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: DisassociateKmsKeyCommandOutput) => void\n  ): void;\n  public disassociateKmsKey(\n    args: DisassociateKmsKeyCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: DisassociateKmsKeyCommandOutput) => void),\n    cb?: (err: any, data?: DisassociateKmsKeyCommandOutput) => void\n  ): Promise<DisassociateKmsKeyCommandOutput> | void {\n    const command = new DisassociateKmsKeyCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Lists log events from the specified log group. You can list all the log events or filter the results\n   *       using a filter pattern, a time range, and the name of the log stream.</p>\n   *          <p>By default, this operation returns as many log events as can fit in 1 MB (up to 10,000\n   *       log events) or all the events found within the time range that you specify. If the results\n   *       include a token, then there are more log events available, and you can get additional results\n   *       by specifying the token in a subsequent call. This operation can return empty results\n   *     while there are more log events available through the token.</p>\n   *          <p>The returned log events are sorted by event timestamp, the timestamp when the event was ingested\n   *     by CloudWatch Logs, and the ID of the <code>PutLogEvents</code> request.</p>\n   */\n  public filterLogEvents(\n    args: FilterLogEventsCommandInput,\n    options?: __HttpHandlerOptions\n  ): Promise<FilterLogEventsCommandOutput>;\n  public filterLogEvents(\n    args: FilterLogEventsCommandInput,\n    cb: (err: any, data?: FilterLogEventsCommandOutput) => void\n  ): void;\n  public filterLogEvents(\n    args: FilterLogEventsCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: FilterLogEventsCommandOutput) => void\n  ): void;\n  public filterLogEvents(\n    args: FilterLogEventsCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: FilterLogEventsCommandOutput) => void),\n    cb?: (err: any, data?: FilterLogEventsCommandOutput) => void\n  ): Promise<FilterLogEventsCommandOutput> | void {\n    const command = new FilterLogEventsCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Lists log events from the specified log stream. You can list all of the log events or\n   *       filter using a time range.</p>\n   *\n   *          <p>By default, this operation returns as many log events as can fit in a response size of 1MB (up to 10,000 log events).\n   *       You can get additional log events by specifying one of the tokens in a subsequent call.\n   *       This operation can return empty results while there are more log events available through the token.</p>\n   */\n  public getLogEvents(\n    args: GetLogEventsCommandInput,\n    options?: __HttpHandlerOptions\n  ): Promise<GetLogEventsCommandOutput>;\n  public getLogEvents(args: GetLogEventsCommandInput, cb: (err: any, data?: GetLogEventsCommandOutput) => void): void;\n  public getLogEvents(\n    args: GetLogEventsCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: GetLogEventsCommandOutput) => void\n  ): void;\n  public getLogEvents(\n    args: GetLogEventsCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: GetLogEventsCommandOutput) => void),\n    cb?: (err: any, data?: GetLogEventsCommandOutput) => void\n  ): Promise<GetLogEventsCommandOutput> | void {\n    const command = new GetLogEventsCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Returns a list of the fields that are included in log events in the specified log group, along with the percentage of log events\n   *     that contain each field. The search is limited to a time period that you specify.</p>\n   *          <p>In the results, fields that start with @ are fields generated by CloudWatch Logs. For\n   *       example, <code>@timestamp</code> is the timestamp of each log event. For more information about the fields that are\n   *       generated by CloudWatch logs, see\n   *       <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CWL_AnalyzeLogData-discoverable-fields.html\">Supported Logs and Discovered Fields</a>.</p>\n   *          <p>The response results are sorted by the frequency percentage, starting\n   *     with the highest percentage.</p>\n   */\n  public getLogGroupFields(\n    args: GetLogGroupFieldsCommandInput,\n    options?: __HttpHandlerOptions\n  ): Promise<GetLogGroupFieldsCommandOutput>;\n  public getLogGroupFields(\n    args: GetLogGroupFieldsCommandInput,\n    cb: (err: any, data?: GetLogGroupFieldsCommandOutput) => void\n  ): void;\n  public getLogGroupFields(\n    args: GetLogGroupFieldsCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: GetLogGroupFieldsCommandOutput) => void\n  ): void;\n  public getLogGroupFields(\n    args: GetLogGroupFieldsCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: GetLogGroupFieldsCommandOutput) => void),\n    cb?: (err: any, data?: GetLogGroupFieldsCommandOutput) => void\n  ): Promise<GetLogGroupFieldsCommandOutput> | void {\n    const command = new GetLogGroupFieldsCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Retrieves all of the fields and values of a single log event. All fields are retrieved,\n   *       even if the original query that produced the <code>logRecordPointer</code> retrieved only a\n   *       subset of fields. Fields are returned as field name/field value pairs.</p>\n   *          <p>The full unparsed log event is returned within <code>@message</code>.</p>\n   */\n  public getLogRecord(\n    args: GetLogRecordCommandInput,\n    options?: __HttpHandlerOptions\n  ): Promise<GetLogRecordCommandOutput>;\n  public getLogRecord(args: GetLogRecordCommandInput, cb: (err: any, data?: GetLogRecordCommandOutput) => void): void;\n  public getLogRecord(\n    args: GetLogRecordCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: GetLogRecordCommandOutput) => void\n  ): void;\n  public getLogRecord(\n    args: GetLogRecordCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: GetLogRecordCommandOutput) => void),\n    cb?: (err: any, data?: GetLogRecordCommandOutput) => void\n  ): Promise<GetLogRecordCommandOutput> | void {\n    const command = new GetLogRecordCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Returns the results from the specified query.</p>\n   *          <p>Only the fields requested in the query are returned, along with a <code>@ptr</code>\n   *       field, which is the identifier for the log record. You can use the value of <code>@ptr</code>\n   *       in a <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_GetLogRecord.html\">GetLogRecord</a>\n   *       operation to get the full log record.</p>\n   *          <p>\n   *             <code>GetQueryResults</code>\n   *       does not start a query execution. To run a query, use <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_StartQuery.html\">StartQuery</a>.</p>\n   *          <p>If the value of the <code>Status</code> field in the output is <code>Running</code>, this operation\n   *       returns only partial results. If you see a value of <code>Scheduled</code> or <code>Running</code> for the status,\n   *       you can retry the operation later to see the final results. </p>\n   */\n  public getQueryResults(\n    args: GetQueryResultsCommandInput,\n    options?: __HttpHandlerOptions\n  ): Promise<GetQueryResultsCommandOutput>;\n  public getQueryResults(\n    args: GetQueryResultsCommandInput,\n    cb: (err: any, data?: GetQueryResultsCommandOutput) => void\n  ): void;\n  public getQueryResults(\n    args: GetQueryResultsCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: GetQueryResultsCommandOutput) => void\n  ): void;\n  public getQueryResults(\n    args: GetQueryResultsCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: GetQueryResultsCommandOutput) => void),\n    cb?: (err: any, data?: GetQueryResultsCommandOutput) => void\n  ): Promise<GetQueryResultsCommandOutput> | void {\n    const command = new GetQueryResultsCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Lists the tags for the specified log group.</p>\n   */\n  public listTagsLogGroup(\n    args: ListTagsLogGroupCommandInput,\n    options?: __HttpHandlerOptions\n  ): Promise<ListTagsLogGroupCommandOutput>;\n  public listTagsLogGroup(\n    args: ListTagsLogGroupCommandInput,\n    cb: (err: any, data?: ListTagsLogGroupCommandOutput) => void\n  ): void;\n  public listTagsLogGroup(\n    args: ListTagsLogGroupCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: ListTagsLogGroupCommandOutput) => void\n  ): void;\n  public listTagsLogGroup(\n    args: ListTagsLogGroupCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: ListTagsLogGroupCommandOutput) => void),\n    cb?: (err: any, data?: ListTagsLogGroupCommandOutput) => void\n  ): Promise<ListTagsLogGroupCommandOutput> | void {\n    const command = new ListTagsLogGroupCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Creates or updates a destination. This operation is used only to create destinations for cross-account subscriptions.</p>\n   *          <p>A destination encapsulates a physical resource (such\n   *       as an Amazon Kinesis stream) and enables you to subscribe to a real-time stream of log events\n   *       for a different account, ingested using <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutLogEvents.html\">PutLogEvents</a>.</p>\n   *          <p>Through an access policy, a destination controls what is written to it.\n   *       By default, <code>PutDestination</code> does not set any access policy with the destination,\n   *       which means a cross-account user cannot call <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutSubscriptionFilter.html\">PutSubscriptionFilter</a> against\n   *       this destination. To enable this, the destination owner must call <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDestinationPolicy.html\">PutDestinationPolicy</a> after <code>PutDestination</code>.</p>\n   *          <p>To perform a <code>PutDestination</code> operation, you must also have the\n   *     <code>iam:PassRole</code> permission.</p>\n   */\n  public putDestination(\n    args: PutDestinationCommandInput,\n    options?: __HttpHandlerOptions\n  ): Promise<PutDestinationCommandOutput>;\n  public putDestination(\n    args: PutDestinationCommandInput,\n    cb: (err: any, data?: PutDestinationCommandOutput) => void\n  ): void;\n  public putDestination(\n    args: PutDestinationCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: PutDestinationCommandOutput) => void\n  ): void;\n  public putDestination(\n    args: PutDestinationCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: PutDestinationCommandOutput) => void),\n    cb?: (err: any, data?: PutDestinationCommandOutput) => void\n  ): Promise<PutDestinationCommandOutput> | void {\n    const command = new PutDestinationCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Creates or updates an access policy associated with an existing\n   *       destination. An access policy is an <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies_overview.html\">IAM policy document</a> that is used\n   *       to authorize claims to register a subscription filter against a given destination.</p>\n   */\n  public putDestinationPolicy(\n    args: PutDestinationPolicyCommandInput,\n    options?: __HttpHandlerOptions\n  ): Promise<PutDestinationPolicyCommandOutput>;\n  public putDestinationPolicy(\n    args: PutDestinationPolicyCommandInput,\n    cb: (err: any, data?: PutDestinationPolicyCommandOutput) => void\n  ): void;\n  public putDestinationPolicy(\n    args: PutDestinationPolicyCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: PutDestinationPolicyCommandOutput) => void\n  ): void;\n  public putDestinationPolicy(\n    args: PutDestinationPolicyCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: PutDestinationPolicyCommandOutput) => void),\n    cb?: (err: any, data?: PutDestinationPolicyCommandOutput) => void\n  ): Promise<PutDestinationPolicyCommandOutput> | void {\n    const command = new PutDestinationPolicyCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Uploads a batch of log events to the specified log stream.</p>\n   *          <p>You must include the sequence token obtained from the response of the previous call. An\n   *       upload in a newly created log stream does not require a sequence token. You can also get the\n   *       sequence token in the <code>expectedSequenceToken</code> field from\n   *         <code>InvalidSequenceTokenException</code>. If you call <code>PutLogEvents</code> twice\n   *       within a narrow time period using the same value for <code>sequenceToken</code>, both calls\n   *       might be successful or one might be rejected.</p>\n   *          <p>The batch of events must satisfy the following constraints:</p>\n   *          <ul>\n   *             <li>\n   *                <p>The maximum batch size is 1,048,576 bytes. This size is calculated as the sum of\n   *           all event messages in UTF-8, plus 26 bytes for each log event.</p>\n   *             </li>\n   *             <li>\n   *                <p>None of the log events in the batch can be more than 2 hours in the future.</p>\n   *             </li>\n   *             <li>\n   *                <p>None of the log events in the batch can be older than 14 days or older than the retention\n   *           period of the log group.</p>\n   *             </li>\n   *             <li>\n   *                <p>The log events in the batch must be in chronological order by their timestamp. The\n   *           timestamp is the time the event occurred, expressed as the number of milliseconds after\n   *           Jan 1, 1970 00:00:00 UTC. (In AWS Tools for PowerShell and the AWS SDK for .NET, the\n   *           timestamp is specified in .NET format: yyyy-mm-ddThh:mm:ss. For example,\n   *           2017-09-15T13:45:30.) </p>\n   *             </li>\n   *             <li>\n   *                <p>A batch of log events in a single request cannot span more than 24 hours. Otherwise, the operation fails.</p>\n   *             </li>\n   *             <li>\n   *                <p>The maximum number of log events in a batch is 10,000.</p>\n   *             </li>\n   *             <li>\n   *                <p>There is a quota of 5 requests per second per log stream. Additional requests are throttled. This quota can't be changed.</p>\n   *             </li>\n   *          </ul>\n   *          <p>If a call to <code>PutLogEvents</code> returns \"UnrecognizedClientException\" the most likely cause is an invalid AWS access key ID or secret key. </p>\n   */\n  public putLogEvents(\n    args: PutLogEventsCommandInput,\n    options?: __HttpHandlerOptions\n  ): Promise<PutLogEventsCommandOutput>;\n  public putLogEvents(args: PutLogEventsCommandInput, cb: (err: any, data?: PutLogEventsCommandOutput) => void): void;\n  public putLogEvents(\n    args: PutLogEventsCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: PutLogEventsCommandOutput) => void\n  ): void;\n  public putLogEvents(\n    args: PutLogEventsCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: PutLogEventsCommandOutput) => void),\n    cb?: (err: any, data?: PutLogEventsCommandOutput) => void\n  ): Promise<PutLogEventsCommandOutput> | void {\n    const command = new PutLogEventsCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Creates or updates a metric filter and associates it with the specified log group.\n   *       Metric filters allow you to configure rules to extract metric data from log events ingested\n   *       through <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutLogEvents.html\">PutLogEvents</a>.</p>\n   *          <p>The maximum number of metric filters that can be associated with a log group is\n   *       100.</p>\n   */\n  public putMetricFilter(\n    args: PutMetricFilterCommandInput,\n    options?: __HttpHandlerOptions\n  ): Promise<PutMetricFilterCommandOutput>;\n  public putMetricFilter(\n    args: PutMetricFilterCommandInput,\n    cb: (err: any, data?: PutMetricFilterCommandOutput) => void\n  ): void;\n  public putMetricFilter(\n    args: PutMetricFilterCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: PutMetricFilterCommandOutput) => void\n  ): void;\n  public putMetricFilter(\n    args: PutMetricFilterCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: PutMetricFilterCommandOutput) => void),\n    cb?: (err: any, data?: PutMetricFilterCommandOutput) => void\n  ): Promise<PutMetricFilterCommandOutput> | void {\n    const command = new PutMetricFilterCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Creates or updates a query definition for CloudWatch Logs Insights. For\n   *       more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/AnalyzingLogData.html\">Analyzing Log Data with CloudWatch Logs Insights</a>.</p>\n   *\n   *          <p>To update a query definition, specify its\n   *         <code>queryDefinitionId</code> in your request. The values of <code>name</code>, <code>queryString</code>,\n   *       and <code>logGroupNames</code> are changed to the values that you specify in your update\n   *       operation. No current values are retained from the current query definition. For example, if\n   *       you update a current query definition that includes log groups, and you don't specify the\n   *         <code>logGroupNames</code> parameter in your update operation, the query definition changes\n   *       to contain no log groups.</p>\n   *          <p>You must have the <code>logs:PutQueryDefinition</code> permission to be able to perform\n   *     this operation.</p>\n   */\n  public putQueryDefinition(\n    args: PutQueryDefinitionCommandInput,\n    options?: __HttpHandlerOptions\n  ): Promise<PutQueryDefinitionCommandOutput>;\n  public putQueryDefinition(\n    args: PutQueryDefinitionCommandInput,\n    cb: (err: any, data?: PutQueryDefinitionCommandOutput) => void\n  ): void;\n  public putQueryDefinition(\n    args: PutQueryDefinitionCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: PutQueryDefinitionCommandOutput) => void\n  ): void;\n  public putQueryDefinition(\n    args: PutQueryDefinitionCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: PutQueryDefinitionCommandOutput) => void),\n    cb?: (err: any, data?: PutQueryDefinitionCommandOutput) => void\n  ): Promise<PutQueryDefinitionCommandOutput> | void {\n    const command = new PutQueryDefinitionCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Creates or updates a resource policy allowing other AWS services to put log events to\n   *       this account, such as Amazon Route 53. An account can have up to 10 resource policies per AWS\n   *       Region.</p>\n   */\n  public putResourcePolicy(\n    args: PutResourcePolicyCommandInput,\n    options?: __HttpHandlerOptions\n  ): Promise<PutResourcePolicyCommandOutput>;\n  public putResourcePolicy(\n    args: PutResourcePolicyCommandInput,\n    cb: (err: any, data?: PutResourcePolicyCommandOutput) => void\n  ): void;\n  public putResourcePolicy(\n    args: PutResourcePolicyCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: PutResourcePolicyCommandOutput) => void\n  ): void;\n  public putResourcePolicy(\n    args: PutResourcePolicyCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: PutResourcePolicyCommandOutput) => void),\n    cb?: (err: any, data?: PutResourcePolicyCommandOutput) => void\n  ): Promise<PutResourcePolicyCommandOutput> | void {\n    const command = new PutResourcePolicyCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Sets the retention of the specified log group. A retention policy allows you to\n   *       configure the number of days for which to retain log events in the specified log\n   *       group.</p>\n   */\n  public putRetentionPolicy(\n    args: PutRetentionPolicyCommandInput,\n    options?: __HttpHandlerOptions\n  ): Promise<PutRetentionPolicyCommandOutput>;\n  public putRetentionPolicy(\n    args: PutRetentionPolicyCommandInput,\n    cb: (err: any, data?: PutRetentionPolicyCommandOutput) => void\n  ): void;\n  public putRetentionPolicy(\n    args: PutRetentionPolicyCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: PutRetentionPolicyCommandOutput) => void\n  ): void;\n  public putRetentionPolicy(\n    args: PutRetentionPolicyCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: PutRetentionPolicyCommandOutput) => void),\n    cb?: (err: any, data?: PutRetentionPolicyCommandOutput) => void\n  ): Promise<PutRetentionPolicyCommandOutput> | void {\n    const command = new PutRetentionPolicyCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Creates or updates a subscription filter and associates it with the specified log\n   *       group. Subscription filters allow you to subscribe to a real-time stream of log events\n   *       ingested through <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutLogEvents.html\">PutLogEvents</a> and have them delivered to a specific\n   *       destination. When log events are sent to the\n   *       receiving service, they are Base64 encoded\n   *       and compressed with the gzip format.</p>\n   *          <p>The following destinations are supported for subscription filters:</p>\n   *          <ul>\n   *             <li>\n   *                <p>An Amazon Kinesis stream belonging to the same account as the subscription filter,\n   *           for same-account delivery.</p>\n   *             </li>\n   *             <li>\n   *                <p>A logical destination that belongs to a different account, for cross-account delivery.</p>\n   *             </li>\n   *             <li>\n   *                <p>An Amazon Kinesis Firehose delivery stream that belongs to the same account as the\n   *           subscription filter, for same-account delivery.</p>\n   *             </li>\n   *             <li>\n   *                <p>An AWS Lambda function that belongs to the same account as the subscription filter,\n   *           for same-account delivery.</p>\n   *             </li>\n   *          </ul>\n   *          <p>There can only be one subscription filter associated with a log group. If you are\n   *       updating an existing filter, you must specify the correct name in <code>filterName</code>.\n   *       Otherwise, the call fails because you cannot associate a second filter with a log\n   *       group.</p>\n   *          <p>To perform a <code>PutSubscriptionFilter</code> operation, you must also have the\n   *       <code>iam:PassRole</code> permission.</p>\n   */\n  public putSubscriptionFilter(\n    args: PutSubscriptionFilterCommandInput,\n    options?: __HttpHandlerOptions\n  ): Promise<PutSubscriptionFilterCommandOutput>;\n  public putSubscriptionFilter(\n    args: PutSubscriptionFilterCommandInput,\n    cb: (err: any, data?: PutSubscriptionFilterCommandOutput) => void\n  ): void;\n  public putSubscriptionFilter(\n    args: PutSubscriptionFilterCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: PutSubscriptionFilterCommandOutput) => void\n  ): void;\n  public putSubscriptionFilter(\n    args: PutSubscriptionFilterCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: PutSubscriptionFilterCommandOutput) => void),\n    cb?: (err: any, data?: PutSubscriptionFilterCommandOutput) => void\n  ): Promise<PutSubscriptionFilterCommandOutput> | void {\n    const command = new PutSubscriptionFilterCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Schedules a query of a log group using CloudWatch Logs Insights. You specify the log group\n   *       and time range to query and the query string to use.</p>\n   *          <p>For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CWL_QuerySyntax.html\">CloudWatch Logs Insights Query Syntax</a>.</p>\n   *\n   *          <p>Queries time out after 15 minutes of execution. If your queries are timing out, reduce the\n   *       time range being searched or partition your query into a number of queries.</p>\n   */\n  public startQuery(args: StartQueryCommandInput, options?: __HttpHandlerOptions): Promise<StartQueryCommandOutput>;\n  public startQuery(args: StartQueryCommandInput, cb: (err: any, data?: StartQueryCommandOutput) => void): void;\n  public startQuery(\n    args: StartQueryCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: StartQueryCommandOutput) => void\n  ): void;\n  public startQuery(\n    args: StartQueryCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: StartQueryCommandOutput) => void),\n    cb?: (err: any, data?: StartQueryCommandOutput) => void\n  ): Promise<StartQueryCommandOutput> | void {\n    const command = new StartQueryCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Stops a CloudWatch Logs Insights query that is in progress. If the query has already ended, the operation\n   *     returns an error indicating that the specified query is not running.</p>\n   */\n  public stopQuery(args: StopQueryCommandInput, options?: __HttpHandlerOptions): Promise<StopQueryCommandOutput>;\n  public stopQuery(args: StopQueryCommandInput, cb: (err: any, data?: StopQueryCommandOutput) => void): void;\n  public stopQuery(\n    args: StopQueryCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: StopQueryCommandOutput) => void\n  ): void;\n  public stopQuery(\n    args: StopQueryCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: StopQueryCommandOutput) => void),\n    cb?: (err: any, data?: StopQueryCommandOutput) => void\n  ): Promise<StopQueryCommandOutput> | void {\n    const command = new StopQueryCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Adds or updates the specified tags for the specified log group.</p>\n   *          <p>To list the tags for a log group, use <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_ListTagsLogGroup.html\">ListTagsLogGroup</a>.\n   *       To remove tags, use <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_UntagLogGroup.html\">UntagLogGroup</a>.</p>\n   *          <p>For more information about tags, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html#log-group-tagging\">Tag Log Groups in Amazon CloudWatch Logs</a>\n   *       in the <i>Amazon CloudWatch Logs User Guide</i>.</p>\n   */\n  public tagLogGroup(args: TagLogGroupCommandInput, options?: __HttpHandlerOptions): Promise<TagLogGroupCommandOutput>;\n  public tagLogGroup(args: TagLogGroupCommandInput, cb: (err: any, data?: TagLogGroupCommandOutput) => void): void;\n  public tagLogGroup(\n    args: TagLogGroupCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: TagLogGroupCommandOutput) => void\n  ): void;\n  public tagLogGroup(\n    args: TagLogGroupCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: TagLogGroupCommandOutput) => void),\n    cb?: (err: any, data?: TagLogGroupCommandOutput) => void\n  ): Promise<TagLogGroupCommandOutput> | void {\n    const command = new TagLogGroupCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Tests the filter pattern of a metric filter against a sample of log event messages. You\n   *       can use this operation to validate the correctness of a metric filter pattern.</p>\n   */\n  public testMetricFilter(\n    args: TestMetricFilterCommandInput,\n    options?: __HttpHandlerOptions\n  ): Promise<TestMetricFilterCommandOutput>;\n  public testMetricFilter(\n    args: TestMetricFilterCommandInput,\n    cb: (err: any, data?: TestMetricFilterCommandOutput) => void\n  ): void;\n  public testMetricFilter(\n    args: TestMetricFilterCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: TestMetricFilterCommandOutput) => void\n  ): void;\n  public testMetricFilter(\n    args: TestMetricFilterCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: TestMetricFilterCommandOutput) => void),\n    cb?: (err: any, data?: TestMetricFilterCommandOutput) => void\n  ): Promise<TestMetricFilterCommandOutput> | void {\n    const command = new TestMetricFilterCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Removes the specified tags from the specified log group.</p>\n   *          <p>To list the tags for a log group, use <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_ListTagsLogGroup.html\">ListTagsLogGroup</a>.\n   *       To add tags, use <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_TagLogGroup.html\">TagLogGroup</a>.</p>\n   */\n  public untagLogGroup(\n    args: UntagLogGroupCommandInput,\n    options?: __HttpHandlerOptions\n  ): Promise<UntagLogGroupCommandOutput>;\n  public untagLogGroup(\n    args: UntagLogGroupCommandInput,\n    cb: (err: any, data?: UntagLogGroupCommandOutput) => void\n  ): void;\n  public untagLogGroup(\n    args: UntagLogGroupCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: UntagLogGroupCommandOutput) => void\n  ): void;\n  public untagLogGroup(\n    args: UntagLogGroupCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: UntagLogGroupCommandOutput) => void),\n    cb?: (err: any, data?: UntagLogGroupCommandOutput) => void\n  ): Promise<UntagLogGroupCommandOutput> | void {\n    const command = new UntagLogGroupCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n}\n", "/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nimport {\n\tCloudWatchLogsClient,\n\tCreateLogGroupCommand,\n\tCreateLogGroupCommandInput,\n\tCreateLogGroupCommandOutput,\n\tCreateLogStreamCommand,\n\tCreateLogStreamCommandInput,\n\tCreateLogStreamCommandOutput,\n\tDescribeLogGroupsCommand,\n\tDescribeLogGroupsCommandInput,\n\tDescribeLogGroupsCommandOutput,\n\tDescribeLogStreamsCommand,\n\tDescribeLogStreamsCommandInput,\n\tDescribeLogStreamsCommandOutput,\n\tGetLogEventsCommand,\n\tGetLogEventsCommandInput,\n\tGetLogEventsCommandOutput,\n\tInputLogEvent,\n\tLogGroup,\n\tLogStream,\n\tPutLogEventsCommand,\n\tPutLogEventsCommandInput,\n\tPutLogEventsCommandOutput,\n} from '@aws-sdk/client-cloudwatch-logs';\nimport {\n\tAWSCloudWatchProviderOptions,\n\tCloudWatchDataTracker,\n\tLoggingProvider,\n} from '../types/types';\nimport { Credentials } from '../..';\nimport { ConsoleLogger as Logger } from '../Logger';\nimport { getAmplifyUserAgent } from '../Platform';\nimport { parseMobileHubConfig } from '../Parser';\nimport {\n\tAWS_CLOUDWATCH_BASE_BUFFER_SIZE,\n\tAWS_CLOUDWATCH_CATEGORY,\n\tAWS_CLOUDWATCH_MAX_BATCH_EVENT_SIZE,\n\tAWS_CLOUDWATCH_MAX_EVENT_SIZE,\n\tAWS_CLOUDWATCH_PROVIDER_NAME,\n\tNO_CREDS_ERROR_STRING,\n\tRETRY_ERROR_CODES,\n} from '../Util/Constants';\n\nconst logger = new Logger('AWSCloudWatch');\n\nclass AWSCloudWatchProvider implements LoggingProvider {\n\tstatic readonly PROVIDER_NAME = AWS_CLOUDWATCH_PROVIDER_NAME;\n\tstatic readonly CATEGORY = AWS_CLOUDWATCH_CATEGORY;\n\n\tprivate _config: AWSCloudWatchProviderOptions;\n\tprivate _dataTracker: CloudWatchDataTracker;\n\tprivate _currentLogBatch: InputLogEvent[];\n\tprivate _timer;\n\tprivate _nextSequenceToken: string | undefined;\n\n\tconstructor(config?: AWSCloudWatchProviderOptions) {\n\t\tthis.configure(config);\n\t\tthis._dataTracker = {\n\t\t\teventUploadInProgress: false,\n\t\t\tlogEvents: [],\n\t\t};\n\t\tthis._currentLogBatch = [];\n\t\tthis._initiateLogPushInterval();\n\t}\n\n\tpublic getProviderName(): string {\n\t\treturn AWSCloudWatchProvider.PROVIDER_NAME;\n\t}\n\n\tpublic getCategoryName(): string {\n\t\treturn AWSCloudWatchProvider.CATEGORY;\n\t}\n\n\tpublic getLogQueue(): InputLogEvent[] {\n\t\treturn this._dataTracker.logEvents;\n\t}\n\n\tpublic configure(\n\t\tconfig?: AWSCloudWatchProviderOptions\n\t): AWSCloudWatchProviderOptions {\n\t\tif (!config) return this._config || {};\n\n\t\tconst conf = Object.assign(\n\t\t\t{},\n\t\t\tthis._config,\n\t\t\tparseMobileHubConfig(config).Logging,\n\t\t\tconfig\n\t\t);\n\t\tthis._config = conf;\n\n\t\treturn this._config;\n\t}\n\n\tpublic async createLogGroup(\n\t\tparams: CreateLogGroupCommandInput\n\t): Promise<CreateLogGroupCommandOutput> {\n\t\tlogger.debug(\n\t\t\t'creating new log group in CloudWatch - ',\n\t\t\tparams.logGroupName\n\t\t);\n\t\tconst cmd = new CreateLogGroupCommand(params);\n\n\t\ttry {\n\t\t\tconst credentialsOK = await this._ensureCredentials();\n\t\t\tif (!credentialsOK) {\n\t\t\t\tthrow new Error(NO_CREDS_ERROR_STRING);\n\t\t\t}\n\n\t\t\tconst client = this._initCloudWatchLogs();\n\t\t\tconst output = await client.send(cmd);\n\t\t\treturn output;\n\t\t} catch (error) {\n\t\t\tlogger.error(`error creating log group - ${error}`);\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tpublic async getLogGroups(\n\t\tparams: DescribeLogGroupsCommandInput\n\t): Promise<DescribeLogGroupsCommandOutput> {\n\t\tlogger.debug('getting list of log groups');\n\n\t\tconst cmd = new DescribeLogGroupsCommand(params);\n\n\t\ttry {\n\t\t\tconst credentialsOK = await this._ensureCredentials();\n\t\t\tif (!credentialsOK) {\n\t\t\t\tthrow new Error(NO_CREDS_ERROR_STRING);\n\t\t\t}\n\n\t\t\tconst client = this._initCloudWatchLogs();\n\t\t\tconst output = await client.send(cmd);\n\t\t\treturn output;\n\t\t} catch (error) {\n\t\t\tlogger.error(`error getting log group - ${error}`);\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tpublic async createLogStream(\n\t\tparams: CreateLogStreamCommandInput\n\t): Promise<CreateLogStreamCommandOutput> {\n\t\tlogger.debug(\n\t\t\t'creating new log stream in CloudWatch - ',\n\t\t\tparams.logStreamName\n\t\t);\n\t\tconst cmd = new CreateLogStreamCommand(params);\n\n\t\ttry {\n\t\t\tconst credentialsOK = await this._ensureCredentials();\n\t\t\tif (!credentialsOK) {\n\t\t\t\tthrow new Error(NO_CREDS_ERROR_STRING);\n\t\t\t}\n\n\t\t\tconst client = this._initCloudWatchLogs();\n\t\t\tconst output = await client.send(cmd);\n\t\t\treturn output;\n\t\t} catch (error) {\n\t\t\tlogger.error(`error creating log stream - ${error}`);\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tpublic async getLogStreams(\n\t\tparams: DescribeLogStreamsCommandInput\n\t): Promise<DescribeLogStreamsCommandOutput> {\n\t\tlogger.debug('getting list of log streams');\n\t\tconst cmd = new DescribeLogStreamsCommand(params);\n\n\t\ttry {\n\t\t\tconst credentialsOK = await this._ensureCredentials();\n\t\t\tif (!credentialsOK) {\n\t\t\t\tthrow new Error(NO_CREDS_ERROR_STRING);\n\t\t\t}\n\n\t\t\tconst client = this._initCloudWatchLogs();\n\t\t\tconst output = await client.send(cmd);\n\t\t\treturn output;\n\t\t} catch (error) {\n\t\t\tlogger.error(`error getting log stream - ${error}`);\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tpublic async getLogEvents(\n\t\tparams: GetLogEventsCommandInput\n\t): Promise<GetLogEventsCommandOutput> {\n\t\tlogger.debug('getting log events from stream - ', params.logStreamName);\n\t\tconst cmd = new GetLogEventsCommand(params);\n\n\t\ttry {\n\t\t\tconst credentialsOK = await this._ensureCredentials();\n\t\t\tif (!credentialsOK) {\n\t\t\t\tthrow new Error(NO_CREDS_ERROR_STRING);\n\t\t\t}\n\n\t\t\tconst client = this._initCloudWatchLogs();\n\t\t\tconst output = await client.send(cmd);\n\t\t\treturn output;\n\t\t} catch (error) {\n\t\t\tlogger.error(`error getting log events - ${error}`);\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tpublic pushLogs(logs: InputLogEvent[]): void {\n\t\tlogger.debug('pushing log events to Cloudwatch...');\n\t\tthis._dataTracker.logEvents = [...this._dataTracker.logEvents, ...logs];\n\t}\n\n\tprivate async _validateLogGroupExistsAndCreate(\n\t\tlogGroupName: string\n\t): Promise<LogGroup> {\n\t\tif (this._dataTracker.verifiedLogGroup) {\n\t\t\treturn this._dataTracker.verifiedLogGroup;\n\t\t}\n\n\t\ttry {\n\t\t\tconst credentialsOK = await this._ensureCredentials();\n\t\t\tif (!credentialsOK) {\n\t\t\t\tthrow new Error(NO_CREDS_ERROR_STRING);\n\t\t\t}\n\n\t\t\tconst currGroups = await this.getLogGroups({\n\t\t\t\tlogGroupNamePrefix: logGroupName,\n\t\t\t});\n\n\t\t\tif (!(typeof currGroups === 'string') && currGroups.logGroups) {\n\t\t\t\tconst foundGroups = currGroups.logGroups.filter(\n\t\t\t\t\tgroup => group.logGroupName === logGroupName\n\t\t\t\t);\n\t\t\t\tif (foundGroups.length > 0) {\n\t\t\t\t\tthis._dataTracker.verifiedLogGroup = foundGroups[0];\n\n\t\t\t\t\treturn foundGroups[0];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * If we get to this point, it means that the specified log group does not exist\n\t\t\t * and we should create it.\n\t\t\t */\n\t\t\tawait this.createLogGroup({ logGroupName });\n\n\t\t\treturn null;\n\t\t} catch (err) {\n\t\t\tconst errString = `failure during log group search: ${err}`;\n\t\t\tlogger.error(errString);\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\tprivate async _validateLogStreamExists(\n\t\tlogGroupName: string,\n\t\tlogStreamName: string\n\t): Promise<LogStream> {\n\t\ttry {\n\t\t\tconst credentialsOK = await this._ensureCredentials();\n\t\t\tif (!credentialsOK) {\n\t\t\t\tthrow new Error(NO_CREDS_ERROR_STRING);\n\t\t\t}\n\n\t\t\tconst currStreams = await this.getLogStreams({\n\t\t\t\tlogGroupName,\n\t\t\t\tlogStreamNamePrefix: logStreamName,\n\t\t\t});\n\n\t\t\tif (currStreams.logStreams) {\n\t\t\t\tconst foundStreams = currStreams.logStreams.filter(\n\t\t\t\t\tstream => stream.logStreamName === logStreamName\n\t\t\t\t);\n\t\t\t\tif (foundStreams.length > 0) {\n\t\t\t\t\tthis._nextSequenceToken = foundStreams[0].uploadSequenceToken;\n\n\t\t\t\t\treturn foundStreams[0];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * If we get to this point, it means that the specified stream does not\n\t\t\t * exist, and we should create it now.\n\t\t\t */\n\t\t\tawait this.createLogStream({\n\t\t\t\tlogGroupName,\n\t\t\t\tlogStreamName,\n\t\t\t});\n\n\t\t\treturn null;\n\t\t} catch (err) {\n\t\t\tconst errString = `failure during log stream search: ${err}`;\n\t\t\tlogger.error(errString);\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\tprivate async _sendLogEvents(\n\t\tparams: PutLogEventsCommandInput\n\t): Promise<PutLogEventsCommandOutput> {\n\t\ttry {\n\t\t\tconst credentialsOK = await this._ensureCredentials();\n\t\t\tif (!credentialsOK) {\n\t\t\t\tthrow new Error(NO_CREDS_ERROR_STRING);\n\t\t\t}\n\n\t\t\tlogger.debug('sending log events to stream - ', params.logStreamName);\n\t\t\tconst cmd = new PutLogEventsCommand(params);\n\t\t\tconst client = this._initCloudWatchLogs();\n\t\t\tconst output = await client.send(cmd);\n\n\t\t\treturn output;\n\t\t} catch (err) {\n\t\t\tconst errString = `failure during log push: ${err}`;\n\t\t\tlogger.error(errString);\n\t\t}\n\t}\n\n\tprivate _initCloudWatchLogs() {\n\t\treturn new CloudWatchLogsClient({\n\t\t\tregion: this._config.region,\n\t\t\tcredentials: this._config.credentials,\n\t\t\tcustomUserAgent: getAmplifyUserAgent(),\n\t\t\tendpoint: this._config.endpoint,\n\t\t});\n\t}\n\n\tprivate async _ensureCredentials() {\n\t\treturn await Credentials.get()\n\t\t\t.then(credentials => {\n\t\t\t\tif (!credentials) return false;\n\t\t\t\tconst cred = Credentials.shear(credentials);\n\t\t\t\tlogger.debug('set credentials for logging', cred);\n\t\t\t\tthis._config.credentials = cred;\n\n\t\t\t\treturn true;\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tlogger.warn('ensure credentials error', error);\n\t\t\t\treturn false;\n\t\t\t});\n\t}\n\n\tprivate async _getNextSequenceToken(): Promise<string> {\n\t\tif (this._nextSequenceToken && this._nextSequenceToken.length > 0) {\n\t\t\treturn this._nextSequenceToken;\n\t\t}\n\n\t\t/**\n\t\t * A sequence token will not exist if any of the following are true:\n\t\t *   ...the log group does not exist\n\t\t *   ...the log stream does not exist\n\t\t *   ...the log stream does exist but has no logs written to it yet\n\t\t */\n\t\ttry {\n\t\t\tawait this._validateLogGroupExistsAndCreate(this._config.logGroupName);\n\n\t\t\tthis._nextSequenceToken = undefined;\n\n\t\t\tconst logStream = await this._validateLogStreamExists(\n\t\t\t\tthis._config.logGroupName,\n\t\t\t\tthis._config.logStreamName\n\t\t\t);\n\n\t\t\tif (logStream) {\n\t\t\t\tthis._nextSequenceToken = logStream.uploadSequenceToken;\n\t\t\t}\n\n\t\t\treturn this._nextSequenceToken;\n\t\t} catch (err) {\n\t\t\tlogger.error(`failure while getting next sequence token: ${err}`);\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\tprivate async _safeUploadLogEvents(): Promise<PutLogEventsCommandOutput> {\n\t\ttry {\n\t\t\t/**\n\t\t\t * CloudWatch has restrictions on the size of the log events that get sent up.\n\t\t\t * We need to track both the size of each event and the total size of the batch\n\t\t\t * of logs.\n\t\t\t *\n\t\t\t * We also need to ensure that the logs in the batch are sorted in chronological order.\n\t\t\t * https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutLogEvents.html\n\t\t\t */\n\t\t\tconst seqToken = await this._getNextSequenceToken();\n\t\t\tconst logBatch =\n\t\t\t\tthis._currentLogBatch.length === 0\n\t\t\t\t\t? this._getBufferedBatchOfLogs()\n\t\t\t\t\t: this._currentLogBatch;\n\n\t\t\tconst putLogsPayload: PutLogEventsCommandInput = {\n\t\t\t\tlogGroupName: this._config.logGroupName,\n\t\t\t\tlogStreamName: this._config.logStreamName,\n\t\t\t\tlogEvents: logBatch,\n\t\t\t\tsequenceToken: seqToken,\n\t\t\t};\n\n\t\t\tthis._dataTracker.eventUploadInProgress = true;\n\t\t\tconst sendLogEventsResponse = await this._sendLogEvents(putLogsPayload);\n\n\t\t\tthis._nextSequenceToken = sendLogEventsResponse.nextSequenceToken;\n\t\t\tthis._dataTracker.eventUploadInProgress = false;\n\t\t\tthis._currentLogBatch = [];\n\n\t\t\treturn sendLogEventsResponse;\n\t\t} catch (err) {\n\t\t\tlogger.error(`error during _safeUploadLogEvents: ${err}`);\n\n\t\t\tif (RETRY_ERROR_CODES.includes(err.name)) {\n\t\t\t\tthis._getNewSequenceTokenAndSubmit({\n\t\t\t\t\tlogEvents: this._currentLogBatch,\n\t\t\t\t\tlogGroupName: this._config.logGroupName,\n\t\t\t\t\tlogStreamName: this._config.logStreamName,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis._dataTracker.eventUploadInProgress = false;\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _getBufferedBatchOfLogs(): InputLogEvent[] {\n\t\t/**\n\t\t * CloudWatch has restrictions on the size of the log events that get sent up.\n\t\t * We need to track both the size of each event and the total size of the batch\n\t\t * of logs.\n\t\t *\n\t\t * We also need to ensure that the logs in the batch are sorted in chronological order.\n\t\t * https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutLogEvents.html\n\t\t */\n\t\tlet currentEventIdx = 0;\n\t\tlet totalByteSize = 0;\n\n\t\twhile (currentEventIdx < this._dataTracker.logEvents.length) {\n\t\t\tconst currentEvent = this._dataTracker.logEvents[currentEventIdx];\n\t\t\tconst eventSize = currentEvent\n\t\t\t\t? new TextEncoder().encode(currentEvent.message).length +\n\t\t\t\t  AWS_CLOUDWATCH_BASE_BUFFER_SIZE\n\t\t\t\t: 0;\n\t\t\tif (eventSize > AWS_CLOUDWATCH_MAX_EVENT_SIZE) {\n\t\t\t\tconst errString = `Log entry exceeds maximum size for CloudWatch logs. Log size: ${eventSize}. Truncating log message.`;\n\t\t\t\tlogger.warn(errString);\n\n\t\t\t\tcurrentEvent.message = currentEvent.message.substring(0, eventSize);\n\t\t\t}\n\n\t\t\tif (totalByteSize + eventSize > AWS_CLOUDWATCH_MAX_BATCH_EVENT_SIZE)\n\t\t\t\tbreak;\n\t\t\ttotalByteSize += eventSize;\n\t\t\tcurrentEventIdx++;\n\t\t}\n\n\t\tthis._currentLogBatch = this._dataTracker.logEvents.splice(\n\t\t\t0,\n\t\t\tcurrentEventIdx\n\t\t);\n\n\t\treturn this._currentLogBatch;\n\t}\n\n\tprivate async _getNewSequenceTokenAndSubmit(\n\t\tpayload: PutLogEventsCommandInput\n\t): Promise<PutLogEventsCommandOutput> {\n\t\ttry {\n\t\t\tthis._nextSequenceToken = undefined;\n\t\t\tthis._dataTracker.eventUploadInProgress = true;\n\n\t\t\tconst seqToken = await this._getNextSequenceToken();\n\t\t\tpayload.sequenceToken = seqToken;\n\t\t\tconst sendLogEventsRepsonse = await this._sendLogEvents(payload);\n\n\t\t\tthis._dataTracker.eventUploadInProgress = false;\n\t\t\tthis._currentLogBatch = [];\n\n\t\t\treturn sendLogEventsRepsonse;\n\t\t} catch (err) {\n\t\t\tlogger.error(\n\t\t\t\t`error when retrying log submission with new sequence token: ${err}`\n\t\t\t);\n\t\t\tthis._dataTracker.eventUploadInProgress = false;\n\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\tprivate _initiateLogPushInterval(): void {\n\t\tif (this._timer) {\n\t\t\tclearInterval(this._timer);\n\t\t}\n\n\t\tthis._timer = setInterval(async () => {\n\t\t\ttry {\n\t\t\t\tif (this._getDocUploadPermissibility()) {\n\t\t\t\t\tawait this._safeUploadLogEvents();\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tlogger.error(\n\t\t\t\t\t`error when calling _safeUploadLogEvents in the timer interval - ${err}`\n\t\t\t\t);\n\t\t\t}\n\t\t}, 2000);\n\t}\n\n\tprivate _getDocUploadPermissibility(): boolean {\n\t\treturn (\n\t\t\t(this._dataTracker.logEvents.length !== 0 ||\n\t\t\t\tthis._currentLogBatch.length !== 0) &&\n\t\t\t!this._dataTracker.eventUploadInProgress\n\t\t);\n\t}\n}\n\nexport { AWSCloudWatchProvider };\n", "/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { ConsoleLogger as Logger } from '../Logger';\nimport { browserOrNode } from '../JS';\nimport { NonRetryableError } from '../Util';\n\nconst logger = new Logger('CognitoCredentials');\n\nconst waitForInit = new Promise((res, rej) => {\n\tif (!browserOrNode().isBrowser) {\n\t\tlogger.debug('not in the browser, directly resolved');\n\t\treturn res();\n\t}\n\tconst ga =\n\t\twindow['gapi'] && window['gapi'].auth2 ? window['gapi'].auth2 : null;\n\tif (ga) {\n\t\tlogger.debug('google api already loaded');\n\t\treturn res();\n\t} else {\n\t\tsetTimeout(() => {\n\t\t\treturn res();\n\t\t}, 2000);\n\t}\n});\n\nexport class GoogleOAuth {\n\tpublic initialized = false;\n\n\tconstructor() {\n\t\tthis.refreshGoogleToken = this.refreshGoogleToken.bind(this);\n\t\tthis._refreshGoogleTokenImpl = this._refreshGoogleTokenImpl.bind(this);\n\t}\n\n\tpublic async refreshGoogleToken() {\n\t\tif (!this.initialized) {\n\t\t\tlogger.debug('need to wait for the Google SDK loaded');\n\t\t\tawait waitForInit;\n\t\t\tthis.initialized = true;\n\t\t\tlogger.debug('finish waiting');\n\t\t}\n\n\t\treturn this._refreshGoogleTokenImpl();\n\t}\n\n\tprivate _refreshGoogleTokenImpl() {\n\t\tlet ga = null;\n\t\tif (browserOrNode().isBrowser)\n\t\t\tga = window['gapi'] && window['gapi'].auth2 ? window['gapi'].auth2 : null;\n\t\tif (!ga) {\n\t\t\tlogger.debug('no gapi auth2 available');\n\t\t\treturn Promise.reject('no gapi auth2 available');\n\t\t}\n\n\t\treturn new Promise((res, rej) => {\n\t\t\tga.getAuthInstance()\n\t\t\t\t.then(googleAuth => {\n\t\t\t\t\tif (!googleAuth) {\n\t\t\t\t\t\tlogger.debug('google Auth undefined');\n\t\t\t\t\t\trej(new NonRetryableError('google Auth undefined'));\n\t\t\t\t\t}\n\n\t\t\t\t\tconst googleUser = googleAuth.currentUser.get();\n\t\t\t\t\t// refresh the token\n\t\t\t\t\tif (googleUser.isSignedIn()) {\n\t\t\t\t\t\tlogger.debug('refreshing the google access token');\n\t\t\t\t\t\tgoogleUser\n\t\t\t\t\t\t\t.reloadAuthResponse()\n\t\t\t\t\t\t\t.then(authResponse => {\n\t\t\t\t\t\t\t\tconst { id_token, expires_at } = authResponse;\n\t\t\t\t\t\t\t\tres({ token: id_token, expires_at });\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.catch(err => {\n\t\t\t\t\t\t\t\tif (err && err.error === 'network_error') {\n\t\t\t\t\t\t\t\t\t// Not using NonRetryableError so handler will be retried\n\t\t\t\t\t\t\t\t\trej('Network error reloading google auth response');\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\trej(\n\t\t\t\t\t\t\t\t\t\tnew NonRetryableError(\n\t\t\t\t\t\t\t\t\t\t\t'Failed to reload google auth response'\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\trej(new NonRetryableError('User is not signed in with Google'));\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\tlogger.debug('Failed to refresh google token', err);\n\t\t\t\t\trej(new NonRetryableError('Failed to refresh google token'));\n\t\t\t\t});\n\t\t});\n\t}\n}\n\n/**\n * @deprecated use named import\n */\nexport default GoogleOAuth;\n", "/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { ConsoleLogger as Logger } from '../Logger';\nimport { browserOrNode } from '../JS';\nimport { NonRetryableError } from '../Util';\n\nconst logger = new Logger('CognitoCredentials');\n\nconst waitForInit = new Promise((res, rej) => {\n\tif (!browserOrNode().isBrowser) {\n\t\tlogger.debug('not in the browser, directly resolved');\n\t\treturn res();\n\t}\n\tconst fb = window['FB'];\n\tif (fb) {\n\t\tlogger.debug('FB SDK already loaded');\n\t\treturn res();\n\t} else {\n\t\tsetTimeout(() => {\n\t\t\treturn res();\n\t\t}, 2000);\n\t}\n});\n\nexport class FacebookOAuth {\n\tpublic initialized = false;\n\n\tconstructor() {\n\t\tthis.refreshFacebookToken = this.refreshFacebookToken.bind(this);\n\t\tthis._refreshFacebookTokenImpl = this._refreshFacebookTokenImpl.bind(this);\n\t}\n\n\tpublic async refreshFacebookToken() {\n\t\tif (!this.initialized) {\n\t\t\tlogger.debug('need to wait for the Facebook SDK loaded');\n\t\t\tawait waitForInit;\n\t\t\tthis.initialized = true;\n\t\t\tlogger.debug('finish waiting');\n\t\t}\n\n\t\treturn this._refreshFacebookTokenImpl();\n\t}\n\n\tprivate _refreshFacebookTokenImpl() {\n\t\tlet fb = null;\n\t\tif (browserOrNode().isBrowser) fb = window['FB'];\n\t\tif (!fb) {\n\t\t\tconst errorMessage = 'no fb sdk available';\n\t\t\tlogger.debug(errorMessage);\n\t\t\treturn Promise.reject(new NonRetryableError(errorMessage));\n\t\t}\n\n\t\treturn new Promise((res, rej) => {\n\t\t\tfb.getLoginStatus(\n\t\t\t\tfbResponse => {\n\t\t\t\t\tif (!fbResponse || !fbResponse.authResponse) {\n\t\t\t\t\t\tconst errorMessage =\n\t\t\t\t\t\t\t'no response from facebook when refreshing the jwt token';\n\t\t\t\t\t\tlogger.debug(errorMessage);\n\t\t\t\t\t\t// There is no definitive indication for a network error in\n\t\t\t\t\t\t// fbResponse, so we are treating it as an invalid token.\n\t\t\t\t\t\trej(new NonRetryableError(errorMessage));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst response = fbResponse.authResponse;\n\t\t\t\t\t\tconst { accessToken, expiresIn } = response;\n\t\t\t\t\t\tconst date = new Date();\n\t\t\t\t\t\tconst expires_at = expiresIn * 1000 + date.getTime();\n\t\t\t\t\t\tif (!accessToken) {\n\t\t\t\t\t\t\tconst errorMessage = 'the jwtToken is undefined';\n\t\t\t\t\t\t\tlogger.debug(errorMessage);\n\t\t\t\t\t\t\trej(new NonRetryableError(errorMessage));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tres({\n\t\t\t\t\t\t\ttoken: accessToken,\n\t\t\t\t\t\t\texpires_at,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{ scope: 'public_profile,email' }\n\t\t\t);\n\t\t});\n\t}\n}\n\n/**\n * @deprecated use named import\n */\nexport default FacebookOAuth;\n", "/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { GoogleOAuth as GoogleOAuthClass } from './GoogleOAuth';\nimport { FacebookOAuth as FacebookOAuthClass } from './FacebookOAuth';\n\nexport const GoogleOAuth = new GoogleOAuthClass();\nexport const FacebookOAuth = new FacebookOAuthClass();\n", "/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nlet dataMemory = {};\n\n/** @class */\nexport class MemoryStorage {\n\t/**\n\t * This is used to set a specific item in storage\n\t * @param {string} key - the key for the item\n\t * @param {object} value - the value\n\t * @returns {string} value that was set\n\t */\n\tstatic setItem(key: string, value: any) {\n\t\tdataMemory[key] = value;\n\t\treturn dataMemory[key];\n\t}\n\n\t/**\n\t * This is used to get a specific key from storage\n\t * @param {string} key - the key for the item\n\t * This is used to clear the storage\n\t * @returns {string} the data item\n\t */\n\tstatic getItem(key: string) {\n\t\treturn Object.prototype.hasOwnProperty.call(dataMemory, key)\n\t\t\t? dataMemory[key]\n\t\t\t: undefined;\n\t}\n\n\t/**\n\t * This is used to remove an item from storage\n\t * @param {string} key - the key being set\n\t * @returns {string} value - value that was deleted\n\t */\n\tstatic removeItem(key: string) {\n\t\treturn delete dataMemory[key];\n\t}\n\n\t/**\n\t * This is used to clear the storage\n\t * @returns {string} nothing\n\t */\n\tstatic clear() {\n\t\tdataMemory = {};\n\t\treturn dataMemory;\n\t}\n}\n\nexport class StorageHelper {\n\tprivate storageWindow: any;\n\t/**\n\t * This is used to get a storage object\n\t * @returns {object} the storage\n\t */\n\tconstructor() {\n\t\ttry {\n\t\t\tthis.storageWindow = window.localStorage;\n\t\t\tthis.storageWindow.setItem('aws.amplify.test-ls', 1);\n\t\t\tthis.storageWindow.removeItem('aws.amplify.test-ls');\n\t\t} catch (exception) {\n\t\t\tthis.storageWindow = MemoryStorage;\n\t\t}\n\t}\n\n\t/**\n\t * This is used to return the storage\n\t * @returns {object} the storage\n\t */\n\tgetStorage(): any {\n\t\treturn this.storageWindow;\n\t}\n}\n\n/**\n * @deprecated use named import\n */\nexport default StorageHelper;\n", "/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nimport { browserOrNode } from '../JS';\nimport { StorageHelper } from '../StorageHelper';\n\nexport const Linking = {};\nexport const AppState = {\n\taddEventListener: (action, handler) => undefined,\n};\n\n// if not in react native, just use local storage\nexport const AsyncStorage = browserOrNode().isBrowser\n\t? new StorageHelper().getStorage()\n\t: undefined;\n", "/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.unshift(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.unshift(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport function __addDisposableResource(env, value, async) {\r\n    if (value !== null && value !== void 0) {\r\n        if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\r\n        var dispose;\r\n        if (async) {\r\n            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\r\n            dispose = value[Symbol.asyncDispose];\r\n        }\r\n        if (dispose === void 0) {\r\n            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\r\n            dispose = value[Symbol.dispose];\r\n        }\r\n        if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\r\n        env.stack.push({ value: value, dispose: dispose, async: async });\r\n    }\r\n    else if (async) {\r\n        env.stack.push({ async: true });\r\n    }\r\n    return value;\r\n}\r\n\r\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\r\n\r\nexport function __disposeResources(env) {\r\n    function fail(e) {\r\n        env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\r\n        env.hasError = true;\r\n    }\r\n    function next() {\r\n        while (env.stack.length) {\r\n            var rec = env.stack.pop();\r\n            try {\r\n                var result = rec.dispose && rec.dispose.call(rec.value);\r\n                if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\r\n            }\r\n            catch (e) {\r\n                fail(e);\r\n            }\r\n        }\r\n        if (env.hasError) throw env.error;\r\n    }\r\n    return next();\r\n}\r\n\r\nexport default {\r\n    __extends: __extends,\r\n    __assign: __assign,\r\n    __rest: __rest,\r\n    __decorate: __decorate,\r\n    __param: __param,\r\n    __metadata: __metadata,\r\n    __awaiter: __awaiter,\r\n    __generator: __generator,\r\n    __createBinding: __createBinding,\r\n    __exportStar: __exportStar,\r\n    __values: __values,\r\n    __read: __read,\r\n    __spread: __spread,\r\n    __spreadArrays: __spreadArrays,\r\n    __spreadArray: __spreadArray,\r\n    __await: __await,\r\n    __asyncGenerator: __asyncGenerator,\r\n    __asyncDelegator: __asyncDelegator,\r\n    __asyncValues: __asyncValues,\r\n    __makeTemplateObject: __makeTemplateObject,\r\n    __importStar: __importStar,\r\n    __importDefault: __importDefault,\r\n    __classPrivateFieldGet: __classPrivateFieldGet,\r\n    __classPrivateFieldSet: __classPrivateFieldSet,\r\n    __classPrivateFieldIn: __classPrivateFieldIn,\r\n    __addDisposableResource: __addDisposableResource,\r\n    __disposeResources: __disposeResources,\r\n};\r\n", "import packageInfo from \"./package.json\";\n\nimport { Sha256 } from \"@aws-crypto/sha256-browser\";\nimport { FetchHttpHandler, streamCollector } from \"@aws-sdk/fetch-http-handler\";\nimport { invalidProvider } from \"@aws-sdk/invalid-dependency\";\nimport { DEFAULT_MAX_ATTEMPTS } from \"@aws-sdk/middleware-retry\";\nimport { fromBase64, toBase64 } from \"@aws-sdk/util-base64-browser\";\nimport { calculateBodyLength } from \"@aws-sdk/util-body-length-browser\";\nimport { defaultUserAgent } from \"@aws-sdk/util-user-agent-browser\";\nimport { fromUtf8, toUtf8 } from \"@aws-sdk/util-utf8-browser\";\nimport { ClientDefaults } from \"./CognitoIdentityClient\";\nimport { ClientSharedValues } from \"./runtimeConfig.shared\";\n\n/**\n * @internal\n */\nexport const ClientDefaultValues: Required<ClientDefaults> = {\n  ...ClientSharedValues,\n  runtime: \"browser\",\n  base64Decoder: fromBase64,\n  base64Encoder: toBase64,\n  bodyLengthChecker: calculateBodyLength,\n  credentialDefaultProvider: (_: unknown) => () => Promise.reject(new Error(\"Credential is missing\")),\n  defaultUserAgentProvider: defaultUserAgent({\n    serviceId: ClientSharedValues.serviceId,\n    clientVersion: packageInfo.version,\n  }),\n  maxAttempts: DEFAULT_MAX_ATTEMPTS,\n  region: invalidProvider(\"Region is missing\"),\n  requestHandler: new FetchHttpHandler(),\n  sha256: Sha256,\n  streamCollector,\n  utf8Decoder: fromUtf8,\n  utf8Encoder: toUtf8,\n};\n", "import { RegionInfo, RegionInfoProvider } from \"@aws-sdk/types\";\n\n// Partition default templates\nconst AWS_TEMPLATE = \"cognito-identity.{region}.amazonaws.com\";\nconst AWS_CN_TEMPLATE = \"cognito-identity.{region}.amazonaws.com.cn\";\nconst AWS_ISO_TEMPLATE = \"cognito-identity.{region}.c2s.ic.gov\";\nconst AWS_ISO_B_TEMPLATE = \"cognito-identity.{region}.sc2s.sgov.gov\";\nconst AWS_US_GOV_TEMPLATE = \"cognito-identity.{region}.amazonaws.com\";\n\n// Partition regions\nconst AWS_REGIONS = new Set([\n  \"af-south-1\",\n  \"ap-east-1\",\n  \"ap-northeast-1\",\n  \"ap-northeast-2\",\n  \"ap-south-1\",\n  \"ap-southeast-1\",\n  \"ap-southeast-2\",\n  \"ca-central-1\",\n  \"eu-central-1\",\n  \"eu-north-1\",\n  \"eu-south-1\",\n  \"eu-west-1\",\n  \"eu-west-2\",\n  \"eu-west-3\",\n  \"me-south-1\",\n  \"sa-east-1\",\n  \"us-east-1\",\n  \"us-east-2\",\n  \"us-west-1\",\n  \"us-west-2\",\n]);\nconst AWS_CN_REGIONS = new Set([\"cn-north-1\", \"cn-northwest-1\"]);\nconst AWS_ISO_REGIONS = new Set([\"us-iso-east-1\"]);\nconst AWS_ISO_B_REGIONS = new Set([\"us-isob-east-1\"]);\nconst AWS_US_GOV_REGIONS = new Set([\"us-gov-east-1\", \"us-gov-west-1\"]);\n\nexport const defaultRegionInfoProvider: RegionInfoProvider = (region: string, options?: any) => {\n  let regionInfo: RegionInfo | undefined = undefined;\n  switch (region) {\n    // First, try to match exact region names.\n    case \"ap-northeast-1\":\n      regionInfo = {\n        hostname: \"cognito-identity.ap-northeast-1.amazonaws.com\",\n        partition: \"aws\",\n      };\n      break;\n    case \"ap-northeast-2\":\n      regionInfo = {\n        hostname: \"cognito-identity.ap-northeast-2.amazonaws.com\",\n        partition: \"aws\",\n      };\n      break;\n    case \"ap-south-1\":\n      regionInfo = {\n        hostname: \"cognito-identity.ap-south-1.amazonaws.com\",\n        partition: \"aws\",\n      };\n      break;\n    case \"ap-southeast-1\":\n      regionInfo = {\n        hostname: \"cognito-identity.ap-southeast-1.amazonaws.com\",\n        partition: \"aws\",\n      };\n      break;\n    case \"ap-southeast-2\":\n      regionInfo = {\n        hostname: \"cognito-identity.ap-southeast-2.amazonaws.com\",\n        partition: \"aws\",\n      };\n      break;\n    case \"ca-central-1\":\n      regionInfo = {\n        hostname: \"cognito-identity.ca-central-1.amazonaws.com\",\n        partition: \"aws\",\n      };\n      break;\n    case \"cn-north-1\":\n      regionInfo = {\n        hostname: \"cognito-identity.cn-north-1.amazonaws.com.cn\",\n        partition: \"aws-cn\",\n      };\n      break;\n    case \"eu-central-1\":\n      regionInfo = {\n        hostname: \"cognito-identity.eu-central-1.amazonaws.com\",\n        partition: \"aws\",\n      };\n      break;\n    case \"eu-north-1\":\n      regionInfo = {\n        hostname: \"cognito-identity.eu-north-1.amazonaws.com\",\n        partition: \"aws\",\n      };\n      break;\n    case \"eu-west-1\":\n      regionInfo = {\n        hostname: \"cognito-identity.eu-west-1.amazonaws.com\",\n        partition: \"aws\",\n      };\n      break;\n    case \"eu-west-2\":\n      regionInfo = {\n        hostname: \"cognito-identity.eu-west-2.amazonaws.com\",\n        partition: \"aws\",\n      };\n      break;\n    case \"eu-west-3\":\n      regionInfo = {\n        hostname: \"cognito-identity.eu-west-3.amazonaws.com\",\n        partition: \"aws\",\n      };\n      break;\n    case \"fips-us-east-1\":\n      regionInfo = {\n        hostname: \"cognito-identity-fips.us-east-1.amazonaws.com\",\n        partition: \"aws\",\n        signingRegion: \"us-east-1\",\n      };\n      break;\n    case \"fips-us-east-2\":\n      regionInfo = {\n        hostname: \"cognito-identity-fips.us-east-2.amazonaws.com\",\n        partition: \"aws\",\n        signingRegion: \"us-east-2\",\n      };\n      break;\n    case \"fips-us-gov-west-1\":\n      regionInfo = {\n        hostname: \"cognito-identity-fips.us-gov-west-1.amazonaws.com\",\n        partition: \"aws-us-gov\",\n        signingRegion: \"us-gov-west-1\",\n      };\n      break;\n    case \"fips-us-west-2\":\n      regionInfo = {\n        hostname: \"cognito-identity-fips.us-west-2.amazonaws.com\",\n        partition: \"aws\",\n        signingRegion: \"us-west-2\",\n      };\n      break;\n    case \"sa-east-1\":\n      regionInfo = {\n        hostname: \"cognito-identity.sa-east-1.amazonaws.com\",\n        partition: \"aws\",\n      };\n      break;\n    case \"us-east-1\":\n      regionInfo = {\n        hostname: \"cognito-identity.us-east-1.amazonaws.com\",\n        partition: \"aws\",\n      };\n      break;\n    case \"us-east-2\":\n      regionInfo = {\n        hostname: \"cognito-identity.us-east-2.amazonaws.com\",\n        partition: \"aws\",\n      };\n      break;\n    case \"us-gov-west-1\":\n      regionInfo = {\n        hostname: \"cognito-identity.us-gov-west-1.amazonaws.com\",\n        partition: \"aws-us-gov\",\n      };\n      break;\n    case \"us-west-1\":\n      regionInfo = {\n        hostname: \"cognito-identity.us-west-1.amazonaws.com\",\n        partition: \"aws\",\n      };\n      break;\n    case \"us-west-2\":\n      regionInfo = {\n        hostname: \"cognito-identity.us-west-2.amazonaws.com\",\n        partition: \"aws\",\n      };\n      break;\n    // Next, try to match partition endpoints.\n    default:\n      if (AWS_REGIONS.has(region)) {\n        regionInfo = {\n          hostname: AWS_TEMPLATE.replace(\"{region}\", region),\n          partition: \"aws\",\n        };\n      }\n      if (AWS_CN_REGIONS.has(region)) {\n        regionInfo = {\n          hostname: AWS_CN_TEMPLATE.replace(\"{region}\", region),\n          partition: \"aws-cn\",\n        };\n      }\n      if (AWS_ISO_REGIONS.has(region)) {\n        regionInfo = {\n          hostname: AWS_ISO_TEMPLATE.replace(\"{region}\", region),\n          partition: \"aws-iso\",\n        };\n      }\n      if (AWS_ISO_B_REGIONS.has(region)) {\n        regionInfo = {\n          hostname: AWS_ISO_B_TEMPLATE.replace(\"{region}\", region),\n          partition: \"aws-iso-b\",\n        };\n      }\n      if (AWS_US_GOV_REGIONS.has(region)) {\n        regionInfo = {\n          hostname: AWS_US_GOV_TEMPLATE.replace(\"{region}\", region),\n          partition: \"aws-us-gov\",\n        };\n      }\n      // Finally, assume it's an AWS partition endpoint.\n      if (regionInfo === undefined) {\n        regionInfo = {\n          hostname: AWS_TEMPLATE.replace(\"{region}\", region),\n          partition: \"aws\",\n        };\n      }\n  }\n  return Promise.resolve({ signingService: \"cognito-identity\", ...regionInfo });\n};\n", "import { defaultRegionInfoProvider } from \"./endpoints\";\nimport { Logger as __Logger } from \"@aws-sdk/types\";\nimport { parseUrl } from \"@aws-sdk/url-parser\";\n\n/**\n * @internal\n */\nexport const ClientSharedValues = {\n  apiVersion: \"2014-06-30\",\n  disableHostPrefix: false,\n  logger: {} as __Logger,\n  regionInfoProvider: defaultRegionInfoProvider,\n  serviceId: \"Cognito Identity\",\n  urlParser: parseUrl,\n};\n", "import { CreateIdentityPoolCommandInput, CreateIdentityPoolCommandOutput } from \"./commands/CreateIdentityPoolCommand\";\nimport { DeleteIdentitiesCommandInput, DeleteIdentitiesCommandOutput } from \"./commands/DeleteIdentitiesCommand\";\nimport { DeleteIdentityPoolCommandInput, DeleteIdentityPoolCommandOutput } from \"./commands/DeleteIdentityPoolCommand\";\nimport { DescribeIdentityCommandInput, DescribeIdentityCommandOutput } from \"./commands/DescribeIdentityCommand\";\nimport {\n  DescribeIdentityPoolCommandInput,\n  DescribeIdentityPoolCommandOutput,\n} from \"./commands/DescribeIdentityPoolCommand\";\nimport {\n  GetCredentialsForIdentityCommandInput,\n  GetCredentialsForIdentityCommandOutput,\n} from \"./commands/GetCredentialsForIdentityCommand\";\nimport { GetIdCommandInput, GetIdCommandOutput } from \"./commands/GetIdCommand\";\nimport {\n  GetIdentityPoolRolesCommandInput,\n  GetIdentityPoolRolesCommandOutput,\n} from \"./commands/GetIdentityPoolRolesCommand\";\nimport { GetOpenIdTokenCommandInput, GetOpenIdTokenCommandOutput } from \"./commands/GetOpenIdTokenCommand\";\nimport {\n  GetOpenIdTokenForDeveloperIdentityCommandInput,\n  GetOpenIdTokenForDeveloperIdentityCommandOutput,\n} from \"./commands/GetOpenIdTokenForDeveloperIdentityCommand\";\nimport { ListIdentitiesCommandInput, ListIdentitiesCommandOutput } from \"./commands/ListIdentitiesCommand\";\nimport { ListIdentityPoolsCommandInput, ListIdentityPoolsCommandOutput } from \"./commands/ListIdentityPoolsCommand\";\nimport {\n  ListTagsForResourceCommandInput,\n  ListTagsForResourceCommandOutput,\n} from \"./commands/ListTagsForResourceCommand\";\nimport {\n  LookupDeveloperIdentityCommandInput,\n  LookupDeveloperIdentityCommandOutput,\n} from \"./commands/LookupDeveloperIdentityCommand\";\nimport {\n  MergeDeveloperIdentitiesCommandInput,\n  MergeDeveloperIdentitiesCommandOutput,\n} from \"./commands/MergeDeveloperIdentitiesCommand\";\nimport {\n  SetIdentityPoolRolesCommandInput,\n  SetIdentityPoolRolesCommandOutput,\n} from \"./commands/SetIdentityPoolRolesCommand\";\nimport { TagResourceCommandInput, TagResourceCommandOutput } from \"./commands/TagResourceCommand\";\nimport {\n  UnlinkDeveloperIdentityCommandInput,\n  UnlinkDeveloperIdentityCommandOutput,\n} from \"./commands/UnlinkDeveloperIdentityCommand\";\nimport { UnlinkIdentityCommandInput, UnlinkIdentityCommandOutput } from \"./commands/UnlinkIdentityCommand\";\nimport { UntagResourceCommandInput, UntagResourceCommandOutput } from \"./commands/UntagResourceCommand\";\nimport { UpdateIdentityPoolCommandInput, UpdateIdentityPoolCommandOutput } from \"./commands/UpdateIdentityPoolCommand\";\nimport { ClientDefaultValues as __ClientDefaultValues } from \"./runtimeConfig\";\nimport {\n  EndpointsInputConfig,\n  EndpointsResolvedConfig,\n  RegionInputConfig,\n  RegionResolvedConfig,\n  resolveEndpointsConfig,\n  resolveRegionConfig,\n} from \"@aws-sdk/config-resolver\";\nimport { getContentLengthPlugin } from \"@aws-sdk/middleware-content-length\";\nimport {\n  HostHeaderInputConfig,\n  HostHeaderResolvedConfig,\n  getHostHeaderPlugin,\n  resolveHostHeaderConfig,\n} from \"@aws-sdk/middleware-host-header\";\nimport { getLoggerPlugin } from \"@aws-sdk/middleware-logger\";\nimport { RetryInputConfig, RetryResolvedConfig, getRetryPlugin, resolveRetryConfig } from \"@aws-sdk/middleware-retry\";\nimport { AwsAuthInputConfig, AwsAuthResolvedConfig, resolveAwsAuthConfig } from \"@aws-sdk/middleware-signing\";\nimport {\n  UserAgentInputConfig,\n  UserAgentResolvedConfig,\n  getUserAgentPlugin,\n  resolveUserAgentConfig,\n} from \"@aws-sdk/middleware-user-agent\";\nimport { HttpHandler as __HttpHandler } from \"@aws-sdk/protocol-http\";\nimport {\n  Client as __Client,\n  SmithyConfiguration as __SmithyConfiguration,\n  SmithyResolvedConfiguration as __SmithyResolvedConfiguration,\n} from \"@aws-sdk/smithy-client\";\nimport {\n  Provider,\n  RegionInfoProvider,\n  Credentials as __Credentials,\n  Decoder as __Decoder,\n  Encoder as __Encoder,\n  HashConstructor as __HashConstructor,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  Logger as __Logger,\n  Provider as __Provider,\n  StreamCollector as __StreamCollector,\n  UrlParser as __UrlParser,\n  UserAgent as __UserAgent,\n} from \"@aws-sdk/types\";\n\nexport type ServiceInputTypes =\n  | CreateIdentityPoolCommandInput\n  | DeleteIdentitiesCommandInput\n  | DeleteIdentityPoolCommandInput\n  | DescribeIdentityCommandInput\n  | DescribeIdentityPoolCommandInput\n  | GetCredentialsForIdentityCommandInput\n  | GetIdCommandInput\n  | GetIdentityPoolRolesCommandInput\n  | GetOpenIdTokenCommandInput\n  | GetOpenIdTokenForDeveloperIdentityCommandInput\n  | ListIdentitiesCommandInput\n  | ListIdentityPoolsCommandInput\n  | ListTagsForResourceCommandInput\n  | LookupDeveloperIdentityCommandInput\n  | MergeDeveloperIdentitiesCommandInput\n  | SetIdentityPoolRolesCommandInput\n  | TagResourceCommandInput\n  | UnlinkDeveloperIdentityCommandInput\n  | UnlinkIdentityCommandInput\n  | UntagResourceCommandInput\n  | UpdateIdentityPoolCommandInput;\n\nexport type ServiceOutputTypes =\n  | CreateIdentityPoolCommandOutput\n  | DeleteIdentitiesCommandOutput\n  | DeleteIdentityPoolCommandOutput\n  | DescribeIdentityCommandOutput\n  | DescribeIdentityPoolCommandOutput\n  | GetCredentialsForIdentityCommandOutput\n  | GetIdCommandOutput\n  | GetIdentityPoolRolesCommandOutput\n  | GetOpenIdTokenCommandOutput\n  | GetOpenIdTokenForDeveloperIdentityCommandOutput\n  | ListIdentitiesCommandOutput\n  | ListIdentityPoolsCommandOutput\n  | ListTagsForResourceCommandOutput\n  | LookupDeveloperIdentityCommandOutput\n  | MergeDeveloperIdentitiesCommandOutput\n  | SetIdentityPoolRolesCommandOutput\n  | TagResourceCommandOutput\n  | UnlinkDeveloperIdentityCommandOutput\n  | UnlinkIdentityCommandOutput\n  | UntagResourceCommandOutput\n  | UpdateIdentityPoolCommandOutput;\n\nexport interface ClientDefaults extends Partial<__SmithyResolvedConfiguration<__HttpHandlerOptions>> {\n  /**\n   * The HTTP handler to use. Fetch in browser and Https in Nodejs.\n   */\n  requestHandler?: __HttpHandler;\n\n  /**\n   * A constructor for a class implementing the @aws-sdk/types.Hash interface\n   * that computes the SHA-256 HMAC or checksum of a string or binary buffer.\n   */\n  sha256?: __HashConstructor;\n\n  /**\n   * The function that will be used to convert strings into HTTP endpoints.\n   */\n  urlParser?: __UrlParser;\n\n  /**\n   * A function that can calculate the length of a request body.\n   */\n  bodyLengthChecker?: (body: any) => number | undefined;\n\n  /**\n   * A function that converts a stream into an array of bytes.\n   */\n  streamCollector?: __StreamCollector;\n\n  /**\n   * The function that will be used to convert a base64-encoded string to a byte array\n   */\n  base64Decoder?: __Decoder;\n\n  /**\n   * The function that will be used to convert binary data to a base64-encoded string\n   */\n  base64Encoder?: __Encoder;\n\n  /**\n   * The function that will be used to convert a UTF8-encoded string to a byte array\n   */\n  utf8Decoder?: __Decoder;\n\n  /**\n   * The function that will be used to convert binary data to a UTF-8 encoded string\n   */\n  utf8Encoder?: __Encoder;\n\n  /**\n   * The runtime environment\n   */\n  runtime?: string;\n\n  /**\n   * Disable dyanamically changing the endpoint of the client based on the hostPrefix\n   * trait of an operation.\n   */\n  disableHostPrefix?: boolean;\n\n  /**\n   * Unique service identifier.\n   * @internal\n   */\n  serviceId?: string;\n\n  /**\n   * Default credentials provider; Not available in browser runtime\n   */\n  credentialDefaultProvider?: (input: any) => __Provider<__Credentials>;\n\n  /**\n   * The AWS region to which this client will send requests\n   */\n  region?: string | __Provider<string>;\n\n  /**\n   * Value for how many times a request will be made at most in case of retry.\n   */\n  maxAttempts?: number | __Provider<number>;\n\n  /**\n   * Optional logger for logging debug/info/warn/error.\n   */\n  logger?: __Logger;\n\n  /**\n   * Fetch related hostname, signing name or signing region with given region.\n   */\n  regionInfoProvider?: RegionInfoProvider;\n\n  /**\n   * The provider populating default tracking information to be sent with `user-agent`, `x-amz-user-agent` header\n   * @internal\n   */\n  defaultUserAgentProvider?: Provider<__UserAgent>;\n}\n\nexport type CognitoIdentityClientConfig = Partial<__SmithyConfiguration<__HttpHandlerOptions>> &\n  ClientDefaults &\n  RegionInputConfig &\n  EndpointsInputConfig &\n  AwsAuthInputConfig &\n  RetryInputConfig &\n  HostHeaderInputConfig &\n  UserAgentInputConfig;\n\nexport type CognitoIdentityClientResolvedConfig = __SmithyResolvedConfiguration<__HttpHandlerOptions> &\n  Required<ClientDefaults> &\n  RegionResolvedConfig &\n  EndpointsResolvedConfig &\n  AwsAuthResolvedConfig &\n  RetryResolvedConfig &\n  HostHeaderResolvedConfig &\n  UserAgentResolvedConfig;\n\n/**\n * <fullname>Amazon Cognito Federated Identities</fullname>\n *          <p>Amazon Cognito Federated Identities is a web service that delivers scoped temporary\n *          credentials to mobile devices and other untrusted environments. It uniquely identifies a\n *          device and supplies the user with a consistent identity over the lifetime of an\n *          application.</p>\n *          <p>Using Amazon Cognito Federated Identities, you can enable authentication with one or\n *          more third-party identity providers (Facebook, Google, or Login with Amazon) or an Amazon\n *          Cognito user pool, and you can also choose to support unauthenticated access from your app.\n *          Cognito delivers a unique identifier for each user and acts as an OpenID token provider\n *          trusted by AWS Security Token Service (STS) to access temporary, limited-privilege AWS\n *          credentials.</p>\n *          <p>For a description of the authentication flow from the Amazon Cognito Developer Guide\n *          see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/authentication-flow.html\">Authentication Flow</a>.</p>\n *          <p>For more information see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-identity.html\">Amazon Cognito Federated Identities</a>.</p>\n */\nexport class CognitoIdentityClient extends __Client<\n  __HttpHandlerOptions,\n  ServiceInputTypes,\n  ServiceOutputTypes,\n  CognitoIdentityClientResolvedConfig\n> {\n  readonly config: CognitoIdentityClientResolvedConfig;\n\n  constructor(configuration: CognitoIdentityClientConfig) {\n    let _config_0 = {\n      ...__ClientDefaultValues,\n      ...configuration,\n    };\n    let _config_1 = resolveRegionConfig(_config_0);\n    let _config_2 = resolveEndpointsConfig(_config_1);\n    let _config_3 = resolveAwsAuthConfig(_config_2);\n    let _config_4 = resolveRetryConfig(_config_3);\n    let _config_5 = resolveHostHeaderConfig(_config_4);\n    let _config_6 = resolveUserAgentConfig(_config_5);\n    super(_config_6);\n    this.config = _config_6;\n    this.middlewareStack.use(getRetryPlugin(this.config));\n    this.middlewareStack.use(getContentLengthPlugin(this.config));\n    this.middlewareStack.use(getHostHeaderPlugin(this.config));\n    this.middlewareStack.use(getLoggerPlugin(this.config));\n    this.middlewareStack.use(getUserAgentPlugin(this.config));\n  }\n\n  destroy(): void {\n    super.destroy();\n  }\n}\n", "import { SmithyException as __SmithyException } from \"@aws-sdk/smithy-client\";\nimport { MetadataBearer as $MetadataBearer } from \"@aws-sdk/types\";\n\nexport enum AmbiguousRoleResolutionType {\n  AUTHENTICATED_ROLE = \"AuthenticatedRole\",\n  DENY = \"Deny\",\n}\n\n/**\n * <p>A provider representing an Amazon Cognito user pool and its client ID.</p>\n */\nexport interface CognitoIdentityProvider {\n  /**\n   * <p>The provider name for an Amazon Cognito user pool. For example,\n   *             <code>cognito-idp.us-east-1.amazonaws.com/us-east-1_123456789</code>.</p>\n   */\n  ProviderName?: string;\n\n  /**\n   * <p>The client ID for the Amazon Cognito user pool.</p>\n   */\n  ClientId?: string;\n\n  /**\n   * <p>TRUE if server-side token validation is enabled for the identity provider\u2019s\n   *          token.</p>\n   *          <p>Once you set <code>ServerSideTokenCheck</code> to TRUE for an identity pool, that\n   *          identity pool will check with the integrated user pools to make sure that the user has not\n   *          been globally signed out or deleted before the identity pool provides an OIDC token or AWS\n   *          credentials for the user.</p>\n   *          <p>If the user is signed out or deleted, the identity pool will return a 400 Not\n   *          Authorized error.</p>\n   */\n  ServerSideTokenCheck?: boolean;\n}\n\nexport namespace CognitoIdentityProvider {\n  export const filterSensitiveLog = (obj: CognitoIdentityProvider): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Input to the CreateIdentityPool action.</p>\n */\nexport interface CreateIdentityPoolInput {\n  /**\n   * <p>A string that you provide.</p>\n   */\n  IdentityPoolName: string | undefined;\n\n  /**\n   * <p>TRUE if the identity pool supports unauthenticated logins.</p>\n   */\n  AllowUnauthenticatedIdentities: boolean | undefined;\n\n  /**\n   * <p>Enables or disables the Basic (Classic) authentication flow. For more information, see\n   *       <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/authentication-flow.html\">Identity Pools (Federated Identities) Authentication Flow</a> in the <i>Amazon Cognito Developer Guide</i>.</p>\n   */\n  AllowClassicFlow?: boolean;\n\n  /**\n   * <p>Optional key:value pairs mapping provider names to provider app IDs.</p>\n   */\n  SupportedLoginProviders?: { [key: string]: string };\n\n  /**\n   * <p>The \"domain\" by which Cognito will refer to your users. This name acts as a\n   *          placeholder that allows your backend and the Cognito service to communicate about the\n   *          developer provider. For the <code>DeveloperProviderName</code>, you can use letters as well\n   *          as period (<code>.</code>), underscore (<code>_</code>), and dash\n   *          (<code>-</code>).</p>\n   *          <p>Once you have set a developer provider name, you cannot change it. Please take care\n   *          in setting this parameter.</p>\n   */\n  DeveloperProviderName?: string;\n\n  /**\n   * <p>A list of OpendID Connect provider ARNs.</p>\n   */\n  OpenIdConnectProviderARNs?: string[];\n\n  /**\n   * <p>An array of Amazon Cognito user pools and their client IDs.</p>\n   */\n  CognitoIdentityProviders?: CognitoIdentityProvider[];\n\n  /**\n   * <p>An array of Amazon Resource Names (ARNs) of the SAML provider for your identity\n   *          pool.</p>\n   */\n  SamlProviderARNs?: string[];\n\n  /**\n   * <p>Tags to assign to the identity pool. A tag is a label that you can apply to identity\n   *          pools to categorize and manage them in different ways, such as by purpose, owner,\n   *          environment, or other criteria.</p>\n   */\n  IdentityPoolTags?: { [key: string]: string };\n}\n\nexport namespace CreateIdentityPoolInput {\n  export const filterSensitiveLog = (obj: CreateIdentityPoolInput): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>An object representing an Amazon Cognito identity pool.</p>\n */\nexport interface IdentityPool {\n  /**\n   * <p>An identity pool ID in the format REGION:GUID.</p>\n   */\n  IdentityPoolId: string | undefined;\n\n  /**\n   * <p>A string that you provide.</p>\n   */\n  IdentityPoolName: string | undefined;\n\n  /**\n   * <p>TRUE if the identity pool supports unauthenticated logins.</p>\n   */\n  AllowUnauthenticatedIdentities: boolean | undefined;\n\n  /**\n   * <p>Enables or disables the Basic (Classic) authentication flow. For more information, see\n   *       <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/authentication-flow.html\">Identity Pools (Federated Identities) Authentication Flow</a> in the <i>Amazon Cognito Developer Guide</i>.</p>\n   */\n  AllowClassicFlow?: boolean;\n\n  /**\n   * <p>Optional key:value pairs mapping provider names to provider app IDs.</p>\n   */\n  SupportedLoginProviders?: { [key: string]: string };\n\n  /**\n   * <p>The \"domain\" by which Cognito will refer to your users.</p>\n   */\n  DeveloperProviderName?: string;\n\n  /**\n   * <p>A list of OpendID Connect provider ARNs.</p>\n   */\n  OpenIdConnectProviderARNs?: string[];\n\n  /**\n   * <p>A list representing an Amazon Cognito user pool and its client ID.</p>\n   */\n  CognitoIdentityProviders?: CognitoIdentityProvider[];\n\n  /**\n   * <p>An array of Amazon Resource Names (ARNs) of the SAML provider for your identity\n   *          pool.</p>\n   */\n  SamlProviderARNs?: string[];\n\n  /**\n   * <p>The tags that are assigned to the identity pool. A tag is a label that you can apply to\n   *          identity pools to categorize and manage them in different ways, such as by purpose, owner,\n   *          environment, or other criteria.</p>\n   */\n  IdentityPoolTags?: { [key: string]: string };\n}\n\nexport namespace IdentityPool {\n  export const filterSensitiveLog = (obj: IdentityPool): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Thrown when the service encounters an error during processing the request.</p>\n */\nexport interface InternalErrorException extends __SmithyException, $MetadataBearer {\n  name: \"InternalErrorException\";\n  $fault: \"server\";\n  /**\n   * <p>The message returned by an InternalErrorException.</p>\n   */\n  message?: string;\n}\n\nexport namespace InternalErrorException {\n  export const filterSensitiveLog = (obj: InternalErrorException): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Thrown for missing or bad input parameter(s).</p>\n */\nexport interface InvalidParameterException extends __SmithyException, $MetadataBearer {\n  name: \"InvalidParameterException\";\n  $fault: \"client\";\n  /**\n   * <p>The message returned by an InvalidParameterException.</p>\n   */\n  message?: string;\n}\n\nexport namespace InvalidParameterException {\n  export const filterSensitiveLog = (obj: InvalidParameterException): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Thrown when the total number of user pools has exceeded a preset limit.</p>\n */\nexport interface LimitExceededException extends __SmithyException, $MetadataBearer {\n  name: \"LimitExceededException\";\n  $fault: \"client\";\n  /**\n   * <p>The message returned by a LimitExceededException.</p>\n   */\n  message?: string;\n}\n\nexport namespace LimitExceededException {\n  export const filterSensitiveLog = (obj: LimitExceededException): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Thrown when a user is not authorized to access the requested resource.</p>\n */\nexport interface NotAuthorizedException extends __SmithyException, $MetadataBearer {\n  name: \"NotAuthorizedException\";\n  $fault: \"client\";\n  /**\n   * <p>The message returned by a NotAuthorizedException</p>\n   */\n  message?: string;\n}\n\nexport namespace NotAuthorizedException {\n  export const filterSensitiveLog = (obj: NotAuthorizedException): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Thrown when a user tries to use a login which is already linked to another\n *          account.</p>\n */\nexport interface ResourceConflictException extends __SmithyException, $MetadataBearer {\n  name: \"ResourceConflictException\";\n  $fault: \"client\";\n  /**\n   * <p>The message returned by a ResourceConflictException.</p>\n   */\n  message?: string;\n}\n\nexport namespace ResourceConflictException {\n  export const filterSensitiveLog = (obj: ResourceConflictException): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Thrown when a request is throttled.</p>\n */\nexport interface TooManyRequestsException extends __SmithyException, $MetadataBearer {\n  name: \"TooManyRequestsException\";\n  $fault: \"client\";\n  /**\n   * <p>Message returned by a TooManyRequestsException</p>\n   */\n  message?: string;\n}\n\nexport namespace TooManyRequestsException {\n  export const filterSensitiveLog = (obj: TooManyRequestsException): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Input to the <code>DeleteIdentities</code> action.</p>\n */\nexport interface DeleteIdentitiesInput {\n  /**\n   * <p>A list of 1-60 identities that you want to delete.</p>\n   */\n  IdentityIdsToDelete: string[] | undefined;\n}\n\nexport namespace DeleteIdentitiesInput {\n  export const filterSensitiveLog = (obj: DeleteIdentitiesInput): any => ({\n    ...obj,\n  });\n}\n\nexport enum ErrorCode {\n  ACCESS_DENIED = \"AccessDenied\",\n  INTERNAL_SERVER_ERROR = \"InternalServerError\",\n}\n\n/**\n * <p>An array of UnprocessedIdentityId objects, each of which contains an ErrorCode and\n *          IdentityId.</p>\n */\nexport interface UnprocessedIdentityId {\n  /**\n   * <p>A unique identifier in the format REGION:GUID.</p>\n   */\n  IdentityId?: string;\n\n  /**\n   * <p>The error code indicating the type of error that occurred.</p>\n   */\n  ErrorCode?: ErrorCode | string;\n}\n\nexport namespace UnprocessedIdentityId {\n  export const filterSensitiveLog = (obj: UnprocessedIdentityId): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Returned in response to a successful <code>DeleteIdentities</code>\n *          operation.</p>\n */\nexport interface DeleteIdentitiesResponse {\n  /**\n   * <p>An array of UnprocessedIdentityId objects, each of which contains an ErrorCode and\n   *          IdentityId.</p>\n   */\n  UnprocessedIdentityIds?: UnprocessedIdentityId[];\n}\n\nexport namespace DeleteIdentitiesResponse {\n  export const filterSensitiveLog = (obj: DeleteIdentitiesResponse): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Input to the DeleteIdentityPool action.</p>\n */\nexport interface DeleteIdentityPoolInput {\n  /**\n   * <p>An identity pool ID in the format REGION:GUID.</p>\n   */\n  IdentityPoolId: string | undefined;\n}\n\nexport namespace DeleteIdentityPoolInput {\n  export const filterSensitiveLog = (obj: DeleteIdentityPoolInput): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Thrown when the requested resource (for example, a dataset or record) does not\n *          exist.</p>\n */\nexport interface ResourceNotFoundException extends __SmithyException, $MetadataBearer {\n  name: \"ResourceNotFoundException\";\n  $fault: \"client\";\n  /**\n   * <p>The message returned by a ResourceNotFoundException.</p>\n   */\n  message?: string;\n}\n\nexport namespace ResourceNotFoundException {\n  export const filterSensitiveLog = (obj: ResourceNotFoundException): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Input to the <code>DescribeIdentity</code> action.</p>\n */\nexport interface DescribeIdentityInput {\n  /**\n   * <p>A unique identifier in the format REGION:GUID.</p>\n   */\n  IdentityId: string | undefined;\n}\n\nexport namespace DescribeIdentityInput {\n  export const filterSensitiveLog = (obj: DescribeIdentityInput): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>A description of the identity.</p>\n */\nexport interface IdentityDescription {\n  /**\n   * <p>A unique identifier in the format REGION:GUID.</p>\n   */\n  IdentityId?: string;\n\n  /**\n   * <p>The provider names.</p>\n   */\n  Logins?: string[];\n\n  /**\n   * <p>Date on which the identity was created.</p>\n   */\n  CreationDate?: Date;\n\n  /**\n   * <p>Date on which the identity was last modified.</p>\n   */\n  LastModifiedDate?: Date;\n}\n\nexport namespace IdentityDescription {\n  export const filterSensitiveLog = (obj: IdentityDescription): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Input to the DescribeIdentityPool action.</p>\n */\nexport interface DescribeIdentityPoolInput {\n  /**\n   * <p>An identity pool ID in the format REGION:GUID.</p>\n   */\n  IdentityPoolId: string | undefined;\n}\n\nexport namespace DescribeIdentityPoolInput {\n  export const filterSensitiveLog = (obj: DescribeIdentityPoolInput): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>An exception thrown when a dependent service such as Facebook or Twitter is not\n *          responding</p>\n */\nexport interface ExternalServiceException extends __SmithyException, $MetadataBearer {\n  name: \"ExternalServiceException\";\n  $fault: \"client\";\n  /**\n   * <p>The message returned by an ExternalServiceException</p>\n   */\n  message?: string;\n}\n\nexport namespace ExternalServiceException {\n  export const filterSensitiveLog = (obj: ExternalServiceException): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Input to the <code>GetCredentialsForIdentity</code> action.</p>\n */\nexport interface GetCredentialsForIdentityInput {\n  /**\n   * <p>A unique identifier in the format REGION:GUID.</p>\n   */\n  IdentityId: string | undefined;\n\n  /**\n   * <p>A set of optional name-value pairs that map provider names to provider tokens. The\n   *          name-value pair will follow the syntax \"provider_name\":\n   *          \"provider_user_identifier\".</p>\n   *          <p>Logins should not be specified when trying to get credentials for an unauthenticated\n   *          identity.</p>\n   *          <p>The Logins parameter is required when using identities associated with external\n   *          identity providers such as FaceBook. For examples of <code>Logins</code> maps, see the code\n   *          examples in the <a href=\"http://docs.aws.amazon.com/cognito/latest/developerguide/external-identity-providers.html\">External Identity Providers</a> section of the Amazon Cognito Developer\n   *          Guide.</p>\n   */\n  Logins?: { [key: string]: string };\n\n  /**\n   * <p>The Amazon Resource Name (ARN) of the role to be assumed when multiple roles were\n   *          received in the token from the identity provider. For example, a SAML-based identity\n   *          provider. This parameter is optional for identity providers that do not support role\n   *          customization.</p>\n   */\n  CustomRoleArn?: string;\n}\n\nexport namespace GetCredentialsForIdentityInput {\n  export const filterSensitiveLog = (obj: GetCredentialsForIdentityInput): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Credentials for the provided identity ID.</p>\n */\nexport interface Credentials {\n  /**\n   * <p>The Access Key portion of the credentials.</p>\n   */\n  AccessKeyId?: string;\n\n  /**\n   * <p>The Secret Access Key portion of the credentials</p>\n   */\n  SecretKey?: string;\n\n  /**\n   * <p>The Session Token portion of the credentials</p>\n   */\n  SessionToken?: string;\n\n  /**\n   * <p>The date at which these credentials will expire.</p>\n   */\n  Expiration?: Date;\n}\n\nexport namespace Credentials {\n  export const filterSensitiveLog = (obj: Credentials): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Returned in response to a successful <code>GetCredentialsForIdentity</code>\n *          operation.</p>\n */\nexport interface GetCredentialsForIdentityResponse {\n  /**\n   * <p>A unique identifier in the format REGION:GUID.</p>\n   */\n  IdentityId?: string;\n\n  /**\n   * <p>Credentials for the provided identity ID.</p>\n   */\n  Credentials?: Credentials;\n}\n\nexport namespace GetCredentialsForIdentityResponse {\n  export const filterSensitiveLog = (obj: GetCredentialsForIdentityResponse): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Thrown if the identity pool has no role associated for the given auth type\n *          (auth/unauth) or if the AssumeRole fails.</p>\n */\nexport interface InvalidIdentityPoolConfigurationException extends __SmithyException, $MetadataBearer {\n  name: \"InvalidIdentityPoolConfigurationException\";\n  $fault: \"client\";\n  /**\n   * <p>The message returned for an <code>InvalidIdentityPoolConfigurationException</code>\n   *          </p>\n   */\n  message?: string;\n}\n\nexport namespace InvalidIdentityPoolConfigurationException {\n  export const filterSensitiveLog = (obj: InvalidIdentityPoolConfigurationException): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Input to the GetId action.</p>\n */\nexport interface GetIdInput {\n  /**\n   * <p>A standard AWS account ID (9+ digits).</p>\n   */\n  AccountId?: string;\n\n  /**\n   * <p>An identity pool ID in the format REGION:GUID.</p>\n   */\n  IdentityPoolId: string | undefined;\n\n  /**\n   * <p>A set of optional name-value pairs that map provider names to provider tokens. The\n   *          available provider names for <code>Logins</code> are as follows:</p>\n   *          <ul>\n   *             <li>\n   *                <p>Facebook: <code>graph.facebook.com</code>\n   *                </p>\n   *             </li>\n   *             <li>\n   *                <p>Amazon Cognito user pool:\n   *                   <code>cognito-idp.<region>.amazonaws.com/<YOUR_USER_POOL_ID></code>,\n   *                for example, <code>cognito-idp.us-east-1.amazonaws.com/us-east-1_123456789</code>.\n   *             </p>\n   *             </li>\n   *             <li>\n   *                <p>Google: <code>accounts.google.com</code>\n   *                </p>\n   *             </li>\n   *             <li>\n   *                <p>Amazon: <code>www.amazon.com</code>\n   *                </p>\n   *             </li>\n   *             <li>\n   *                <p>Twitter: <code>api.twitter.com</code>\n   *                </p>\n   *             </li>\n   *             <li>\n   *                <p>Digits: <code>www.digits.com</code>\n   *                </p>\n   *             </li>\n   *          </ul>\n   */\n  Logins?: { [key: string]: string };\n}\n\nexport namespace GetIdInput {\n  export const filterSensitiveLog = (obj: GetIdInput): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Returned in response to a GetId request.</p>\n */\nexport interface GetIdResponse {\n  /**\n   * <p>A unique identifier in the format REGION:GUID.</p>\n   */\n  IdentityId?: string;\n}\n\nexport namespace GetIdResponse {\n  export const filterSensitiveLog = (obj: GetIdResponse): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Input to the <code>GetIdentityPoolRoles</code> action.</p>\n */\nexport interface GetIdentityPoolRolesInput {\n  /**\n   * <p>An identity pool ID in the format REGION:GUID.</p>\n   */\n  IdentityPoolId: string | undefined;\n}\n\nexport namespace GetIdentityPoolRolesInput {\n  export const filterSensitiveLog = (obj: GetIdentityPoolRolesInput): any => ({\n    ...obj,\n  });\n}\n\nexport enum MappingRuleMatchType {\n  CONTAINS = \"Contains\",\n  EQUALS = \"Equals\",\n  NOT_EQUAL = \"NotEqual\",\n  STARTS_WITH = \"StartsWith\",\n}\n\n/**\n * <p>A rule that maps a claim name, a claim value, and a match type to a role\n *          ARN.</p>\n */\nexport interface MappingRule {\n  /**\n   * <p>The claim name that must be present in the token, for example, \"isAdmin\" or\n   *          \"paid\".</p>\n   */\n  Claim: string | undefined;\n\n  /**\n   * <p>The match condition that specifies how closely the claim value in the IdP token must\n   *          match <code>Value</code>.</p>\n   */\n  MatchType: MappingRuleMatchType | string | undefined;\n\n  /**\n   * <p>A brief string that the claim must match, for example, \"paid\" or \"yes\".</p>\n   */\n  Value: string | undefined;\n\n  /**\n   * <p>The role ARN.</p>\n   */\n  RoleARN: string | undefined;\n}\n\nexport namespace MappingRule {\n  export const filterSensitiveLog = (obj: MappingRule): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>A container for rules.</p>\n */\nexport interface RulesConfigurationType {\n  /**\n   * <p>An array of rules. You can specify up to 25 rules per identity provider.</p>\n   *          <p>Rules are evaluated in order. The first one to match specifies the role.</p>\n   */\n  Rules: MappingRule[] | undefined;\n}\n\nexport namespace RulesConfigurationType {\n  export const filterSensitiveLog = (obj: RulesConfigurationType): any => ({\n    ...obj,\n  });\n}\n\nexport enum RoleMappingType {\n  RULES = \"Rules\",\n  TOKEN = \"Token\",\n}\n\n/**\n * <p>A role mapping.</p>\n */\nexport interface RoleMapping {\n  /**\n   * <p>The role mapping type. Token will use <code>cognito:roles</code> and\n   *             <code>cognito:preferred_role</code> claims from the Cognito identity provider token to\n   *          map groups to roles. Rules will attempt to match claims from the token to map to a\n   *          role.</p>\n   */\n  Type: RoleMappingType | string | undefined;\n\n  /**\n   * <p>If you specify Token or Rules as the <code>Type</code>,\n   *             <code>AmbiguousRoleResolution</code> is required.</p>\n   *          <p>Specifies the action to be taken if either no rules match the claim value for the\n   *             <code>Rules</code> type, or there is no <code>cognito:preferred_role</code> claim and\n   *          there are multiple <code>cognito:roles</code> matches for the <code>Token</code>\n   *          type.</p>\n   */\n  AmbiguousRoleResolution?: AmbiguousRoleResolutionType | string;\n\n  /**\n   * <p>The rules to be used for mapping users to roles.</p>\n   *          <p>If you specify Rules as the role mapping type, <code>RulesConfiguration</code> is\n   *          required.</p>\n   */\n  RulesConfiguration?: RulesConfigurationType;\n}\n\nexport namespace RoleMapping {\n  export const filterSensitiveLog = (obj: RoleMapping): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Returned in response to a successful <code>GetIdentityPoolRoles</code>\n *          operation.</p>\n */\nexport interface GetIdentityPoolRolesResponse {\n  /**\n   * <p>An identity pool ID in the format REGION:GUID.</p>\n   */\n  IdentityPoolId?: string;\n\n  /**\n   * <p>The map of roles associated with this pool. Currently only authenticated and\n   *          unauthenticated roles are supported.</p>\n   */\n  Roles?: { [key: string]: string };\n\n  /**\n   * <p>How users for a specific identity provider are to mapped to roles. This is a\n   *             String-to-<a>RoleMapping</a> object map. The string identifies the identity\n   *          provider, for example, \"graph.facebook.com\" or\n   *          \"cognito-idp.us-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id\".</p>\n   */\n  RoleMappings?: { [key: string]: RoleMapping };\n}\n\nexport namespace GetIdentityPoolRolesResponse {\n  export const filterSensitiveLog = (obj: GetIdentityPoolRolesResponse): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Input to the GetOpenIdToken action.</p>\n */\nexport interface GetOpenIdTokenInput {\n  /**\n   * <p>A unique identifier in the format REGION:GUID.</p>\n   */\n  IdentityId: string | undefined;\n\n  /**\n   * <p>A set of optional name-value pairs that map provider names to provider tokens. When\n   *          using graph.facebook.com and www.amazon.com, supply the access_token returned from the\n   *          provider's authflow. For accounts.google.com, an Amazon Cognito user pool provider, or any\n   *          other OpenId Connect provider, always include the <code>id_token</code>.</p>\n   */\n  Logins?: { [key: string]: string };\n}\n\nexport namespace GetOpenIdTokenInput {\n  export const filterSensitiveLog = (obj: GetOpenIdTokenInput): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Returned in response to a successful GetOpenIdToken request.</p>\n */\nexport interface GetOpenIdTokenResponse {\n  /**\n   * <p>A unique identifier in the format REGION:GUID. Note that the IdentityId returned may\n   *          not match the one passed on input.</p>\n   */\n  IdentityId?: string;\n\n  /**\n   * <p>An OpenID token, valid for 10 minutes.</p>\n   */\n  Token?: string;\n}\n\nexport namespace GetOpenIdTokenResponse {\n  export const filterSensitiveLog = (obj: GetOpenIdTokenResponse): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>The provided developer user identifier is already registered with Cognito under a\n *          different identity ID.</p>\n */\nexport interface DeveloperUserAlreadyRegisteredException extends __SmithyException, $MetadataBearer {\n  name: \"DeveloperUserAlreadyRegisteredException\";\n  $fault: \"client\";\n  /**\n   * <p>This developer user identifier is already registered with Cognito.</p>\n   */\n  message?: string;\n}\n\nexport namespace DeveloperUserAlreadyRegisteredException {\n  export const filterSensitiveLog = (obj: DeveloperUserAlreadyRegisteredException): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Input to the <code>GetOpenIdTokenForDeveloperIdentity</code> action.</p>\n */\nexport interface GetOpenIdTokenForDeveloperIdentityInput {\n  /**\n   * <p>An identity pool ID in the format REGION:GUID.</p>\n   */\n  IdentityPoolId: string | undefined;\n\n  /**\n   * <p>A unique identifier in the format REGION:GUID.</p>\n   */\n  IdentityId?: string;\n\n  /**\n   * <p>A set of optional name-value pairs that map provider names to provider tokens. Each\n   *          name-value pair represents a user from a public provider or developer provider. If the user\n   *          is from a developer provider, the name-value pair will follow the syntax\n   *             <code>\"developer_provider_name\": \"developer_user_identifier\"</code>. The developer\n   *          provider is the \"domain\" by which Cognito will refer to your users; you provided this\n   *          domain while creating/updating the identity pool. The developer user identifier is an\n   *          identifier from your backend that uniquely identifies a user. When you create an identity\n   *          pool, you can specify the supported logins.</p>\n   */\n  Logins: { [key: string]: string } | undefined;\n\n  /**\n   * <p>The expiration time of the token, in seconds. You can specify a custom expiration\n   *          time for the token so that you can cache it. If you don't provide an expiration time, the\n   *          token is valid for 15 minutes. You can exchange the token with Amazon STS for temporary AWS\n   *          credentials, which are valid for a maximum of one hour. The maximum token duration you can\n   *          set is 24 hours. You should take care in setting the expiration time for a token, as there\n   *          are significant security implications: an attacker could use a leaked token to access your\n   *          AWS resources for the token's duration.</p>\n   *          <note>\n   *             <p>Please provide for a small grace period, usually no more than 5 minutes, to account for clock skew.</p>\n   *          </note>\n   */\n  TokenDuration?: number;\n}\n\nexport namespace GetOpenIdTokenForDeveloperIdentityInput {\n  export const filterSensitiveLog = (obj: GetOpenIdTokenForDeveloperIdentityInput): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Returned in response to a successful <code>GetOpenIdTokenForDeveloperIdentity</code>\n *          request.</p>\n */\nexport interface GetOpenIdTokenForDeveloperIdentityResponse {\n  /**\n   * <p>A unique identifier in the format REGION:GUID.</p>\n   */\n  IdentityId?: string;\n\n  /**\n   * <p>An OpenID token.</p>\n   */\n  Token?: string;\n}\n\nexport namespace GetOpenIdTokenForDeveloperIdentityResponse {\n  export const filterSensitiveLog = (obj: GetOpenIdTokenForDeveloperIdentityResponse): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Input to the ListIdentities action.</p>\n */\nexport interface ListIdentitiesInput {\n  /**\n   * <p>An identity pool ID in the format REGION:GUID.</p>\n   */\n  IdentityPoolId: string | undefined;\n\n  /**\n   * <p>The maximum number of identities to return.</p>\n   */\n  MaxResults: number | undefined;\n\n  /**\n   * <p>A pagination token.</p>\n   */\n  NextToken?: string;\n\n  /**\n   * <p>An optional boolean parameter that allows you to hide disabled identities. If\n   *          omitted, the ListIdentities API will include disabled identities in the response.</p>\n   */\n  HideDisabled?: boolean;\n}\n\nexport namespace ListIdentitiesInput {\n  export const filterSensitiveLog = (obj: ListIdentitiesInput): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>The response to a ListIdentities request.</p>\n */\nexport interface ListIdentitiesResponse {\n  /**\n   * <p>An identity pool ID in the format REGION:GUID.</p>\n   */\n  IdentityPoolId?: string;\n\n  /**\n   * <p>An object containing a set of identities and associated mappings.</p>\n   */\n  Identities?: IdentityDescription[];\n\n  /**\n   * <p>A pagination token.</p>\n   */\n  NextToken?: string;\n}\n\nexport namespace ListIdentitiesResponse {\n  export const filterSensitiveLog = (obj: ListIdentitiesResponse): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Input to the ListIdentityPools action.</p>\n */\nexport interface ListIdentityPoolsInput {\n  /**\n   * <p>The maximum number of identities to return.</p>\n   */\n  MaxResults: number | undefined;\n\n  /**\n   * <p>A pagination token.</p>\n   */\n  NextToken?: string;\n}\n\nexport namespace ListIdentityPoolsInput {\n  export const filterSensitiveLog = (obj: ListIdentityPoolsInput): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>A description of the identity pool.</p>\n */\nexport interface IdentityPoolShortDescription {\n  /**\n   * <p>An identity pool ID in the format REGION:GUID.</p>\n   */\n  IdentityPoolId?: string;\n\n  /**\n   * <p>A string that you provide.</p>\n   */\n  IdentityPoolName?: string;\n}\n\nexport namespace IdentityPoolShortDescription {\n  export const filterSensitiveLog = (obj: IdentityPoolShortDescription): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>The result of a successful ListIdentityPools action.</p>\n */\nexport interface ListIdentityPoolsResponse {\n  /**\n   * <p>The identity pools returned by the ListIdentityPools action.</p>\n   */\n  IdentityPools?: IdentityPoolShortDescription[];\n\n  /**\n   * <p>A pagination token.</p>\n   */\n  NextToken?: string;\n}\n\nexport namespace ListIdentityPoolsResponse {\n  export const filterSensitiveLog = (obj: ListIdentityPoolsResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface ListTagsForResourceInput {\n  /**\n   * <p>The Amazon Resource Name (ARN) of the identity pool that the tags are assigned\n   *          to.</p>\n   */\n  ResourceArn: string | undefined;\n}\n\nexport namespace ListTagsForResourceInput {\n  export const filterSensitiveLog = (obj: ListTagsForResourceInput): any => ({\n    ...obj,\n  });\n}\n\nexport interface ListTagsForResourceResponse {\n  /**\n   * <p>The tags that are assigned to the identity pool.</p>\n   */\n  Tags?: { [key: string]: string };\n}\n\nexport namespace ListTagsForResourceResponse {\n  export const filterSensitiveLog = (obj: ListTagsForResourceResponse): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Input to the <code>LookupDeveloperIdentityInput</code> action.</p>\n */\nexport interface LookupDeveloperIdentityInput {\n  /**\n   * <p>An identity pool ID in the format REGION:GUID.</p>\n   */\n  IdentityPoolId: string | undefined;\n\n  /**\n   * <p>A unique identifier in the format REGION:GUID.</p>\n   */\n  IdentityId?: string;\n\n  /**\n   * <p>A unique ID used by your backend authentication process to identify a user.\n   *          Typically, a developer identity provider would issue many developer user identifiers, in\n   *          keeping with the number of users.</p>\n   */\n  DeveloperUserIdentifier?: string;\n\n  /**\n   * <p>The maximum number of identities to return.</p>\n   */\n  MaxResults?: number;\n\n  /**\n   * <p>A pagination token. The first call you make will have <code>NextToken</code> set to\n   *          null. After that the service will return <code>NextToken</code> values as needed. For\n   *          example, let's say you make a request with <code>MaxResults</code> set to 10, and there are\n   *          20 matches in the database. The service will return a pagination token as a part of the\n   *          response. This token can be used to call the API again and get results starting from the\n   *          11th match.</p>\n   */\n  NextToken?: string;\n}\n\nexport namespace LookupDeveloperIdentityInput {\n  export const filterSensitiveLog = (obj: LookupDeveloperIdentityInput): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Returned in response to a successful <code>LookupDeveloperIdentity</code>\n *          action.</p>\n */\nexport interface LookupDeveloperIdentityResponse {\n  /**\n   * <p>A unique identifier in the format REGION:GUID.</p>\n   */\n  IdentityId?: string;\n\n  /**\n   * <p>This is the list of developer user identifiers associated with an identity ID.\n   *          Cognito supports the association of multiple developer user identifiers with an identity\n   *          ID.</p>\n   */\n  DeveloperUserIdentifierList?: string[];\n\n  /**\n   * <p>A pagination token. The first call you make will have <code>NextToken</code> set to\n   *          null. After that the service will return <code>NextToken</code> values as needed. For\n   *          example, let's say you make a request with <code>MaxResults</code> set to 10, and there are\n   *          20 matches in the database. The service will return a pagination token as a part of the\n   *          response. This token can be used to call the API again and get results starting from the\n   *          11th match.</p>\n   */\n  NextToken?: string;\n}\n\nexport namespace LookupDeveloperIdentityResponse {\n  export const filterSensitiveLog = (obj: LookupDeveloperIdentityResponse): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Input to the <code>MergeDeveloperIdentities</code> action.</p>\n */\nexport interface MergeDeveloperIdentitiesInput {\n  /**\n   * <p>User identifier for the source user. The value should be a\n   *             <code>DeveloperUserIdentifier</code>.</p>\n   */\n  SourceUserIdentifier: string | undefined;\n\n  /**\n   * <p>User identifier for the destination user. The value should be a\n   *             <code>DeveloperUserIdentifier</code>.</p>\n   */\n  DestinationUserIdentifier: string | undefined;\n\n  /**\n   * <p>The \"domain\" by which Cognito will refer to your users. This is a (pseudo) domain\n   *          name that you provide while creating an identity pool. This name acts as a placeholder that\n   *          allows your backend and the Cognito service to communicate about the developer provider.\n   *          For the <code>DeveloperProviderName</code>, you can use letters as well as period (.),\n   *          underscore (_), and dash (-).</p>\n   */\n  DeveloperProviderName: string | undefined;\n\n  /**\n   * <p>An identity pool ID in the format REGION:GUID.</p>\n   */\n  IdentityPoolId: string | undefined;\n}\n\nexport namespace MergeDeveloperIdentitiesInput {\n  export const filterSensitiveLog = (obj: MergeDeveloperIdentitiesInput): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Returned in response to a successful <code>MergeDeveloperIdentities</code>\n *          action.</p>\n */\nexport interface MergeDeveloperIdentitiesResponse {\n  /**\n   * <p>A unique identifier in the format REGION:GUID.</p>\n   */\n  IdentityId?: string;\n}\n\nexport namespace MergeDeveloperIdentitiesResponse {\n  export const filterSensitiveLog = (obj: MergeDeveloperIdentitiesResponse): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Thrown if there are parallel requests to modify a resource.</p>\n */\nexport interface ConcurrentModificationException extends __SmithyException, $MetadataBearer {\n  name: \"ConcurrentModificationException\";\n  $fault: \"client\";\n  /**\n   * <p>The message returned by a ConcurrentModificationException.</p>\n   */\n  message?: string;\n}\n\nexport namespace ConcurrentModificationException {\n  export const filterSensitiveLog = (obj: ConcurrentModificationException): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Input to the <code>SetIdentityPoolRoles</code> action.</p>\n */\nexport interface SetIdentityPoolRolesInput {\n  /**\n   * <p>An identity pool ID in the format REGION:GUID.</p>\n   */\n  IdentityPoolId: string | undefined;\n\n  /**\n   * <p>The map of roles associated with this pool. For a given role, the key will be either\n   *          \"authenticated\" or \"unauthenticated\" and the value will be the Role ARN.</p>\n   */\n  Roles: { [key: string]: string } | undefined;\n\n  /**\n   * <p>How users for a specific identity provider are to mapped to roles. This is a string\n   *          to <a>RoleMapping</a> object map. The string identifies the identity provider,\n   *          for example, \"graph.facebook.com\" or\n   *          \"cognito-idp-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id\".</p>\n   *          <p>Up to 25 rules can be specified per identity provider.</p>\n   */\n  RoleMappings?: { [key: string]: RoleMapping };\n}\n\nexport namespace SetIdentityPoolRolesInput {\n  export const filterSensitiveLog = (obj: SetIdentityPoolRolesInput): any => ({\n    ...obj,\n  });\n}\n\nexport interface TagResourceInput {\n  /**\n   * <p>The Amazon Resource Name (ARN) of the identity pool to assign the tags to.</p>\n   */\n  ResourceArn: string | undefined;\n\n  /**\n   * <p>The tags to assign to the identity pool.</p>\n   */\n  Tags: { [key: string]: string } | undefined;\n}\n\nexport namespace TagResourceInput {\n  export const filterSensitiveLog = (obj: TagResourceInput): any => ({\n    ...obj,\n  });\n}\n\nexport interface TagResourceResponse {}\n\nexport namespace TagResourceResponse {\n  export const filterSensitiveLog = (obj: TagResourceResponse): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Input to the <code>UnlinkDeveloperIdentity</code> action.</p>\n */\nexport interface UnlinkDeveloperIdentityInput {\n  /**\n   * <p>A unique identifier in the format REGION:GUID.</p>\n   */\n  IdentityId: string | undefined;\n\n  /**\n   * <p>An identity pool ID in the format REGION:GUID.</p>\n   */\n  IdentityPoolId: string | undefined;\n\n  /**\n   * <p>The \"domain\" by which Cognito will refer to your users.</p>\n   */\n  DeveloperProviderName: string | undefined;\n\n  /**\n   * <p>A unique ID used by your backend authentication process to identify a user.</p>\n   */\n  DeveloperUserIdentifier: string | undefined;\n}\n\nexport namespace UnlinkDeveloperIdentityInput {\n  export const filterSensitiveLog = (obj: UnlinkDeveloperIdentityInput): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Input to the UnlinkIdentity action.</p>\n */\nexport interface UnlinkIdentityInput {\n  /**\n   * <p>A unique identifier in the format REGION:GUID.</p>\n   */\n  IdentityId: string | undefined;\n\n  /**\n   * <p>A set of optional name-value pairs that map provider names to provider\n   *          tokens.</p>\n   */\n  Logins: { [key: string]: string } | undefined;\n\n  /**\n   * <p>Provider names to unlink from this identity.</p>\n   */\n  LoginsToRemove: string[] | undefined;\n}\n\nexport namespace UnlinkIdentityInput {\n  export const filterSensitiveLog = (obj: UnlinkIdentityInput): any => ({\n    ...obj,\n  });\n}\n\nexport interface UntagResourceInput {\n  /**\n   * <p>The Amazon Resource Name (ARN) of the identity pool that the tags are assigned\n   *          to.</p>\n   */\n  ResourceArn: string | undefined;\n\n  /**\n   * <p>The keys of the tags to remove from the user pool.</p>\n   */\n  TagKeys: string[] | undefined;\n}\n\nexport namespace UntagResourceInput {\n  export const filterSensitiveLog = (obj: UntagResourceInput): any => ({\n    ...obj,\n  });\n}\n\nexport interface UntagResourceResponse {}\n\nexport namespace UntagResourceResponse {\n  export const filterSensitiveLog = (obj: UntagResourceResponse): any => ({\n    ...obj,\n  });\n}\n", "import { CreateIdentityPoolCommandInput, CreateIdentityPoolCommandOutput } from \"../commands/CreateIdentityPoolCommand\";\nimport { DeleteIdentitiesCommandInput, DeleteIdentitiesCommandOutput } from \"../commands/DeleteIdentitiesCommand\";\nimport { DeleteIdentityPoolCommandInput, DeleteIdentityPoolCommandOutput } from \"../commands/DeleteIdentityPoolCommand\";\nimport { DescribeIdentityCommandInput, DescribeIdentityCommandOutput } from \"../commands/DescribeIdentityCommand\";\nimport {\n  DescribeIdentityPoolCommandInput,\n  DescribeIdentityPoolCommandOutput,\n} from \"../commands/DescribeIdentityPoolCommand\";\nimport {\n  GetCredentialsForIdentityCommandInput,\n  GetCredentialsForIdentityCommandOutput,\n} from \"../commands/GetCredentialsForIdentityCommand\";\nimport { GetIdCommandInput, GetIdCommandOutput } from \"../commands/GetIdCommand\";\nimport {\n  GetIdentityPoolRolesCommandInput,\n  GetIdentityPoolRolesCommandOutput,\n} from \"../commands/GetIdentityPoolRolesCommand\";\nimport { GetOpenIdTokenCommandInput, GetOpenIdTokenCommandOutput } from \"../commands/GetOpenIdTokenCommand\";\nimport {\n  GetOpenIdTokenForDeveloperIdentityCommandInput,\n  GetOpenIdTokenForDeveloperIdentityCommandOutput,\n} from \"../commands/GetOpenIdTokenForDeveloperIdentityCommand\";\nimport { ListIdentitiesCommandInput, ListIdentitiesCommandOutput } from \"../commands/ListIdentitiesCommand\";\nimport { ListIdentityPoolsCommandInput, ListIdentityPoolsCommandOutput } from \"../commands/ListIdentityPoolsCommand\";\nimport {\n  ListTagsForResourceCommandInput,\n  ListTagsForResourceCommandOutput,\n} from \"../commands/ListTagsForResourceCommand\";\nimport {\n  LookupDeveloperIdentityCommandInput,\n  LookupDeveloperIdentityCommandOutput,\n} from \"../commands/LookupDeveloperIdentityCommand\";\nimport {\n  MergeDeveloperIdentitiesCommandInput,\n  MergeDeveloperIdentitiesCommandOutput,\n} from \"../commands/MergeDeveloperIdentitiesCommand\";\nimport {\n  SetIdentityPoolRolesCommandInput,\n  SetIdentityPoolRolesCommandOutput,\n} from \"../commands/SetIdentityPoolRolesCommand\";\nimport { TagResourceCommandInput, TagResourceCommandOutput } from \"../commands/TagResourceCommand\";\nimport {\n  UnlinkDeveloperIdentityCommandInput,\n  UnlinkDeveloperIdentityCommandOutput,\n} from \"../commands/UnlinkDeveloperIdentityCommand\";\nimport { UnlinkIdentityCommandInput, UnlinkIdentityCommandOutput } from \"../commands/UnlinkIdentityCommand\";\nimport { UntagResourceCommandInput, UntagResourceCommandOutput } from \"../commands/UntagResourceCommand\";\nimport { UpdateIdentityPoolCommandInput, UpdateIdentityPoolCommandOutput } from \"../commands/UpdateIdentityPoolCommand\";\nimport {\n  CognitoIdentityProvider,\n  ConcurrentModificationException,\n  CreateIdentityPoolInput,\n  Credentials,\n  DeleteIdentitiesInput,\n  DeleteIdentitiesResponse,\n  DeleteIdentityPoolInput,\n  DescribeIdentityInput,\n  DescribeIdentityPoolInput,\n  DeveloperUserAlreadyRegisteredException,\n  ExternalServiceException,\n  GetCredentialsForIdentityInput,\n  GetCredentialsForIdentityResponse,\n  GetIdInput,\n  GetIdResponse,\n  GetIdentityPoolRolesInput,\n  GetIdentityPoolRolesResponse,\n  GetOpenIdTokenForDeveloperIdentityInput,\n  GetOpenIdTokenForDeveloperIdentityResponse,\n  GetOpenIdTokenInput,\n  GetOpenIdTokenResponse,\n  IdentityDescription,\n  IdentityPool,\n  IdentityPoolShortDescription,\n  InternalErrorException,\n  InvalidIdentityPoolConfigurationException,\n  InvalidParameterException,\n  LimitExceededException,\n  ListIdentitiesInput,\n  ListIdentitiesResponse,\n  ListIdentityPoolsInput,\n  ListIdentityPoolsResponse,\n  ListTagsForResourceInput,\n  ListTagsForResourceResponse,\n  LookupDeveloperIdentityInput,\n  LookupDeveloperIdentityResponse,\n  MappingRule,\n  MergeDeveloperIdentitiesInput,\n  MergeDeveloperIdentitiesResponse,\n  NotAuthorizedException,\n  ResourceConflictException,\n  ResourceNotFoundException,\n  RoleMapping,\n  RulesConfigurationType,\n  SetIdentityPoolRolesInput,\n  TagResourceInput,\n  TagResourceResponse,\n  TooManyRequestsException,\n  UnlinkDeveloperIdentityInput,\n  UnlinkIdentityInput,\n  UnprocessedIdentityId,\n  UntagResourceInput,\n  UntagResourceResponse,\n} from \"../models/models_0\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { SmithyException as __SmithyException } from \"@aws-sdk/smithy-client\";\nimport {\n  Endpoint as __Endpoint,\n  HeaderBag as __HeaderBag,\n  MetadataBearer as __MetadataBearer,\n  ResponseMetadata as __ResponseMetadata,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport const serializeAws_json1_1CreateIdentityPoolCommand = async (\n  input: CreateIdentityPoolCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.CreateIdentityPool\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1CreateIdentityPoolInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DeleteIdentitiesCommand = async (\n  input: DeleteIdentitiesCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.DeleteIdentities\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DeleteIdentitiesInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DeleteIdentityPoolCommand = async (\n  input: DeleteIdentityPoolCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.DeleteIdentityPool\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DeleteIdentityPoolInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DescribeIdentityCommand = async (\n  input: DescribeIdentityCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.DescribeIdentity\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DescribeIdentityInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DescribeIdentityPoolCommand = async (\n  input: DescribeIdentityPoolCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.DescribeIdentityPool\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DescribeIdentityPoolInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1GetCredentialsForIdentityCommand = async (\n  input: GetCredentialsForIdentityCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.GetCredentialsForIdentity\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1GetCredentialsForIdentityInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1GetIdCommand = async (\n  input: GetIdCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.GetId\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1GetIdInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1GetIdentityPoolRolesCommand = async (\n  input: GetIdentityPoolRolesCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.GetIdentityPoolRoles\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1GetIdentityPoolRolesInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1GetOpenIdTokenCommand = async (\n  input: GetOpenIdTokenCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.GetOpenIdToken\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1GetOpenIdTokenInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1GetOpenIdTokenForDeveloperIdentityCommand = async (\n  input: GetOpenIdTokenForDeveloperIdentityCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.GetOpenIdTokenForDeveloperIdentity\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1GetOpenIdTokenForDeveloperIdentityInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1ListIdentitiesCommand = async (\n  input: ListIdentitiesCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.ListIdentities\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1ListIdentitiesInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1ListIdentityPoolsCommand = async (\n  input: ListIdentityPoolsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.ListIdentityPools\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1ListIdentityPoolsInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1ListTagsForResourceCommand = async (\n  input: ListTagsForResourceCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.ListTagsForResource\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1ListTagsForResourceInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1LookupDeveloperIdentityCommand = async (\n  input: LookupDeveloperIdentityCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.LookupDeveloperIdentity\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1LookupDeveloperIdentityInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1MergeDeveloperIdentitiesCommand = async (\n  input: MergeDeveloperIdentitiesCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.MergeDeveloperIdentities\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1MergeDeveloperIdentitiesInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1SetIdentityPoolRolesCommand = async (\n  input: SetIdentityPoolRolesCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.SetIdentityPoolRoles\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1SetIdentityPoolRolesInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1TagResourceCommand = async (\n  input: TagResourceCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.TagResource\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1TagResourceInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1UnlinkDeveloperIdentityCommand = async (\n  input: UnlinkDeveloperIdentityCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.UnlinkDeveloperIdentity\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1UnlinkDeveloperIdentityInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1UnlinkIdentityCommand = async (\n  input: UnlinkIdentityCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.UnlinkIdentity\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1UnlinkIdentityInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1UntagResourceCommand = async (\n  input: UntagResourceCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.UntagResource\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1UntagResourceInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1UpdateIdentityPoolCommand = async (\n  input: UpdateIdentityPoolCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.UpdateIdentityPool\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1IdentityPool(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const deserializeAws_json1_1CreateIdentityPoolCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateIdentityPoolCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1CreateIdentityPoolCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1IdentityPool(data, context);\n  const response: CreateIdentityPoolCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1CreateIdentityPoolCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateIdentityPoolCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.cognitoidentity#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      response = {\n        ...(await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceConflictException\":\n    case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DeleteIdentitiesCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteIdentitiesCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DeleteIdentitiesCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1DeleteIdentitiesResponse(data, context);\n  const response: DeleteIdentitiesCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DeleteIdentitiesCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteIdentitiesCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DeleteIdentityPoolCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteIdentityPoolCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DeleteIdentityPoolCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: DeleteIdentityPoolCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DeleteIdentityPoolCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteIdentityPoolCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      response = {\n        ...(await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DescribeIdentityCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeIdentityCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DescribeIdentityCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1IdentityDescription(data, context);\n  const response: DescribeIdentityCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DescribeIdentityCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeIdentityCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      response = {\n        ...(await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DescribeIdentityPoolCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeIdentityPoolCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DescribeIdentityPoolCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1IdentityPool(data, context);\n  const response: DescribeIdentityPoolCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DescribeIdentityPoolCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeIdentityPoolCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      response = {\n        ...(await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1GetCredentialsForIdentityCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetCredentialsForIdentityCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1GetCredentialsForIdentityCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1GetCredentialsForIdentityResponse(data, context);\n  const response: GetCredentialsForIdentityCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1GetCredentialsForIdentityCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetCredentialsForIdentityCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"ExternalServiceException\":\n    case \"com.amazonaws.cognitoidentity#ExternalServiceException\":\n      response = {\n        ...(await deserializeAws_json1_1ExternalServiceExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidIdentityPoolConfigurationException\":\n    case \"com.amazonaws.cognitoidentity#InvalidIdentityPoolConfigurationException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidIdentityPoolConfigurationExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      response = {\n        ...(await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceConflictException\":\n    case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1GetIdCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetIdCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1GetIdCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1GetIdResponse(data, context);\n  const response: GetIdCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1GetIdCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetIdCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"ExternalServiceException\":\n    case \"com.amazonaws.cognitoidentity#ExternalServiceException\":\n      response = {\n        ...(await deserializeAws_json1_1ExternalServiceExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.cognitoidentity#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      response = {\n        ...(await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceConflictException\":\n    case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1GetIdentityPoolRolesCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetIdentityPoolRolesCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1GetIdentityPoolRolesCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1GetIdentityPoolRolesResponse(data, context);\n  const response: GetIdentityPoolRolesCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1GetIdentityPoolRolesCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetIdentityPoolRolesCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      response = {\n        ...(await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceConflictException\":\n    case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1GetOpenIdTokenCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetOpenIdTokenCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1GetOpenIdTokenCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1GetOpenIdTokenResponse(data, context);\n  const response: GetOpenIdTokenCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1GetOpenIdTokenCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetOpenIdTokenCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"ExternalServiceException\":\n    case \"com.amazonaws.cognitoidentity#ExternalServiceException\":\n      response = {\n        ...(await deserializeAws_json1_1ExternalServiceExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      response = {\n        ...(await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceConflictException\":\n    case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1GetOpenIdTokenForDeveloperIdentityCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetOpenIdTokenForDeveloperIdentityCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1GetOpenIdTokenForDeveloperIdentityCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1GetOpenIdTokenForDeveloperIdentityResponse(data, context);\n  const response: GetOpenIdTokenForDeveloperIdentityCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1GetOpenIdTokenForDeveloperIdentityCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetOpenIdTokenForDeveloperIdentityCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"DeveloperUserAlreadyRegisteredException\":\n    case \"com.amazonaws.cognitoidentity#DeveloperUserAlreadyRegisteredException\":\n      response = {\n        ...(await deserializeAws_json1_1DeveloperUserAlreadyRegisteredExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      response = {\n        ...(await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceConflictException\":\n    case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1ListIdentitiesCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListIdentitiesCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1ListIdentitiesCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1ListIdentitiesResponse(data, context);\n  const response: ListIdentitiesCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1ListIdentitiesCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListIdentitiesCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      response = {\n        ...(await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1ListIdentityPoolsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListIdentityPoolsCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1ListIdentityPoolsCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1ListIdentityPoolsResponse(data, context);\n  const response: ListIdentityPoolsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1ListIdentityPoolsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListIdentityPoolsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      response = {\n        ...(await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1ListTagsForResourceCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListTagsForResourceCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1ListTagsForResourceCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1ListTagsForResourceResponse(data, context);\n  const response: ListTagsForResourceCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1ListTagsForResourceCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListTagsForResourceCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      response = {\n        ...(await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1LookupDeveloperIdentityCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<LookupDeveloperIdentityCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1LookupDeveloperIdentityCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1LookupDeveloperIdentityResponse(data, context);\n  const response: LookupDeveloperIdentityCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1LookupDeveloperIdentityCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<LookupDeveloperIdentityCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      response = {\n        ...(await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceConflictException\":\n    case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1MergeDeveloperIdentitiesCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<MergeDeveloperIdentitiesCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1MergeDeveloperIdentitiesCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1MergeDeveloperIdentitiesResponse(data, context);\n  const response: MergeDeveloperIdentitiesCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1MergeDeveloperIdentitiesCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<MergeDeveloperIdentitiesCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      response = {\n        ...(await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceConflictException\":\n    case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1SetIdentityPoolRolesCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<SetIdentityPoolRolesCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1SetIdentityPoolRolesCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: SetIdentityPoolRolesCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1SetIdentityPoolRolesCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<SetIdentityPoolRolesCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"ConcurrentModificationException\":\n    case \"com.amazonaws.cognitoidentity#ConcurrentModificationException\":\n      response = {\n        ...(await deserializeAws_json1_1ConcurrentModificationExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      response = {\n        ...(await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceConflictException\":\n    case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1TagResourceCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<TagResourceCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1TagResourceCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1TagResourceResponse(data, context);\n  const response: TagResourceCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1TagResourceCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<TagResourceCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      response = {\n        ...(await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1UnlinkDeveloperIdentityCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UnlinkDeveloperIdentityCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1UnlinkDeveloperIdentityCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: UnlinkDeveloperIdentityCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1UnlinkDeveloperIdentityCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UnlinkDeveloperIdentityCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      response = {\n        ...(await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceConflictException\":\n    case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1UnlinkIdentityCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UnlinkIdentityCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1UnlinkIdentityCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: UnlinkIdentityCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1UnlinkIdentityCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UnlinkIdentityCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"ExternalServiceException\":\n    case \"com.amazonaws.cognitoidentity#ExternalServiceException\":\n      response = {\n        ...(await deserializeAws_json1_1ExternalServiceExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      response = {\n        ...(await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceConflictException\":\n    case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1UntagResourceCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UntagResourceCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1UntagResourceCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1UntagResourceResponse(data, context);\n  const response: UntagResourceCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1UntagResourceCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UntagResourceCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      response = {\n        ...(await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1UpdateIdentityPoolCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateIdentityPoolCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1UpdateIdentityPoolCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1IdentityPool(data, context);\n  const response: UpdateIdentityPoolCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1UpdateIdentityPoolCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateIdentityPoolCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"ConcurrentModificationException\":\n    case \"com.amazonaws.cognitoidentity#ConcurrentModificationException\":\n      response = {\n        ...(await deserializeAws_json1_1ConcurrentModificationExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.cognitoidentity#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      response = {\n        ...(await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceConflictException\":\n    case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nconst deserializeAws_json1_1ConcurrentModificationExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ConcurrentModificationException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1ConcurrentModificationException(body, context);\n  const contents: ConcurrentModificationException = {\n    name: \"ConcurrentModificationException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1DeveloperUserAlreadyRegisteredExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<DeveloperUserAlreadyRegisteredException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1DeveloperUserAlreadyRegisteredException(body, context);\n  const contents: DeveloperUserAlreadyRegisteredException = {\n    name: \"DeveloperUserAlreadyRegisteredException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1ExternalServiceExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ExternalServiceException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1ExternalServiceException(body, context);\n  const contents: ExternalServiceException = {\n    name: \"ExternalServiceException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1InternalErrorExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<InternalErrorException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1InternalErrorException(body, context);\n  const contents: InternalErrorException = {\n    name: \"InternalErrorException\",\n    $fault: \"server\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1InvalidIdentityPoolConfigurationExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<InvalidIdentityPoolConfigurationException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1InvalidIdentityPoolConfigurationException(body, context);\n  const contents: InvalidIdentityPoolConfigurationException = {\n    name: \"InvalidIdentityPoolConfigurationException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1InvalidParameterExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<InvalidParameterException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1InvalidParameterException(body, context);\n  const contents: InvalidParameterException = {\n    name: \"InvalidParameterException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1LimitExceededExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<LimitExceededException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1LimitExceededException(body, context);\n  const contents: LimitExceededException = {\n    name: \"LimitExceededException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1NotAuthorizedExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<NotAuthorizedException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1NotAuthorizedException(body, context);\n  const contents: NotAuthorizedException = {\n    name: \"NotAuthorizedException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1ResourceConflictExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ResourceConflictException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1ResourceConflictException(body, context);\n  const contents: ResourceConflictException = {\n    name: \"ResourceConflictException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1ResourceNotFoundExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ResourceNotFoundException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1ResourceNotFoundException(body, context);\n  const contents: ResourceNotFoundException = {\n    name: \"ResourceNotFoundException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1TooManyRequestsExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<TooManyRequestsException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1TooManyRequestsException(body, context);\n  const contents: TooManyRequestsException = {\n    name: \"TooManyRequestsException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst serializeAws_json1_1CognitoIdentityProvider = (input: CognitoIdentityProvider, context: __SerdeContext): any => {\n  return {\n    ...(input.ClientId !== undefined && input.ClientId !== null && { ClientId: input.ClientId }),\n    ...(input.ProviderName !== undefined && input.ProviderName !== null && { ProviderName: input.ProviderName }),\n    ...(input.ServerSideTokenCheck !== undefined &&\n      input.ServerSideTokenCheck !== null && { ServerSideTokenCheck: input.ServerSideTokenCheck }),\n  };\n};\n\nconst serializeAws_json1_1CognitoIdentityProviderList = (\n  input: CognitoIdentityProvider[],\n  context: __SerdeContext\n): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return serializeAws_json1_1CognitoIdentityProvider(entry, context);\n    });\n};\n\nconst serializeAws_json1_1CreateIdentityPoolInput = (input: CreateIdentityPoolInput, context: __SerdeContext): any => {\n  return {\n    ...(input.AllowClassicFlow !== undefined &&\n      input.AllowClassicFlow !== null && { AllowClassicFlow: input.AllowClassicFlow }),\n    ...(input.AllowUnauthenticatedIdentities !== undefined &&\n      input.AllowUnauthenticatedIdentities !== null && {\n        AllowUnauthenticatedIdentities: input.AllowUnauthenticatedIdentities,\n      }),\n    ...(input.CognitoIdentityProviders !== undefined &&\n      input.CognitoIdentityProviders !== null && {\n        CognitoIdentityProviders: serializeAws_json1_1CognitoIdentityProviderList(\n          input.CognitoIdentityProviders,\n          context\n        ),\n      }),\n    ...(input.DeveloperProviderName !== undefined &&\n      input.DeveloperProviderName !== null && { DeveloperProviderName: input.DeveloperProviderName }),\n    ...(input.IdentityPoolName !== undefined &&\n      input.IdentityPoolName !== null && { IdentityPoolName: input.IdentityPoolName }),\n    ...(input.IdentityPoolTags !== undefined &&\n      input.IdentityPoolTags !== null && {\n        IdentityPoolTags: serializeAws_json1_1IdentityPoolTagsType(input.IdentityPoolTags, context),\n      }),\n    ...(input.OpenIdConnectProviderARNs !== undefined &&\n      input.OpenIdConnectProviderARNs !== null && {\n        OpenIdConnectProviderARNs: serializeAws_json1_1OIDCProviderList(input.OpenIdConnectProviderARNs, context),\n      }),\n    ...(input.SamlProviderARNs !== undefined &&\n      input.SamlProviderARNs !== null && {\n        SamlProviderARNs: serializeAws_json1_1SAMLProviderList(input.SamlProviderARNs, context),\n      }),\n    ...(input.SupportedLoginProviders !== undefined &&\n      input.SupportedLoginProviders !== null && {\n        SupportedLoginProviders: serializeAws_json1_1IdentityProviders(input.SupportedLoginProviders, context),\n      }),\n  };\n};\n\nconst serializeAws_json1_1DeleteIdentitiesInput = (input: DeleteIdentitiesInput, context: __SerdeContext): any => {\n  return {\n    ...(input.IdentityIdsToDelete !== undefined &&\n      input.IdentityIdsToDelete !== null && {\n        IdentityIdsToDelete: serializeAws_json1_1IdentityIdList(input.IdentityIdsToDelete, context),\n      }),\n  };\n};\n\nconst serializeAws_json1_1DeleteIdentityPoolInput = (input: DeleteIdentityPoolInput, context: __SerdeContext): any => {\n  return {\n    ...(input.IdentityPoolId !== undefined &&\n      input.IdentityPoolId !== null && { IdentityPoolId: input.IdentityPoolId }),\n  };\n};\n\nconst serializeAws_json1_1DescribeIdentityInput = (input: DescribeIdentityInput, context: __SerdeContext): any => {\n  return {\n    ...(input.IdentityId !== undefined && input.IdentityId !== null && { IdentityId: input.IdentityId }),\n  };\n};\n\nconst serializeAws_json1_1DescribeIdentityPoolInput = (\n  input: DescribeIdentityPoolInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.IdentityPoolId !== undefined &&\n      input.IdentityPoolId !== null && { IdentityPoolId: input.IdentityPoolId }),\n  };\n};\n\nconst serializeAws_json1_1GetCredentialsForIdentityInput = (\n  input: GetCredentialsForIdentityInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.CustomRoleArn !== undefined && input.CustomRoleArn !== null && { CustomRoleArn: input.CustomRoleArn }),\n    ...(input.IdentityId !== undefined && input.IdentityId !== null && { IdentityId: input.IdentityId }),\n    ...(input.Logins !== undefined &&\n      input.Logins !== null && { Logins: serializeAws_json1_1LoginsMap(input.Logins, context) }),\n  };\n};\n\nconst serializeAws_json1_1GetIdentityPoolRolesInput = (\n  input: GetIdentityPoolRolesInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.IdentityPoolId !== undefined &&\n      input.IdentityPoolId !== null && { IdentityPoolId: input.IdentityPoolId }),\n  };\n};\n\nconst serializeAws_json1_1GetIdInput = (input: GetIdInput, context: __SerdeContext): any => {\n  return {\n    ...(input.AccountId !== undefined && input.AccountId !== null && { AccountId: input.AccountId }),\n    ...(input.IdentityPoolId !== undefined &&\n      input.IdentityPoolId !== null && { IdentityPoolId: input.IdentityPoolId }),\n    ...(input.Logins !== undefined &&\n      input.Logins !== null && { Logins: serializeAws_json1_1LoginsMap(input.Logins, context) }),\n  };\n};\n\nconst serializeAws_json1_1GetOpenIdTokenForDeveloperIdentityInput = (\n  input: GetOpenIdTokenForDeveloperIdentityInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.IdentityId !== undefined && input.IdentityId !== null && { IdentityId: input.IdentityId }),\n    ...(input.IdentityPoolId !== undefined &&\n      input.IdentityPoolId !== null && { IdentityPoolId: input.IdentityPoolId }),\n    ...(input.Logins !== undefined &&\n      input.Logins !== null && { Logins: serializeAws_json1_1LoginsMap(input.Logins, context) }),\n    ...(input.TokenDuration !== undefined && input.TokenDuration !== null && { TokenDuration: input.TokenDuration }),\n  };\n};\n\nconst serializeAws_json1_1GetOpenIdTokenInput = (input: GetOpenIdTokenInput, context: __SerdeContext): any => {\n  return {\n    ...(input.IdentityId !== undefined && input.IdentityId !== null && { IdentityId: input.IdentityId }),\n    ...(input.Logins !== undefined &&\n      input.Logins !== null && { Logins: serializeAws_json1_1LoginsMap(input.Logins, context) }),\n  };\n};\n\nconst serializeAws_json1_1IdentityIdList = (input: string[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst serializeAws_json1_1IdentityPool = (input: IdentityPool, context: __SerdeContext): any => {\n  return {\n    ...(input.AllowClassicFlow !== undefined &&\n      input.AllowClassicFlow !== null && { AllowClassicFlow: input.AllowClassicFlow }),\n    ...(input.AllowUnauthenticatedIdentities !== undefined &&\n      input.AllowUnauthenticatedIdentities !== null && {\n        AllowUnauthenticatedIdentities: input.AllowUnauthenticatedIdentities,\n      }),\n    ...(input.CognitoIdentityProviders !== undefined &&\n      input.CognitoIdentityProviders !== null && {\n        CognitoIdentityProviders: serializeAws_json1_1CognitoIdentityProviderList(\n          input.CognitoIdentityProviders,\n          context\n        ),\n      }),\n    ...(input.DeveloperProviderName !== undefined &&\n      input.DeveloperProviderName !== null && { DeveloperProviderName: input.DeveloperProviderName }),\n    ...(input.IdentityPoolId !== undefined &&\n      input.IdentityPoolId !== null && { IdentityPoolId: input.IdentityPoolId }),\n    ...(input.IdentityPoolName !== undefined &&\n      input.IdentityPoolName !== null && { IdentityPoolName: input.IdentityPoolName }),\n    ...(input.IdentityPoolTags !== undefined &&\n      input.IdentityPoolTags !== null && {\n        IdentityPoolTags: serializeAws_json1_1IdentityPoolTagsType(input.IdentityPoolTags, context),\n      }),\n    ...(input.OpenIdConnectProviderARNs !== undefined &&\n      input.OpenIdConnectProviderARNs !== null && {\n        OpenIdConnectProviderARNs: serializeAws_json1_1OIDCProviderList(input.OpenIdConnectProviderARNs, context),\n      }),\n    ...(input.SamlProviderARNs !== undefined &&\n      input.SamlProviderARNs !== null && {\n        SamlProviderARNs: serializeAws_json1_1SAMLProviderList(input.SamlProviderARNs, context),\n      }),\n    ...(input.SupportedLoginProviders !== undefined &&\n      input.SupportedLoginProviders !== null && {\n        SupportedLoginProviders: serializeAws_json1_1IdentityProviders(input.SupportedLoginProviders, context),\n      }),\n  };\n};\n\nconst serializeAws_json1_1IdentityPoolTagsListType = (input: string[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst serializeAws_json1_1IdentityPoolTagsType = (input: { [key: string]: string }, context: __SerdeContext): any => {\n  return Object.entries(input).reduce((acc: { [key: string]: string }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: value,\n    };\n  }, {});\n};\n\nconst serializeAws_json1_1IdentityProviders = (input: { [key: string]: string }, context: __SerdeContext): any => {\n  return Object.entries(input).reduce((acc: { [key: string]: string }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: value,\n    };\n  }, {});\n};\n\nconst serializeAws_json1_1ListIdentitiesInput = (input: ListIdentitiesInput, context: __SerdeContext): any => {\n  return {\n    ...(input.HideDisabled !== undefined && input.HideDisabled !== null && { HideDisabled: input.HideDisabled }),\n    ...(input.IdentityPoolId !== undefined &&\n      input.IdentityPoolId !== null && { IdentityPoolId: input.IdentityPoolId }),\n    ...(input.MaxResults !== undefined && input.MaxResults !== null && { MaxResults: input.MaxResults }),\n    ...(input.NextToken !== undefined && input.NextToken !== null && { NextToken: input.NextToken }),\n  };\n};\n\nconst serializeAws_json1_1ListIdentityPoolsInput = (input: ListIdentityPoolsInput, context: __SerdeContext): any => {\n  return {\n    ...(input.MaxResults !== undefined && input.MaxResults !== null && { MaxResults: input.MaxResults }),\n    ...(input.NextToken !== undefined && input.NextToken !== null && { NextToken: input.NextToken }),\n  };\n};\n\nconst serializeAws_json1_1ListTagsForResourceInput = (\n  input: ListTagsForResourceInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.ResourceArn !== undefined && input.ResourceArn !== null && { ResourceArn: input.ResourceArn }),\n  };\n};\n\nconst serializeAws_json1_1LoginsList = (input: string[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst serializeAws_json1_1LoginsMap = (input: { [key: string]: string }, context: __SerdeContext): any => {\n  return Object.entries(input).reduce((acc: { [key: string]: string }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: value,\n    };\n  }, {});\n};\n\nconst serializeAws_json1_1LookupDeveloperIdentityInput = (\n  input: LookupDeveloperIdentityInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.DeveloperUserIdentifier !== undefined &&\n      input.DeveloperUserIdentifier !== null && { DeveloperUserIdentifier: input.DeveloperUserIdentifier }),\n    ...(input.IdentityId !== undefined && input.IdentityId !== null && { IdentityId: input.IdentityId }),\n    ...(input.IdentityPoolId !== undefined &&\n      input.IdentityPoolId !== null && { IdentityPoolId: input.IdentityPoolId }),\n    ...(input.MaxResults !== undefined && input.MaxResults !== null && { MaxResults: input.MaxResults }),\n    ...(input.NextToken !== undefined && input.NextToken !== null && { NextToken: input.NextToken }),\n  };\n};\n\nconst serializeAws_json1_1MappingRule = (input: MappingRule, context: __SerdeContext): any => {\n  return {\n    ...(input.Claim !== undefined && input.Claim !== null && { Claim: input.Claim }),\n    ...(input.MatchType !== undefined && input.MatchType !== null && { MatchType: input.MatchType }),\n    ...(input.RoleARN !== undefined && input.RoleARN !== null && { RoleARN: input.RoleARN }),\n    ...(input.Value !== undefined && input.Value !== null && { Value: input.Value }),\n  };\n};\n\nconst serializeAws_json1_1MappingRulesList = (input: MappingRule[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return serializeAws_json1_1MappingRule(entry, context);\n    });\n};\n\nconst serializeAws_json1_1MergeDeveloperIdentitiesInput = (\n  input: MergeDeveloperIdentitiesInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.DestinationUserIdentifier !== undefined &&\n      input.DestinationUserIdentifier !== null && { DestinationUserIdentifier: input.DestinationUserIdentifier }),\n    ...(input.DeveloperProviderName !== undefined &&\n      input.DeveloperProviderName !== null && { DeveloperProviderName: input.DeveloperProviderName }),\n    ...(input.IdentityPoolId !== undefined &&\n      input.IdentityPoolId !== null && { IdentityPoolId: input.IdentityPoolId }),\n    ...(input.SourceUserIdentifier !== undefined &&\n      input.SourceUserIdentifier !== null && { SourceUserIdentifier: input.SourceUserIdentifier }),\n  };\n};\n\nconst serializeAws_json1_1OIDCProviderList = (input: string[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst serializeAws_json1_1RoleMapping = (input: RoleMapping, context: __SerdeContext): any => {\n  return {\n    ...(input.AmbiguousRoleResolution !== undefined &&\n      input.AmbiguousRoleResolution !== null && { AmbiguousRoleResolution: input.AmbiguousRoleResolution }),\n    ...(input.RulesConfiguration !== undefined &&\n      input.RulesConfiguration !== null && {\n        RulesConfiguration: serializeAws_json1_1RulesConfigurationType(input.RulesConfiguration, context),\n      }),\n    ...(input.Type !== undefined && input.Type !== null && { Type: input.Type }),\n  };\n};\n\nconst serializeAws_json1_1RoleMappingMap = (input: { [key: string]: RoleMapping }, context: __SerdeContext): any => {\n  return Object.entries(input).reduce((acc: { [key: string]: RoleMapping }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: serializeAws_json1_1RoleMapping(value, context),\n    };\n  }, {});\n};\n\nconst serializeAws_json1_1RolesMap = (input: { [key: string]: string }, context: __SerdeContext): any => {\n  return Object.entries(input).reduce((acc: { [key: string]: string }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: value,\n    };\n  }, {});\n};\n\nconst serializeAws_json1_1RulesConfigurationType = (input: RulesConfigurationType, context: __SerdeContext): any => {\n  return {\n    ...(input.Rules !== undefined &&\n      input.Rules !== null && { Rules: serializeAws_json1_1MappingRulesList(input.Rules, context) }),\n  };\n};\n\nconst serializeAws_json1_1SAMLProviderList = (input: string[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst serializeAws_json1_1SetIdentityPoolRolesInput = (\n  input: SetIdentityPoolRolesInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.IdentityPoolId !== undefined &&\n      input.IdentityPoolId !== null && { IdentityPoolId: input.IdentityPoolId }),\n    ...(input.RoleMappings !== undefined &&\n      input.RoleMappings !== null && { RoleMappings: serializeAws_json1_1RoleMappingMap(input.RoleMappings, context) }),\n    ...(input.Roles !== undefined &&\n      input.Roles !== null && { Roles: serializeAws_json1_1RolesMap(input.Roles, context) }),\n  };\n};\n\nconst serializeAws_json1_1TagResourceInput = (input: TagResourceInput, context: __SerdeContext): any => {\n  return {\n    ...(input.ResourceArn !== undefined && input.ResourceArn !== null && { ResourceArn: input.ResourceArn }),\n    ...(input.Tags !== undefined &&\n      input.Tags !== null && { Tags: serializeAws_json1_1IdentityPoolTagsType(input.Tags, context) }),\n  };\n};\n\nconst serializeAws_json1_1UnlinkDeveloperIdentityInput = (\n  input: UnlinkDeveloperIdentityInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.DeveloperProviderName !== undefined &&\n      input.DeveloperProviderName !== null && { DeveloperProviderName: input.DeveloperProviderName }),\n    ...(input.DeveloperUserIdentifier !== undefined &&\n      input.DeveloperUserIdentifier !== null && { DeveloperUserIdentifier: input.DeveloperUserIdentifier }),\n    ...(input.IdentityId !== undefined && input.IdentityId !== null && { IdentityId: input.IdentityId }),\n    ...(input.IdentityPoolId !== undefined &&\n      input.IdentityPoolId !== null && { IdentityPoolId: input.IdentityPoolId }),\n  };\n};\n\nconst serializeAws_json1_1UnlinkIdentityInput = (input: UnlinkIdentityInput, context: __SerdeContext): any => {\n  return {\n    ...(input.IdentityId !== undefined && input.IdentityId !== null && { IdentityId: input.IdentityId }),\n    ...(input.Logins !== undefined &&\n      input.Logins !== null && { Logins: serializeAws_json1_1LoginsMap(input.Logins, context) }),\n    ...(input.LoginsToRemove !== undefined &&\n      input.LoginsToRemove !== null && {\n        LoginsToRemove: serializeAws_json1_1LoginsList(input.LoginsToRemove, context),\n      }),\n  };\n};\n\nconst serializeAws_json1_1UntagResourceInput = (input: UntagResourceInput, context: __SerdeContext): any => {\n  return {\n    ...(input.ResourceArn !== undefined && input.ResourceArn !== null && { ResourceArn: input.ResourceArn }),\n    ...(input.TagKeys !== undefined &&\n      input.TagKeys !== null && { TagKeys: serializeAws_json1_1IdentityPoolTagsListType(input.TagKeys, context) }),\n  };\n};\n\nconst deserializeAws_json1_1CognitoIdentityProvider = (\n  output: any,\n  context: __SerdeContext\n): CognitoIdentityProvider => {\n  return {\n    ClientId: output.ClientId !== undefined && output.ClientId !== null ? output.ClientId : undefined,\n    ProviderName: output.ProviderName !== undefined && output.ProviderName !== null ? output.ProviderName : undefined,\n    ServerSideTokenCheck:\n      output.ServerSideTokenCheck !== undefined && output.ServerSideTokenCheck !== null\n        ? output.ServerSideTokenCheck\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1CognitoIdentityProviderList = (\n  output: any,\n  context: __SerdeContext\n): CognitoIdentityProvider[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1CognitoIdentityProvider(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1ConcurrentModificationException = (\n  output: any,\n  context: __SerdeContext\n): ConcurrentModificationException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1Credentials = (output: any, context: __SerdeContext): Credentials => {\n  return {\n    AccessKeyId: output.AccessKeyId !== undefined && output.AccessKeyId !== null ? output.AccessKeyId : undefined,\n    Expiration:\n      output.Expiration !== undefined && output.Expiration !== null\n        ? new Date(Math.round(output.Expiration * 1000))\n        : undefined,\n    SecretKey: output.SecretKey !== undefined && output.SecretKey !== null ? output.SecretKey : undefined,\n    SessionToken: output.SessionToken !== undefined && output.SessionToken !== null ? output.SessionToken : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1DeleteIdentitiesResponse = (\n  output: any,\n  context: __SerdeContext\n): DeleteIdentitiesResponse => {\n  return {\n    UnprocessedIdentityIds:\n      output.UnprocessedIdentityIds !== undefined && output.UnprocessedIdentityIds !== null\n        ? deserializeAws_json1_1UnprocessedIdentityIdList(output.UnprocessedIdentityIds, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1DeveloperUserAlreadyRegisteredException = (\n  output: any,\n  context: __SerdeContext\n): DeveloperUserAlreadyRegisteredException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1DeveloperUserIdentifierList = (output: any, context: __SerdeContext): string[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst deserializeAws_json1_1ExternalServiceException = (\n  output: any,\n  context: __SerdeContext\n): ExternalServiceException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1GetCredentialsForIdentityResponse = (\n  output: any,\n  context: __SerdeContext\n): GetCredentialsForIdentityResponse => {\n  return {\n    Credentials:\n      output.Credentials !== undefined && output.Credentials !== null\n        ? deserializeAws_json1_1Credentials(output.Credentials, context)\n        : undefined,\n    IdentityId: output.IdentityId !== undefined && output.IdentityId !== null ? output.IdentityId : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1GetIdentityPoolRolesResponse = (\n  output: any,\n  context: __SerdeContext\n): GetIdentityPoolRolesResponse => {\n  return {\n    IdentityPoolId:\n      output.IdentityPoolId !== undefined && output.IdentityPoolId !== null ? output.IdentityPoolId : undefined,\n    RoleMappings:\n      output.RoleMappings !== undefined && output.RoleMappings !== null\n        ? deserializeAws_json1_1RoleMappingMap(output.RoleMappings, context)\n        : undefined,\n    Roles:\n      output.Roles !== undefined && output.Roles !== null\n        ? deserializeAws_json1_1RolesMap(output.Roles, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1GetIdResponse = (output: any, context: __SerdeContext): GetIdResponse => {\n  return {\n    IdentityId: output.IdentityId !== undefined && output.IdentityId !== null ? output.IdentityId : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1GetOpenIdTokenForDeveloperIdentityResponse = (\n  output: any,\n  context: __SerdeContext\n): GetOpenIdTokenForDeveloperIdentityResponse => {\n  return {\n    IdentityId: output.IdentityId !== undefined && output.IdentityId !== null ? output.IdentityId : undefined,\n    Token: output.Token !== undefined && output.Token !== null ? output.Token : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1GetOpenIdTokenResponse = (output: any, context: __SerdeContext): GetOpenIdTokenResponse => {\n  return {\n    IdentityId: output.IdentityId !== undefined && output.IdentityId !== null ? output.IdentityId : undefined,\n    Token: output.Token !== undefined && output.Token !== null ? output.Token : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1IdentitiesList = (output: any, context: __SerdeContext): IdentityDescription[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1IdentityDescription(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1IdentityDescription = (output: any, context: __SerdeContext): IdentityDescription => {\n  return {\n    CreationDate:\n      output.CreationDate !== undefined && output.CreationDate !== null\n        ? new Date(Math.round(output.CreationDate * 1000))\n        : undefined,\n    IdentityId: output.IdentityId !== undefined && output.IdentityId !== null ? output.IdentityId : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null\n        ? new Date(Math.round(output.LastModifiedDate * 1000))\n        : undefined,\n    Logins:\n      output.Logins !== undefined && output.Logins !== null\n        ? deserializeAws_json1_1LoginsList(output.Logins, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1IdentityPool = (output: any, context: __SerdeContext): IdentityPool => {\n  return {\n    AllowClassicFlow:\n      output.AllowClassicFlow !== undefined && output.AllowClassicFlow !== null ? output.AllowClassicFlow : undefined,\n    AllowUnauthenticatedIdentities:\n      output.AllowUnauthenticatedIdentities !== undefined && output.AllowUnauthenticatedIdentities !== null\n        ? output.AllowUnauthenticatedIdentities\n        : undefined,\n    CognitoIdentityProviders:\n      output.CognitoIdentityProviders !== undefined && output.CognitoIdentityProviders !== null\n        ? deserializeAws_json1_1CognitoIdentityProviderList(output.CognitoIdentityProviders, context)\n        : undefined,\n    DeveloperProviderName:\n      output.DeveloperProviderName !== undefined && output.DeveloperProviderName !== null\n        ? output.DeveloperProviderName\n        : undefined,\n    IdentityPoolId:\n      output.IdentityPoolId !== undefined && output.IdentityPoolId !== null ? output.IdentityPoolId : undefined,\n    IdentityPoolName:\n      output.IdentityPoolName !== undefined && output.IdentityPoolName !== null ? output.IdentityPoolName : undefined,\n    IdentityPoolTags:\n      output.IdentityPoolTags !== undefined && output.IdentityPoolTags !== null\n        ? deserializeAws_json1_1IdentityPoolTagsType(output.IdentityPoolTags, context)\n        : undefined,\n    OpenIdConnectProviderARNs:\n      output.OpenIdConnectProviderARNs !== undefined && output.OpenIdConnectProviderARNs !== null\n        ? deserializeAws_json1_1OIDCProviderList(output.OpenIdConnectProviderARNs, context)\n        : undefined,\n    SamlProviderARNs:\n      output.SamlProviderARNs !== undefined && output.SamlProviderARNs !== null\n        ? deserializeAws_json1_1SAMLProviderList(output.SamlProviderARNs, context)\n        : undefined,\n    SupportedLoginProviders:\n      output.SupportedLoginProviders !== undefined && output.SupportedLoginProviders !== null\n        ? deserializeAws_json1_1IdentityProviders(output.SupportedLoginProviders, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1IdentityPoolShortDescription = (\n  output: any,\n  context: __SerdeContext\n): IdentityPoolShortDescription => {\n  return {\n    IdentityPoolId:\n      output.IdentityPoolId !== undefined && output.IdentityPoolId !== null ? output.IdentityPoolId : undefined,\n    IdentityPoolName:\n      output.IdentityPoolName !== undefined && output.IdentityPoolName !== null ? output.IdentityPoolName : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1IdentityPoolsList = (\n  output: any,\n  context: __SerdeContext\n): IdentityPoolShortDescription[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1IdentityPoolShortDescription(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1IdentityPoolTagsType = (\n  output: any,\n  context: __SerdeContext\n): { [key: string]: string } => {\n  return Object.entries(output).reduce((acc: { [key: string]: string }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: value,\n    };\n  }, {});\n};\n\nconst deserializeAws_json1_1IdentityProviders = (output: any, context: __SerdeContext): { [key: string]: string } => {\n  return Object.entries(output).reduce((acc: { [key: string]: string }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: value,\n    };\n  }, {});\n};\n\nconst deserializeAws_json1_1InternalErrorException = (output: any, context: __SerdeContext): InternalErrorException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1InvalidIdentityPoolConfigurationException = (\n  output: any,\n  context: __SerdeContext\n): InvalidIdentityPoolConfigurationException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1InvalidParameterException = (\n  output: any,\n  context: __SerdeContext\n): InvalidParameterException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1LimitExceededException = (output: any, context: __SerdeContext): LimitExceededException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ListIdentitiesResponse = (output: any, context: __SerdeContext): ListIdentitiesResponse => {\n  return {\n    Identities:\n      output.Identities !== undefined && output.Identities !== null\n        ? deserializeAws_json1_1IdentitiesList(output.Identities, context)\n        : undefined,\n    IdentityPoolId:\n      output.IdentityPoolId !== undefined && output.IdentityPoolId !== null ? output.IdentityPoolId : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ListIdentityPoolsResponse = (\n  output: any,\n  context: __SerdeContext\n): ListIdentityPoolsResponse => {\n  return {\n    IdentityPools:\n      output.IdentityPools !== undefined && output.IdentityPools !== null\n        ? deserializeAws_json1_1IdentityPoolsList(output.IdentityPools, context)\n        : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ListTagsForResourceResponse = (\n  output: any,\n  context: __SerdeContext\n): ListTagsForResourceResponse => {\n  return {\n    Tags:\n      output.Tags !== undefined && output.Tags !== null\n        ? deserializeAws_json1_1IdentityPoolTagsType(output.Tags, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1LoginsList = (output: any, context: __SerdeContext): string[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst deserializeAws_json1_1LookupDeveloperIdentityResponse = (\n  output: any,\n  context: __SerdeContext\n): LookupDeveloperIdentityResponse => {\n  return {\n    DeveloperUserIdentifierList:\n      output.DeveloperUserIdentifierList !== undefined && output.DeveloperUserIdentifierList !== null\n        ? deserializeAws_json1_1DeveloperUserIdentifierList(output.DeveloperUserIdentifierList, context)\n        : undefined,\n    IdentityId: output.IdentityId !== undefined && output.IdentityId !== null ? output.IdentityId : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1MappingRule = (output: any, context: __SerdeContext): MappingRule => {\n  return {\n    Claim: output.Claim !== undefined && output.Claim !== null ? output.Claim : undefined,\n    MatchType: output.MatchType !== undefined && output.MatchType !== null ? output.MatchType : undefined,\n    RoleARN: output.RoleARN !== undefined && output.RoleARN !== null ? output.RoleARN : undefined,\n    Value: output.Value !== undefined && output.Value !== null ? output.Value : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1MappingRulesList = (output: any, context: __SerdeContext): MappingRule[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1MappingRule(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1MergeDeveloperIdentitiesResponse = (\n  output: any,\n  context: __SerdeContext\n): MergeDeveloperIdentitiesResponse => {\n  return {\n    IdentityId: output.IdentityId !== undefined && output.IdentityId !== null ? output.IdentityId : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1NotAuthorizedException = (output: any, context: __SerdeContext): NotAuthorizedException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1OIDCProviderList = (output: any, context: __SerdeContext): string[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst deserializeAws_json1_1ResourceConflictException = (\n  output: any,\n  context: __SerdeContext\n): ResourceConflictException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ResourceNotFoundException = (\n  output: any,\n  context: __SerdeContext\n): ResourceNotFoundException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1RoleMapping = (output: any, context: __SerdeContext): RoleMapping => {\n  return {\n    AmbiguousRoleResolution:\n      output.AmbiguousRoleResolution !== undefined && output.AmbiguousRoleResolution !== null\n        ? output.AmbiguousRoleResolution\n        : undefined,\n    RulesConfiguration:\n      output.RulesConfiguration !== undefined && output.RulesConfiguration !== null\n        ? deserializeAws_json1_1RulesConfigurationType(output.RulesConfiguration, context)\n        : undefined,\n    Type: output.Type !== undefined && output.Type !== null ? output.Type : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1RoleMappingMap = (output: any, context: __SerdeContext): { [key: string]: RoleMapping } => {\n  return Object.entries(output).reduce((acc: { [key: string]: RoleMapping }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: deserializeAws_json1_1RoleMapping(value, context),\n    };\n  }, {});\n};\n\nconst deserializeAws_json1_1RolesMap = (output: any, context: __SerdeContext): { [key: string]: string } => {\n  return Object.entries(output).reduce((acc: { [key: string]: string }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: value,\n    };\n  }, {});\n};\n\nconst deserializeAws_json1_1RulesConfigurationType = (output: any, context: __SerdeContext): RulesConfigurationType => {\n  return {\n    Rules:\n      output.Rules !== undefined && output.Rules !== null\n        ? deserializeAws_json1_1MappingRulesList(output.Rules, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1SAMLProviderList = (output: any, context: __SerdeContext): string[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst deserializeAws_json1_1TagResourceResponse = (output: any, context: __SerdeContext): TagResourceResponse => {\n  return {} as any;\n};\n\nconst deserializeAws_json1_1TooManyRequestsException = (\n  output: any,\n  context: __SerdeContext\n): TooManyRequestsException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1UnprocessedIdentityId = (output: any, context: __SerdeContext): UnprocessedIdentityId => {\n  return {\n    ErrorCode: output.ErrorCode !== undefined && output.ErrorCode !== null ? output.ErrorCode : undefined,\n    IdentityId: output.IdentityId !== undefined && output.IdentityId !== null ? output.IdentityId : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1UnprocessedIdentityIdList = (\n  output: any,\n  context: __SerdeContext\n): UnprocessedIdentityId[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1UnprocessedIdentityId(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1UntagResourceResponse = (output: any, context: __SerdeContext): UntagResourceResponse => {\n  return {} as any;\n};\n\nconst deserializeMetadata = (output: __HttpResponse): __ResponseMetadata => ({\n  httpStatusCode: output.statusCode,\n  requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"],\n  extendedRequestId: output.headers[\"x-amz-id-2\"],\n  cfId: output.headers[\"x-amz-cf-id\"],\n});\n\n// Collect low-level response body stream to Uint8Array.\nconst collectBody = (streamBody: any = new Uint8Array(), context: __SerdeContext): Promise<Uint8Array> => {\n  if (streamBody instanceof Uint8Array) {\n    return Promise.resolve(streamBody);\n  }\n  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\n\n// Encode Uint8Array data into string with utf-8.\nconst collectBodyString = (streamBody: any, context: __SerdeContext): Promise<string> =>\n  collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\n\nconst buildHttpRpcRequest = async (\n  context: __SerdeContext,\n  headers: __HeaderBag,\n  path: string,\n  resolvedHostname: string | undefined,\n  body: any\n): Promise<__HttpRequest> => {\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  const contents: any = {\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    path,\n    headers,\n  };\n  if (resolvedHostname !== undefined) {\n    contents.hostname = resolvedHostname;\n  }\n  if (body !== undefined) {\n    contents.body = body;\n  }\n  return new __HttpRequest(contents);\n};\n\nconst parseBody = (streamBody: any, context: __SerdeContext): any =>\n  collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n      return JSON.parse(encoded);\n    }\n    return {};\n  });\n\n/**\n * Load an error code for the aws.rest-json-1.1 protocol.\n */\nconst loadRestJsonErrorCode = (output: __HttpResponse, data: any): string => {\n  const findKey = (object: any, key: string) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase());\n\n  const sanitizeErrorCode = (rawValue: string): string => {\n    let cleanValue = rawValue;\n    if (cleanValue.indexOf(\":\") >= 0) {\n      cleanValue = cleanValue.split(\":\")[0];\n    }\n    if (cleanValue.indexOf(\"#\") >= 0) {\n      cleanValue = cleanValue.split(\"#\")[1];\n    }\n    return cleanValue;\n  };\n\n  const headerKey = findKey(output.headers, \"x-amzn-errortype\");\n  if (headerKey !== undefined) {\n    return sanitizeErrorCode(output.headers[headerKey]);\n  }\n\n  if (data.code !== undefined) {\n    return sanitizeErrorCode(data.code);\n  }\n\n  if (data[\"__type\"] !== undefined) {\n    return sanitizeErrorCode(data[\"__type\"]);\n  }\n\n  return \"\";\n};\n", "import { CognitoIdentityClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CognitoIdentityClient\";\nimport { CreateIdentityPoolInput, IdentityPool } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1CreateIdentityPoolCommand,\n  serializeAws_json1_1CreateIdentityPoolCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { getAwsAuthPlugin } from \"@aws-sdk/middleware-signing\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type CreateIdentityPoolCommandInput = CreateIdentityPoolInput;\nexport type CreateIdentityPoolCommandOutput = IdentityPool & __MetadataBearer;\n\n/**\n * <p>Creates a new identity pool. The identity pool is a store of user identity\n *          information that is specific to your AWS account. The keys for <code>SupportedLoginProviders</code> are as follows:</p>\n *\n *          <ul>\n *             <li>\n *                <p>Facebook: <code>graph.facebook.com</code>\n *                </p>\n *             </li>\n *             <li>\n *                <p>Google: <code>accounts.google.com</code>\n *                </p>\n *             </li>\n *             <li>\n *                <p>Amazon: <code>www.amazon.com</code>\n *                </p>\n *             </li>\n *             <li>\n *                <p>Twitter: <code>api.twitter.com</code>\n *                </p>\n *             </li>\n *             <li>\n *                <p>Digits: <code>www.digits.com</code>\n *                </p>\n *             </li>\n *          </ul>\n *\n *          <p>You must use AWS Developer credentials to call this API.</p>\n */\nexport class CreateIdentityPoolCommand extends $Command<\n  CreateIdentityPoolCommandInput,\n  CreateIdentityPoolCommandOutput,\n  CognitoIdentityClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: CreateIdentityPoolCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CognitoIdentityClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<CreateIdentityPoolCommandInput, CreateIdentityPoolCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getAwsAuthPlugin(configuration));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CognitoIdentityClient\";\n    const commandName = \"CreateIdentityPoolCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: CreateIdentityPoolInput.filterSensitiveLog,\n      outputFilterSensitiveLog: IdentityPool.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: CreateIdentityPoolCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1CreateIdentityPoolCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<CreateIdentityPoolCommandOutput> {\n    return deserializeAws_json1_1CreateIdentityPoolCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CognitoIdentityClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CognitoIdentityClient\";\nimport { DeleteIdentitiesInput, DeleteIdentitiesResponse } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1DeleteIdentitiesCommand,\n  serializeAws_json1_1DeleteIdentitiesCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { getAwsAuthPlugin } from \"@aws-sdk/middleware-signing\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type DeleteIdentitiesCommandInput = DeleteIdentitiesInput;\nexport type DeleteIdentitiesCommandOutput = DeleteIdentitiesResponse & __MetadataBearer;\n\n/**\n * <p>Deletes identities from an identity pool. You can specify a list of 1-60 identities\n *          that you want to delete.</p>\n *          <p>You must use AWS Developer credentials to call this API.</p>\n */\nexport class DeleteIdentitiesCommand extends $Command<\n  DeleteIdentitiesCommandInput,\n  DeleteIdentitiesCommandOutput,\n  CognitoIdentityClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: DeleteIdentitiesCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CognitoIdentityClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<DeleteIdentitiesCommandInput, DeleteIdentitiesCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getAwsAuthPlugin(configuration));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CognitoIdentityClient\";\n    const commandName = \"DeleteIdentitiesCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: DeleteIdentitiesInput.filterSensitiveLog,\n      outputFilterSensitiveLog: DeleteIdentitiesResponse.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: DeleteIdentitiesCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1DeleteIdentitiesCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<DeleteIdentitiesCommandOutput> {\n    return deserializeAws_json1_1DeleteIdentitiesCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CognitoIdentityClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CognitoIdentityClient\";\nimport { DeleteIdentityPoolInput } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1DeleteIdentityPoolCommand,\n  serializeAws_json1_1DeleteIdentityPoolCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { getAwsAuthPlugin } from \"@aws-sdk/middleware-signing\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type DeleteIdentityPoolCommandInput = DeleteIdentityPoolInput;\nexport type DeleteIdentityPoolCommandOutput = __MetadataBearer;\n\n/**\n * <p>Deletes an identity pool. Once a pool is deleted, users will not be able to\n *          authenticate with the pool.</p>\n *          <p>You must use AWS Developer credentials to call this API.</p>\n */\nexport class DeleteIdentityPoolCommand extends $Command<\n  DeleteIdentityPoolCommandInput,\n  DeleteIdentityPoolCommandOutput,\n  CognitoIdentityClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: DeleteIdentityPoolCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CognitoIdentityClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<DeleteIdentityPoolCommandInput, DeleteIdentityPoolCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getAwsAuthPlugin(configuration));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CognitoIdentityClient\";\n    const commandName = \"DeleteIdentityPoolCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: DeleteIdentityPoolInput.filterSensitiveLog,\n      outputFilterSensitiveLog: (output: any) => output,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: DeleteIdentityPoolCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1DeleteIdentityPoolCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<DeleteIdentityPoolCommandOutput> {\n    return deserializeAws_json1_1DeleteIdentityPoolCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CognitoIdentityClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CognitoIdentityClient\";\nimport { DescribeIdentityInput, IdentityDescription } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1DescribeIdentityCommand,\n  serializeAws_json1_1DescribeIdentityCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { getAwsAuthPlugin } from \"@aws-sdk/middleware-signing\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type DescribeIdentityCommandInput = DescribeIdentityInput;\nexport type DescribeIdentityCommandOutput = IdentityDescription & __MetadataBearer;\n\n/**\n * <p>Returns metadata related to the given identity, including when the identity was\n *          created and any associated linked logins.</p>\n *          <p>You must use AWS Developer credentials to call this API.</p>\n */\nexport class DescribeIdentityCommand extends $Command<\n  DescribeIdentityCommandInput,\n  DescribeIdentityCommandOutput,\n  CognitoIdentityClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: DescribeIdentityCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CognitoIdentityClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<DescribeIdentityCommandInput, DescribeIdentityCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getAwsAuthPlugin(configuration));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CognitoIdentityClient\";\n    const commandName = \"DescribeIdentityCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: DescribeIdentityInput.filterSensitiveLog,\n      outputFilterSensitiveLog: IdentityDescription.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: DescribeIdentityCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1DescribeIdentityCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<DescribeIdentityCommandOutput> {\n    return deserializeAws_json1_1DescribeIdentityCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CognitoIdentityClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CognitoIdentityClient\";\nimport { DescribeIdentityPoolInput, IdentityPool } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1DescribeIdentityPoolCommand,\n  serializeAws_json1_1DescribeIdentityPoolCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { getAwsAuthPlugin } from \"@aws-sdk/middleware-signing\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type DescribeIdentityPoolCommandInput = DescribeIdentityPoolInput;\nexport type DescribeIdentityPoolCommandOutput = IdentityPool & __MetadataBearer;\n\n/**\n * <p>Gets details about a particular identity pool, including the pool name, ID\n *          description, creation date, and current number of users.</p>\n *          <p>You must use AWS Developer credentials to call this API.</p>\n */\nexport class DescribeIdentityPoolCommand extends $Command<\n  DescribeIdentityPoolCommandInput,\n  DescribeIdentityPoolCommandOutput,\n  CognitoIdentityClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: DescribeIdentityPoolCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CognitoIdentityClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<DescribeIdentityPoolCommandInput, DescribeIdentityPoolCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getAwsAuthPlugin(configuration));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CognitoIdentityClient\";\n    const commandName = \"DescribeIdentityPoolCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: DescribeIdentityPoolInput.filterSensitiveLog,\n      outputFilterSensitiveLog: IdentityPool.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: DescribeIdentityPoolCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1DescribeIdentityPoolCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<DescribeIdentityPoolCommandOutput> {\n    return deserializeAws_json1_1DescribeIdentityPoolCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CognitoIdentityClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CognitoIdentityClient\";\nimport { GetCredentialsForIdentityInput, GetCredentialsForIdentityResponse } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1GetCredentialsForIdentityCommand,\n  serializeAws_json1_1GetCredentialsForIdentityCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type GetCredentialsForIdentityCommandInput = GetCredentialsForIdentityInput;\nexport type GetCredentialsForIdentityCommandOutput = GetCredentialsForIdentityResponse & __MetadataBearer;\n\n/**\n * <p>Returns credentials for the provided identity ID. Any provided logins will be\n *          validated against supported login providers. If the token is for\n *          cognito-identity.amazonaws.com, it will be passed through to AWS Security Token Service\n *          with the appropriate role for the token.</p>\n *          <p>This is a public API. You do not need any credentials to call this API.</p>\n */\nexport class GetCredentialsForIdentityCommand extends $Command<\n  GetCredentialsForIdentityCommandInput,\n  GetCredentialsForIdentityCommandOutput,\n  CognitoIdentityClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: GetCredentialsForIdentityCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CognitoIdentityClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<GetCredentialsForIdentityCommandInput, GetCredentialsForIdentityCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CognitoIdentityClient\";\n    const commandName = \"GetCredentialsForIdentityCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: GetCredentialsForIdentityInput.filterSensitiveLog,\n      outputFilterSensitiveLog: GetCredentialsForIdentityResponse.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: GetCredentialsForIdentityCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1GetCredentialsForIdentityCommand(input, context);\n  }\n\n  private deserialize(\n    output: __HttpResponse,\n    context: __SerdeContext\n  ): Promise<GetCredentialsForIdentityCommandOutput> {\n    return deserializeAws_json1_1GetCredentialsForIdentityCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CognitoIdentityClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CognitoIdentityClient\";\nimport { GetIdInput, GetIdResponse } from \"../models/models_0\";\nimport { deserializeAws_json1_1GetIdCommand, serializeAws_json1_1GetIdCommand } from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type GetIdCommandInput = GetIdInput;\nexport type GetIdCommandOutput = GetIdResponse & __MetadataBearer;\n\n/**\n * <p>Generates (or retrieves) a Cognito ID. Supplying multiple logins will create an\n *          implicit linked account.</p>\n *          <p>This is a public API. You do not need any credentials to call this API.</p>\n */\nexport class GetIdCommand extends $Command<GetIdCommandInput, GetIdCommandOutput, CognitoIdentityClientResolvedConfig> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: GetIdCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CognitoIdentityClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<GetIdCommandInput, GetIdCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CognitoIdentityClient\";\n    const commandName = \"GetIdCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: GetIdInput.filterSensitiveLog,\n      outputFilterSensitiveLog: GetIdResponse.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: GetIdCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1GetIdCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<GetIdCommandOutput> {\n    return deserializeAws_json1_1GetIdCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CognitoIdentityClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CognitoIdentityClient\";\nimport { GetIdentityPoolRolesInput, GetIdentityPoolRolesResponse } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1GetIdentityPoolRolesCommand,\n  serializeAws_json1_1GetIdentityPoolRolesCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { getAwsAuthPlugin } from \"@aws-sdk/middleware-signing\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type GetIdentityPoolRolesCommandInput = GetIdentityPoolRolesInput;\nexport type GetIdentityPoolRolesCommandOutput = GetIdentityPoolRolesResponse & __MetadataBearer;\n\n/**\n * <p>Gets the roles for an identity pool.</p>\n *          <p>You must use AWS Developer credentials to call this API.</p>\n */\nexport class GetIdentityPoolRolesCommand extends $Command<\n  GetIdentityPoolRolesCommandInput,\n  GetIdentityPoolRolesCommandOutput,\n  CognitoIdentityClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: GetIdentityPoolRolesCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CognitoIdentityClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<GetIdentityPoolRolesCommandInput, GetIdentityPoolRolesCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getAwsAuthPlugin(configuration));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CognitoIdentityClient\";\n    const commandName = \"GetIdentityPoolRolesCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: GetIdentityPoolRolesInput.filterSensitiveLog,\n      outputFilterSensitiveLog: GetIdentityPoolRolesResponse.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: GetIdentityPoolRolesCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1GetIdentityPoolRolesCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<GetIdentityPoolRolesCommandOutput> {\n    return deserializeAws_json1_1GetIdentityPoolRolesCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CognitoIdentityClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CognitoIdentityClient\";\nimport { GetOpenIdTokenInput, GetOpenIdTokenResponse } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1GetOpenIdTokenCommand,\n  serializeAws_json1_1GetOpenIdTokenCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type GetOpenIdTokenCommandInput = GetOpenIdTokenInput;\nexport type GetOpenIdTokenCommandOutput = GetOpenIdTokenResponse & __MetadataBearer;\n\n/**\n * <p>Gets an OpenID token, using a known Cognito ID. This known Cognito ID is returned by\n *             <a>GetId</a>. You can optionally add additional logins for the identity.\n *          Supplying multiple logins creates an implicit link.</p>\n *          <p>The OpenId token is valid for 10 minutes.</p>\n *          <p>This is a public API. You do not need any credentials to call this API.</p>\n */\nexport class GetOpenIdTokenCommand extends $Command<\n  GetOpenIdTokenCommandInput,\n  GetOpenIdTokenCommandOutput,\n  CognitoIdentityClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: GetOpenIdTokenCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CognitoIdentityClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<GetOpenIdTokenCommandInput, GetOpenIdTokenCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CognitoIdentityClient\";\n    const commandName = \"GetOpenIdTokenCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: GetOpenIdTokenInput.filterSensitiveLog,\n      outputFilterSensitiveLog: GetOpenIdTokenResponse.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: GetOpenIdTokenCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1GetOpenIdTokenCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<GetOpenIdTokenCommandOutput> {\n    return deserializeAws_json1_1GetOpenIdTokenCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CognitoIdentityClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CognitoIdentityClient\";\nimport {\n  GetOpenIdTokenForDeveloperIdentityInput,\n  GetOpenIdTokenForDeveloperIdentityResponse,\n} from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1GetOpenIdTokenForDeveloperIdentityCommand,\n  serializeAws_json1_1GetOpenIdTokenForDeveloperIdentityCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { getAwsAuthPlugin } from \"@aws-sdk/middleware-signing\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type GetOpenIdTokenForDeveloperIdentityCommandInput = GetOpenIdTokenForDeveloperIdentityInput;\nexport type GetOpenIdTokenForDeveloperIdentityCommandOutput = GetOpenIdTokenForDeveloperIdentityResponse &\n  __MetadataBearer;\n\n/**\n * <p>Registers (or retrieves) a Cognito <code>IdentityId</code> and an OpenID Connect\n *          token for a user authenticated by your backend authentication process. Supplying multiple\n *          logins will create an implicit linked account. You can only specify one developer provider\n *          as part of the <code>Logins</code> map, which is linked to the identity pool. The developer\n *          provider is the \"domain\" by which Cognito will refer to your users.</p>\n *          <p>You can use <code>GetOpenIdTokenForDeveloperIdentity</code> to create a new identity\n *          and to link new logins (that is, user credentials issued by a public provider or developer\n *          provider) to an existing identity. When you want to create a new identity, the\n *             <code>IdentityId</code> should be null. When you want to associate a new login with an\n *          existing authenticated/unauthenticated identity, you can do so by providing the existing\n *             <code>IdentityId</code>. This API will create the identity in the specified\n *             <code>IdentityPoolId</code>.</p>\n *          <p>You must use AWS Developer credentials to call this API.</p>\n */\nexport class GetOpenIdTokenForDeveloperIdentityCommand extends $Command<\n  GetOpenIdTokenForDeveloperIdentityCommandInput,\n  GetOpenIdTokenForDeveloperIdentityCommandOutput,\n  CognitoIdentityClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: GetOpenIdTokenForDeveloperIdentityCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CognitoIdentityClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<GetOpenIdTokenForDeveloperIdentityCommandInput, GetOpenIdTokenForDeveloperIdentityCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getAwsAuthPlugin(configuration));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CognitoIdentityClient\";\n    const commandName = \"GetOpenIdTokenForDeveloperIdentityCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: GetOpenIdTokenForDeveloperIdentityInput.filterSensitiveLog,\n      outputFilterSensitiveLog: GetOpenIdTokenForDeveloperIdentityResponse.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(\n    input: GetOpenIdTokenForDeveloperIdentityCommandInput,\n    context: __SerdeContext\n  ): Promise<__HttpRequest> {\n    return serializeAws_json1_1GetOpenIdTokenForDeveloperIdentityCommand(input, context);\n  }\n\n  private deserialize(\n    output: __HttpResponse,\n    context: __SerdeContext\n  ): Promise<GetOpenIdTokenForDeveloperIdentityCommandOutput> {\n    return deserializeAws_json1_1GetOpenIdTokenForDeveloperIdentityCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CognitoIdentityClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CognitoIdentityClient\";\nimport { ListIdentitiesInput, ListIdentitiesResponse } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1ListIdentitiesCommand,\n  serializeAws_json1_1ListIdentitiesCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { getAwsAuthPlugin } from \"@aws-sdk/middleware-signing\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type ListIdentitiesCommandInput = ListIdentitiesInput;\nexport type ListIdentitiesCommandOutput = ListIdentitiesResponse & __MetadataBearer;\n\n/**\n * <p>Lists the identities in an identity pool.</p>\n *          <p>You must use AWS Developer credentials to call this API.</p>\n */\nexport class ListIdentitiesCommand extends $Command<\n  ListIdentitiesCommandInput,\n  ListIdentitiesCommandOutput,\n  CognitoIdentityClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: ListIdentitiesCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CognitoIdentityClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<ListIdentitiesCommandInput, ListIdentitiesCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getAwsAuthPlugin(configuration));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CognitoIdentityClient\";\n    const commandName = \"ListIdentitiesCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: ListIdentitiesInput.filterSensitiveLog,\n      outputFilterSensitiveLog: ListIdentitiesResponse.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: ListIdentitiesCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1ListIdentitiesCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<ListIdentitiesCommandOutput> {\n    return deserializeAws_json1_1ListIdentitiesCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CognitoIdentityClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CognitoIdentityClient\";\nimport { ListIdentityPoolsInput, ListIdentityPoolsResponse } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1ListIdentityPoolsCommand,\n  serializeAws_json1_1ListIdentityPoolsCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { getAwsAuthPlugin } from \"@aws-sdk/middleware-signing\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type ListIdentityPoolsCommandInput = ListIdentityPoolsInput;\nexport type ListIdentityPoolsCommandOutput = ListIdentityPoolsResponse & __MetadataBearer;\n\n/**\n * <p>Lists all of the Cognito identity pools registered for your account.</p>\n *          <p>You must use AWS Developer credentials to call this API.</p>\n */\nexport class ListIdentityPoolsCommand extends $Command<\n  ListIdentityPoolsCommandInput,\n  ListIdentityPoolsCommandOutput,\n  CognitoIdentityClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: ListIdentityPoolsCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CognitoIdentityClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<ListIdentityPoolsCommandInput, ListIdentityPoolsCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getAwsAuthPlugin(configuration));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CognitoIdentityClient\";\n    const commandName = \"ListIdentityPoolsCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: ListIdentityPoolsInput.filterSensitiveLog,\n      outputFilterSensitiveLog: ListIdentityPoolsResponse.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: ListIdentityPoolsCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1ListIdentityPoolsCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<ListIdentityPoolsCommandOutput> {\n    return deserializeAws_json1_1ListIdentityPoolsCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CognitoIdentityClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CognitoIdentityClient\";\nimport { ListTagsForResourceInput, ListTagsForResourceResponse } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1ListTagsForResourceCommand,\n  serializeAws_json1_1ListTagsForResourceCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { getAwsAuthPlugin } from \"@aws-sdk/middleware-signing\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type ListTagsForResourceCommandInput = ListTagsForResourceInput;\nexport type ListTagsForResourceCommandOutput = ListTagsForResourceResponse & __MetadataBearer;\n\n/**\n * <p>Lists the tags that are assigned to an Amazon Cognito identity pool.</p>\n *          <p>A tag is a label that you can apply to identity pools to categorize and manage them in\n *          different ways, such as by purpose, owner, environment, or other criteria.</p>\n *          <p>You can use this action up to 10 times per second, per account.</p>\n */\nexport class ListTagsForResourceCommand extends $Command<\n  ListTagsForResourceCommandInput,\n  ListTagsForResourceCommandOutput,\n  CognitoIdentityClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: ListTagsForResourceCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CognitoIdentityClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getAwsAuthPlugin(configuration));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CognitoIdentityClient\";\n    const commandName = \"ListTagsForResourceCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: ListTagsForResourceInput.filterSensitiveLog,\n      outputFilterSensitiveLog: ListTagsForResourceResponse.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: ListTagsForResourceCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1ListTagsForResourceCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<ListTagsForResourceCommandOutput> {\n    return deserializeAws_json1_1ListTagsForResourceCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CognitoIdentityClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CognitoIdentityClient\";\nimport { LookupDeveloperIdentityInput, LookupDeveloperIdentityResponse } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1LookupDeveloperIdentityCommand,\n  serializeAws_json1_1LookupDeveloperIdentityCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { getAwsAuthPlugin } from \"@aws-sdk/middleware-signing\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type LookupDeveloperIdentityCommandInput = LookupDeveloperIdentityInput;\nexport type LookupDeveloperIdentityCommandOutput = LookupDeveloperIdentityResponse & __MetadataBearer;\n\n/**\n * <p>Retrieves the <code>IdentityID</code> associated with a\n *             <code>DeveloperUserIdentifier</code> or the list of <code>DeveloperUserIdentifier</code>\n *          values associated with an <code>IdentityId</code> for an existing identity. Either\n *             <code>IdentityID</code> or <code>DeveloperUserIdentifier</code> must not be null. If you\n *          supply only one of these values, the other value will be searched in the database and\n *          returned as a part of the response. If you supply both,\n *             <code>DeveloperUserIdentifier</code> will be matched against <code>IdentityID</code>. If\n *          the values are verified against the database, the response returns both values and is the\n *          same as the request. Otherwise a <code>ResourceConflictException</code> is\n *          thrown.</p>\n *          <p>\n *             <code>LookupDeveloperIdentity</code> is intended for low-throughput control plane\n *          operations: for example, to enable customer service to locate an identity ID by username.\n *          If you are using it for higher-volume operations such as user authentication, your requests\n *          are likely to be throttled. <a>GetOpenIdTokenForDeveloperIdentity</a> is a\n *          better option for higher-volume operations for user authentication.</p>\n *          <p>You must use AWS Developer credentials to call this API.</p>\n */\nexport class LookupDeveloperIdentityCommand extends $Command<\n  LookupDeveloperIdentityCommandInput,\n  LookupDeveloperIdentityCommandOutput,\n  CognitoIdentityClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: LookupDeveloperIdentityCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CognitoIdentityClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<LookupDeveloperIdentityCommandInput, LookupDeveloperIdentityCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getAwsAuthPlugin(configuration));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CognitoIdentityClient\";\n    const commandName = \"LookupDeveloperIdentityCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: LookupDeveloperIdentityInput.filterSensitiveLog,\n      outputFilterSensitiveLog: LookupDeveloperIdentityResponse.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: LookupDeveloperIdentityCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1LookupDeveloperIdentityCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<LookupDeveloperIdentityCommandOutput> {\n    return deserializeAws_json1_1LookupDeveloperIdentityCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CognitoIdentityClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CognitoIdentityClient\";\nimport { MergeDeveloperIdentitiesInput, MergeDeveloperIdentitiesResponse } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1MergeDeveloperIdentitiesCommand,\n  serializeAws_json1_1MergeDeveloperIdentitiesCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { getAwsAuthPlugin } from \"@aws-sdk/middleware-signing\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type MergeDeveloperIdentitiesCommandInput = MergeDeveloperIdentitiesInput;\nexport type MergeDeveloperIdentitiesCommandOutput = MergeDeveloperIdentitiesResponse & __MetadataBearer;\n\n/**\n * <p>Merges two users having different <code>IdentityId</code>s, existing in the same\n *          identity pool, and identified by the same developer provider. You can use this action to\n *          request that discrete users be merged and identified as a single user in the Cognito\n *          environment. Cognito associates the given source user (<code>SourceUserIdentifier</code>)\n *          with the <code>IdentityId</code> of the <code>DestinationUserIdentifier</code>. Only\n *          developer-authenticated users can be merged. If the users to be merged are associated with\n *          the same public provider, but as two different users, an exception will be\n *          thrown.</p>\n *          <p>The number of linked logins is limited to 20. So, the number of linked logins for the\n *          source user, <code>SourceUserIdentifier</code>, and the destination user,\n *          <code>DestinationUserIdentifier</code>, together should not be larger than 20.\n *          Otherwise, an exception will be thrown.</p>\n *          <p>You must use AWS Developer credentials to call this API.</p>\n */\nexport class MergeDeveloperIdentitiesCommand extends $Command<\n  MergeDeveloperIdentitiesCommandInput,\n  MergeDeveloperIdentitiesCommandOutput,\n  CognitoIdentityClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: MergeDeveloperIdentitiesCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CognitoIdentityClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<MergeDeveloperIdentitiesCommandInput, MergeDeveloperIdentitiesCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getAwsAuthPlugin(configuration));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CognitoIdentityClient\";\n    const commandName = \"MergeDeveloperIdentitiesCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: MergeDeveloperIdentitiesInput.filterSensitiveLog,\n      outputFilterSensitiveLog: MergeDeveloperIdentitiesResponse.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: MergeDeveloperIdentitiesCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1MergeDeveloperIdentitiesCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<MergeDeveloperIdentitiesCommandOutput> {\n    return deserializeAws_json1_1MergeDeveloperIdentitiesCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CognitoIdentityClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CognitoIdentityClient\";\nimport { SetIdentityPoolRolesInput } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1SetIdentityPoolRolesCommand,\n  serializeAws_json1_1SetIdentityPoolRolesCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { getAwsAuthPlugin } from \"@aws-sdk/middleware-signing\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type SetIdentityPoolRolesCommandInput = SetIdentityPoolRolesInput;\nexport type SetIdentityPoolRolesCommandOutput = __MetadataBearer;\n\n/**\n * <p>Sets the roles for an identity pool. These roles are used when making calls to <a>GetCredentialsForIdentity</a> action.</p>\n *          <p>You must use AWS Developer credentials to call this API.</p>\n */\nexport class SetIdentityPoolRolesCommand extends $Command<\n  SetIdentityPoolRolesCommandInput,\n  SetIdentityPoolRolesCommandOutput,\n  CognitoIdentityClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: SetIdentityPoolRolesCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CognitoIdentityClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<SetIdentityPoolRolesCommandInput, SetIdentityPoolRolesCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getAwsAuthPlugin(configuration));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CognitoIdentityClient\";\n    const commandName = \"SetIdentityPoolRolesCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: SetIdentityPoolRolesInput.filterSensitiveLog,\n      outputFilterSensitiveLog: (output: any) => output,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: SetIdentityPoolRolesCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1SetIdentityPoolRolesCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<SetIdentityPoolRolesCommandOutput> {\n    return deserializeAws_json1_1SetIdentityPoolRolesCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CognitoIdentityClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CognitoIdentityClient\";\nimport { TagResourceInput, TagResourceResponse } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1TagResourceCommand,\n  serializeAws_json1_1TagResourceCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { getAwsAuthPlugin } from \"@aws-sdk/middleware-signing\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type TagResourceCommandInput = TagResourceInput;\nexport type TagResourceCommandOutput = TagResourceResponse & __MetadataBearer;\n\n/**\n * <p>Assigns a set of tags to an Amazon Cognito identity pool. A tag is a label that you can\n *          use to categorize and manage identity pools in different ways, such as by purpose, owner,\n *          environment, or other criteria.</p>\n *          <p>Each tag consists of a key and value, both of which you define. A key is a general\n *          category for more specific values. For example, if you have two versions of an identity\n *          pool, one for testing and another for production, you might assign an\n *             <code>Environment</code> tag key to both identity pools. The value of this key might be\n *             <code>Test</code> for one identity pool and <code>Production</code> for the\n *          other.</p>\n *          <p>Tags are useful for cost tracking and access control. You can activate your tags so that\n *          they appear on the Billing and Cost Management console, where you can track the costs\n *          associated with your identity pools. In an IAM policy, you can constrain permissions for\n *          identity pools based on specific tags or tag values.</p>\n *          <p>You can use this action up to 5 times per second, per account. An identity pool can have\n *          as many as 50 tags.</p>\n */\nexport class TagResourceCommand extends $Command<\n  TagResourceCommandInput,\n  TagResourceCommandOutput,\n  CognitoIdentityClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: TagResourceCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CognitoIdentityClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<TagResourceCommandInput, TagResourceCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getAwsAuthPlugin(configuration));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CognitoIdentityClient\";\n    const commandName = \"TagResourceCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: TagResourceInput.filterSensitiveLog,\n      outputFilterSensitiveLog: TagResourceResponse.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: TagResourceCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1TagResourceCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<TagResourceCommandOutput> {\n    return deserializeAws_json1_1TagResourceCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CognitoIdentityClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CognitoIdentityClient\";\nimport { UnlinkDeveloperIdentityInput } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1UnlinkDeveloperIdentityCommand,\n  serializeAws_json1_1UnlinkDeveloperIdentityCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { getAwsAuthPlugin } from \"@aws-sdk/middleware-signing\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type UnlinkDeveloperIdentityCommandInput = UnlinkDeveloperIdentityInput;\nexport type UnlinkDeveloperIdentityCommandOutput = __MetadataBearer;\n\n/**\n * <p>Unlinks a <code>DeveloperUserIdentifier</code> from an existing identity. Unlinked\n *          developer users will be considered new identities next time they are seen. If, for a given\n *          Cognito identity, you remove all federated identities as well as the developer user\n *          identifier, the Cognito identity becomes inaccessible.</p>\n *          <p>You must use AWS Developer credentials to call this API.</p>\n */\nexport class UnlinkDeveloperIdentityCommand extends $Command<\n  UnlinkDeveloperIdentityCommandInput,\n  UnlinkDeveloperIdentityCommandOutput,\n  CognitoIdentityClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: UnlinkDeveloperIdentityCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CognitoIdentityClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<UnlinkDeveloperIdentityCommandInput, UnlinkDeveloperIdentityCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getAwsAuthPlugin(configuration));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CognitoIdentityClient\";\n    const commandName = \"UnlinkDeveloperIdentityCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: UnlinkDeveloperIdentityInput.filterSensitiveLog,\n      outputFilterSensitiveLog: (output: any) => output,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: UnlinkDeveloperIdentityCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1UnlinkDeveloperIdentityCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<UnlinkDeveloperIdentityCommandOutput> {\n    return deserializeAws_json1_1UnlinkDeveloperIdentityCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CognitoIdentityClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CognitoIdentityClient\";\nimport { UnlinkIdentityInput } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1UnlinkIdentityCommand,\n  serializeAws_json1_1UnlinkIdentityCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type UnlinkIdentityCommandInput = UnlinkIdentityInput;\nexport type UnlinkIdentityCommandOutput = __MetadataBearer;\n\n/**\n * <p>Unlinks a federated identity from an existing account. Unlinked logins will be\n *          considered new identities next time they are seen. Removing the last linked login will make\n *          this identity inaccessible.</p>\n *          <p>This is a public API. You do not need any credentials to call this API.</p>\n */\nexport class UnlinkIdentityCommand extends $Command<\n  UnlinkIdentityCommandInput,\n  UnlinkIdentityCommandOutput,\n  CognitoIdentityClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: UnlinkIdentityCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CognitoIdentityClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<UnlinkIdentityCommandInput, UnlinkIdentityCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CognitoIdentityClient\";\n    const commandName = \"UnlinkIdentityCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: UnlinkIdentityInput.filterSensitiveLog,\n      outputFilterSensitiveLog: (output: any) => output,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: UnlinkIdentityCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1UnlinkIdentityCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<UnlinkIdentityCommandOutput> {\n    return deserializeAws_json1_1UnlinkIdentityCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CognitoIdentityClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CognitoIdentityClient\";\nimport { UntagResourceInput, UntagResourceResponse } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1UntagResourceCommand,\n  serializeAws_json1_1UntagResourceCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { getAwsAuthPlugin } from \"@aws-sdk/middleware-signing\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type UntagResourceCommandInput = UntagResourceInput;\nexport type UntagResourceCommandOutput = UntagResourceResponse & __MetadataBearer;\n\n/**\n * <p>Removes the specified tags from an Amazon Cognito identity pool. You can use this action\n *          up to 5 times per second, per account</p>\n */\nexport class UntagResourceCommand extends $Command<\n  UntagResourceCommandInput,\n  UntagResourceCommandOutput,\n  CognitoIdentityClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: UntagResourceCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CognitoIdentityClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<UntagResourceCommandInput, UntagResourceCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getAwsAuthPlugin(configuration));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CognitoIdentityClient\";\n    const commandName = \"UntagResourceCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: UntagResourceInput.filterSensitiveLog,\n      outputFilterSensitiveLog: UntagResourceResponse.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: UntagResourceCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1UntagResourceCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<UntagResourceCommandOutput> {\n    return deserializeAws_json1_1UntagResourceCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CognitoIdentityClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CognitoIdentityClient\";\nimport { IdentityPool } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1UpdateIdentityPoolCommand,\n  serializeAws_json1_1UpdateIdentityPoolCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { getAwsAuthPlugin } from \"@aws-sdk/middleware-signing\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type UpdateIdentityPoolCommandInput = IdentityPool;\nexport type UpdateIdentityPoolCommandOutput = IdentityPool & __MetadataBearer;\n\n/**\n * <p>Updates an identity pool.</p>\n *          <p>You must use AWS Developer credentials to call this API.</p>\n */\nexport class UpdateIdentityPoolCommand extends $Command<\n  UpdateIdentityPoolCommandInput,\n  UpdateIdentityPoolCommandOutput,\n  CognitoIdentityClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: UpdateIdentityPoolCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CognitoIdentityClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<UpdateIdentityPoolCommandInput, UpdateIdentityPoolCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getAwsAuthPlugin(configuration));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CognitoIdentityClient\";\n    const commandName = \"UpdateIdentityPoolCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: IdentityPool.filterSensitiveLog,\n      outputFilterSensitiveLog: IdentityPool.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: UpdateIdentityPoolCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1UpdateIdentityPoolCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<UpdateIdentityPoolCommandOutput> {\n    return deserializeAws_json1_1UpdateIdentityPoolCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n", "import { CognitoIdentityClient } from \"./CognitoIdentityClient\";\nimport {\n  CreateIdentityPoolCommand,\n  CreateIdentityPoolCommandInput,\n  CreateIdentityPoolCommandOutput,\n} from \"./commands/CreateIdentityPoolCommand\";\nimport {\n  DeleteIdentitiesCommand,\n  DeleteIdentitiesCommandInput,\n  DeleteIdentitiesCommandOutput,\n} from \"./commands/DeleteIdentitiesCommand\";\nimport {\n  DeleteIdentityPoolCommand,\n  DeleteIdentityPoolCommandInput,\n  DeleteIdentityPoolCommandOutput,\n} from \"./commands/DeleteIdentityPoolCommand\";\nimport {\n  DescribeIdentityCommand,\n  DescribeIdentityCommandInput,\n  DescribeIdentityCommandOutput,\n} from \"./commands/DescribeIdentityCommand\";\nimport {\n  DescribeIdentityPoolCommand,\n  DescribeIdentityPoolCommandInput,\n  DescribeIdentityPoolCommandOutput,\n} from \"./commands/DescribeIdentityPoolCommand\";\nimport {\n  GetCredentialsForIdentityCommand,\n  GetCredentialsForIdentityCommandInput,\n  GetCredentialsForIdentityCommandOutput,\n} from \"./commands/GetCredentialsForIdentityCommand\";\nimport { GetIdCommand, GetIdCommandInput, GetIdCommandOutput } from \"./commands/GetIdCommand\";\nimport {\n  GetIdentityPoolRolesCommand,\n  GetIdentityPoolRolesCommandInput,\n  GetIdentityPoolRolesCommandOutput,\n} from \"./commands/GetIdentityPoolRolesCommand\";\nimport {\n  GetOpenIdTokenCommand,\n  GetOpenIdTokenCommandInput,\n  GetOpenIdTokenCommandOutput,\n} from \"./commands/GetOpenIdTokenCommand\";\nimport {\n  GetOpenIdTokenForDeveloperIdentityCommand,\n  GetOpenIdTokenForDeveloperIdentityCommandInput,\n  GetOpenIdTokenForDeveloperIdentityCommandOutput,\n} from \"./commands/GetOpenIdTokenForDeveloperIdentityCommand\";\nimport {\n  ListIdentitiesCommand,\n  ListIdentitiesCommandInput,\n  ListIdentitiesCommandOutput,\n} from \"./commands/ListIdentitiesCommand\";\nimport {\n  ListIdentityPoolsCommand,\n  ListIdentityPoolsCommandInput,\n  ListIdentityPoolsCommandOutput,\n} from \"./commands/ListIdentityPoolsCommand\";\nimport {\n  ListTagsForResourceCommand,\n  ListTagsForResourceCommandInput,\n  ListTagsForResourceCommandOutput,\n} from \"./commands/ListTagsForResourceCommand\";\nimport {\n  LookupDeveloperIdentityCommand,\n  LookupDeveloperIdentityCommandInput,\n  LookupDeveloperIdentityCommandOutput,\n} from \"./commands/LookupDeveloperIdentityCommand\";\nimport {\n  MergeDeveloperIdentitiesCommand,\n  MergeDeveloperIdentitiesCommandInput,\n  MergeDeveloperIdentitiesCommandOutput,\n} from \"./commands/MergeDeveloperIdentitiesCommand\";\nimport {\n  SetIdentityPoolRolesCommand,\n  SetIdentityPoolRolesCommandInput,\n  SetIdentityPoolRolesCommandOutput,\n} from \"./commands/SetIdentityPoolRolesCommand\";\nimport { TagResourceCommand, TagResourceCommandInput, TagResourceCommandOutput } from \"./commands/TagResourceCommand\";\nimport {\n  UnlinkDeveloperIdentityCommand,\n  UnlinkDeveloperIdentityCommandInput,\n  UnlinkDeveloperIdentityCommandOutput,\n} from \"./commands/UnlinkDeveloperIdentityCommand\";\nimport {\n  UnlinkIdentityCommand,\n  UnlinkIdentityCommandInput,\n  UnlinkIdentityCommandOutput,\n} from \"./commands/UnlinkIdentityCommand\";\nimport {\n  UntagResourceCommand,\n  UntagResourceCommandInput,\n  UntagResourceCommandOutput,\n} from \"./commands/UntagResourceCommand\";\nimport {\n  UpdateIdentityPoolCommand,\n  UpdateIdentityPoolCommandInput,\n  UpdateIdentityPoolCommandOutput,\n} from \"./commands/UpdateIdentityPoolCommand\";\nimport { HttpHandlerOptions as __HttpHandlerOptions } from \"@aws-sdk/types\";\n\n/**\n * <fullname>Amazon Cognito Federated Identities</fullname>\n *          <p>Amazon Cognito Federated Identities is a web service that delivers scoped temporary\n *          credentials to mobile devices and other untrusted environments. It uniquely identifies a\n *          device and supplies the user with a consistent identity over the lifetime of an\n *          application.</p>\n *          <p>Using Amazon Cognito Federated Identities, you can enable authentication with one or\n *          more third-party identity providers (Facebook, Google, or Login with Amazon) or an Amazon\n *          Cognito user pool, and you can also choose to support unauthenticated access from your app.\n *          Cognito delivers a unique identifier for each user and acts as an OpenID token provider\n *          trusted by AWS Security Token Service (STS) to access temporary, limited-privilege AWS\n *          credentials.</p>\n *          <p>For a description of the authentication flow from the Amazon Cognito Developer Guide\n *          see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/authentication-flow.html\">Authentication Flow</a>.</p>\n *          <p>For more information see <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-identity.html\">Amazon Cognito Federated Identities</a>.</p>\n */\nexport class CognitoIdentity extends CognitoIdentityClient {\n  /**\n   * <p>Creates a new identity pool. The identity pool is a store of user identity\n   *          information that is specific to your AWS account. The keys for <code>SupportedLoginProviders</code> are as follows:</p>\n   *\n   *          <ul>\n   *             <li>\n   *                <p>Facebook: <code>graph.facebook.com</code>\n   *                </p>\n   *             </li>\n   *             <li>\n   *                <p>Google: <code>accounts.google.com</code>\n   *                </p>\n   *             </li>\n   *             <li>\n   *                <p>Amazon: <code>www.amazon.com</code>\n   *                </p>\n   *             </li>\n   *             <li>\n   *                <p>Twitter: <code>api.twitter.com</code>\n   *                </p>\n   *             </li>\n   *             <li>\n   *                <p>Digits: <code>www.digits.com</code>\n   *                </p>\n   *             </li>\n   *          </ul>\n   *\n   *          <p>You must use AWS Developer credentials to call this API.</p>\n   */\n  public createIdentityPool(\n    args: CreateIdentityPoolCommandInput,\n    options?: __HttpHandlerOptions\n  ): Promise<CreateIdentityPoolCommandOutput>;\n  public createIdentityPool(\n    args: CreateIdentityPoolCommandInput,\n    cb: (err: any, data?: CreateIdentityPoolCommandOutput) => void\n  ): void;\n  public createIdentityPool(\n    args: CreateIdentityPoolCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: CreateIdentityPoolCommandOutput) => void\n  ): void;\n  public createIdentityPool(\n    args: CreateIdentityPoolCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: CreateIdentityPoolCommandOutput) => void),\n    cb?: (err: any, data?: CreateIdentityPoolCommandOutput) => void\n  ): Promise<CreateIdentityPoolCommandOutput> | void {\n    const command = new CreateIdentityPoolCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Deletes identities from an identity pool. You can specify a list of 1-60 identities\n   *          that you want to delete.</p>\n   *          <p>You must use AWS Developer credentials to call this API.</p>\n   */\n  public deleteIdentities(\n    args: DeleteIdentitiesCommandInput,\n    options?: __HttpHandlerOptions\n  ): Promise<DeleteIdentitiesCommandOutput>;\n  public deleteIdentities(\n    args: DeleteIdentitiesCommandInput,\n    cb: (err: any, data?: DeleteIdentitiesCommandOutput) => void\n  ): void;\n  public deleteIdentities(\n    args: DeleteIdentitiesCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: DeleteIdentitiesCommandOutput) => void\n  ): void;\n  public deleteIdentities(\n    args: DeleteIdentitiesCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: DeleteIdentitiesCommandOutput) => void),\n    cb?: (err: any, data?: DeleteIdentitiesCommandOutput) => void\n  ): Promise<DeleteIdentitiesCommandOutput> | void {\n    const command = new DeleteIdentitiesCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Deletes an identity pool. Once a pool is deleted, users will not be able to\n   *          authenticate with the pool.</p>\n   *          <p>You must use AWS Developer credentials to call this API.</p>\n   */\n  public deleteIdentityPool(\n    args: DeleteIdentityPoolCommandInput,\n    options?: __HttpHandlerOptions\n  ): Promise<DeleteIdentityPoolCommandOutput>;\n  public deleteIdentityPool(\n    args: DeleteIdentityPoolCommandInput,\n    cb: (err: any, data?: DeleteIdentityPoolCommandOutput) => void\n  ): void;\n  public deleteIdentityPool(\n    args: DeleteIdentityPoolCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: DeleteIdentityPoolCommandOutput) => void\n  ): void;\n  public deleteIdentityPool(\n    args: DeleteIdentityPoolCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: DeleteIdentityPoolCommandOutput) => void),\n    cb?: (err: any, data?: DeleteIdentityPoolCommandOutput) => void\n  ): Promise<DeleteIdentityPoolCommandOutput> | void {\n    const command = new DeleteIdentityPoolCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Returns metadata related to the given identity, including when the identity was\n   *          created and any associated linked logins.</p>\n   *          <p>You must use AWS Developer credentials to call this API.</p>\n   */\n  public describeIdentity(\n    args: DescribeIdentityCommandInput,\n    options?: __HttpHandlerOptions\n  ): Promise<DescribeIdentityCommandOutput>;\n  public describeIdentity(\n    args: DescribeIdentityCommandInput,\n    cb: (err: any, data?: DescribeIdentityCommandOutput) => void\n  ): void;\n  public describeIdentity(\n    args: DescribeIdentityCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: DescribeIdentityCommandOutput) => void\n  ): void;\n  public describeIdentity(\n    args: DescribeIdentityCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: DescribeIdentityCommandOutput) => void),\n    cb?: (err: any, data?: DescribeIdentityCommandOutput) => void\n  ): Promise<DescribeIdentityCommandOutput> | void {\n    const command = new DescribeIdentityCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Gets details about a particular identity pool, including the pool name, ID\n   *          description, creation date, and current number of users.</p>\n   *          <p>You must use AWS Developer credentials to call this API.</p>\n   */\n  public describeIdentityPool(\n    args: DescribeIdentityPoolCommandInput,\n    options?: __HttpHandlerOptions\n  ): Promise<DescribeIdentityPoolCommandOutput>;\n  public describeIdentityPool(\n    args: DescribeIdentityPoolCommandInput,\n    cb: (err: any, data?: DescribeIdentityPoolCommandOutput) => void\n  ): void;\n  public describeIdentityPool(\n    args: DescribeIdentityPoolCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: DescribeIdentityPoolCommandOutput) => void\n  ): void;\n  public describeIdentityPool(\n    args: DescribeIdentityPoolCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: DescribeIdentityPoolCommandOutput) => void),\n    cb?: (err: any, data?: DescribeIdentityPoolCommandOutput) => void\n  ): Promise<DescribeIdentityPoolCommandOutput> | void {\n    const command = new DescribeIdentityPoolCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Returns credentials for the provided identity ID. Any provided logins will be\n   *          validated against supported login providers. If the token is for\n   *          cognito-identity.amazonaws.com, it will be passed through to AWS Security Token Service\n   *          with the appropriate role for the token.</p>\n   *          <p>This is a public API. You do not need any credentials to call this API.</p>\n   */\n  public getCredentialsForIdentity(\n    args: GetCredentialsForIdentityCommandInput,\n    options?: __HttpHandlerOptions\n  ): Promise<GetCredentialsForIdentityCommandOutput>;\n  public getCredentialsForIdentity(\n    args: GetCredentialsForIdentityCommandInput,\n    cb: (err: any, data?: GetCredentialsForIdentityCommandOutput) => void\n  ): void;\n  public getCredentialsForIdentity(\n    args: GetCredentialsForIdentityCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: GetCredentialsForIdentityCommandOutput) => void\n  ): void;\n  public getCredentialsForIdentity(\n    args: GetCredentialsForIdentityCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: GetCredentialsForIdentityCommandOutput) => void),\n    cb?: (err: any, data?: GetCredentialsForIdentityCommandOutput) => void\n  ): Promise<GetCredentialsForIdentityCommandOutput> | void {\n    const command = new GetCredentialsForIdentityCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Generates (or retrieves) a Cognito ID. Supplying multiple logins will create an\n   *          implicit linked account.</p>\n   *          <p>This is a public API. You do not need any credentials to call this API.</p>\n   */\n  public getId(args: GetIdCommandInput, options?: __HttpHandlerOptions): Promise<GetIdCommandOutput>;\n  public getId(args: GetIdCommandInput, cb: (err: any, data?: GetIdCommandOutput) => void): void;\n  public getId(\n    args: GetIdCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: GetIdCommandOutput) => void\n  ): void;\n  public getId(\n    args: GetIdCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: GetIdCommandOutput) => void),\n    cb?: (err: any, data?: GetIdCommandOutput) => void\n  ): Promise<GetIdCommandOutput> | void {\n    const command = new GetIdCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Gets the roles for an identity pool.</p>\n   *          <p>You must use AWS Developer credentials to call this API.</p>\n   */\n  public getIdentityPoolRoles(\n    args: GetIdentityPoolRolesCommandInput,\n    options?: __HttpHandlerOptions\n  ): Promise<GetIdentityPoolRolesCommandOutput>;\n  public getIdentityPoolRoles(\n    args: GetIdentityPoolRolesCommandInput,\n    cb: (err: any, data?: GetIdentityPoolRolesCommandOutput) => void\n  ): void;\n  public getIdentityPoolRoles(\n    args: GetIdentityPoolRolesCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: GetIdentityPoolRolesCommandOutput) => void\n  ): void;\n  public getIdentityPoolRoles(\n    args: GetIdentityPoolRolesCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: GetIdentityPoolRolesCommandOutput) => void),\n    cb?: (err: any, data?: GetIdentityPoolRolesCommandOutput) => void\n  ): Promise<GetIdentityPoolRolesCommandOutput> | void {\n    const command = new GetIdentityPoolRolesCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Gets an OpenID token, using a known Cognito ID. This known Cognito ID is returned by\n   *             <a>GetId</a>. You can optionally add additional logins for the identity.\n   *          Supplying multiple logins creates an implicit link.</p>\n   *          <p>The OpenId token is valid for 10 minutes.</p>\n   *          <p>This is a public API. You do not need any credentials to call this API.</p>\n   */\n  public getOpenIdToken(\n    args: GetOpenIdTokenCommandInput,\n    options?: __HttpHandlerOptions\n  ): Promise<GetOpenIdTokenCommandOutput>;\n  public getOpenIdToken(\n    args: GetOpenIdTokenCommandInput,\n    cb: (err: any, data?: GetOpenIdTokenCommandOutput) => void\n  ): void;\n  public getOpenIdToken(\n    args: GetOpenIdTokenCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: GetOpenIdTokenCommandOutput) => void\n  ): void;\n  public getOpenIdToken(\n    args: GetOpenIdTokenCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: GetOpenIdTokenCommandOutput) => void),\n    cb?: (err: any, data?: GetOpenIdTokenCommandOutput) => void\n  ): Promise<GetOpenIdTokenCommandOutput> | void {\n    const command = new GetOpenIdTokenCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Registers (or retrieves) a Cognito <code>IdentityId</code> and an OpenID Connect\n   *          token for a user authenticated by your backend authentication process. Supplying multiple\n   *          logins will create an implicit linked account. You can only specify one developer provider\n   *          as part of the <code>Logins</code> map, which is linked to the identity pool. The developer\n   *          provider is the \"domain\" by which Cognito will refer to your users.</p>\n   *          <p>You can use <code>GetOpenIdTokenForDeveloperIdentity</code> to create a new identity\n   *          and to link new logins (that is, user credentials issued by a public provider or developer\n   *          provider) to an existing identity. When you want to create a new identity, the\n   *             <code>IdentityId</code> should be null. When you want to associate a new login with an\n   *          existing authenticated/unauthenticated identity, you can do so by providing the existing\n   *             <code>IdentityId</code>. This API will create the identity in the specified\n   *             <code>IdentityPoolId</code>.</p>\n   *          <p>You must use AWS Developer credentials to call this API.</p>\n   */\n  public getOpenIdTokenForDeveloperIdentity(\n    args: GetOpenIdTokenForDeveloperIdentityCommandInput,\n    options?: __HttpHandlerOptions\n  ): Promise<GetOpenIdTokenForDeveloperIdentityCommandOutput>;\n  public getOpenIdTokenForDeveloperIdentity(\n    args: GetOpenIdTokenForDeveloperIdentityCommandInput,\n    cb: (err: any, data?: GetOpenIdTokenForDeveloperIdentityCommandOutput) => void\n  ): void;\n  public getOpenIdTokenForDeveloperIdentity(\n    args: GetOpenIdTokenForDeveloperIdentityCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: GetOpenIdTokenForDeveloperIdentityCommandOutput) => void\n  ): void;\n  public getOpenIdTokenForDeveloperIdentity(\n    args: GetOpenIdTokenForDeveloperIdentityCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: GetOpenIdTokenForDeveloperIdentityCommandOutput) => void),\n    cb?: (err: any, data?: GetOpenIdTokenForDeveloperIdentityCommandOutput) => void\n  ): Promise<GetOpenIdTokenForDeveloperIdentityCommandOutput> | void {\n    const command = new GetOpenIdTokenForDeveloperIdentityCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Lists the identities in an identity pool.</p>\n   *          <p>You must use AWS Developer credentials to call this API.</p>\n   */\n  public listIdentities(\n    args: ListIdentitiesCommandInput,\n    options?: __HttpHandlerOptions\n  ): Promise<ListIdentitiesCommandOutput>;\n  public listIdentities(\n    args: ListIdentitiesCommandInput,\n    cb: (err: any, data?: ListIdentitiesCommandOutput) => void\n  ): void;\n  public listIdentities(\n    args: ListIdentitiesCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: ListIdentitiesCommandOutput) => void\n  ): void;\n  public listIdentities(\n    args: ListIdentitiesCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: ListIdentitiesCommandOutput) => void),\n    cb?: (err: any, data?: ListIdentitiesCommandOutput) => void\n  ): Promise<ListIdentitiesCommandOutput> | void {\n    const command = new ListIdentitiesCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Lists all of the Cognito identity pools registered for your account.</p>\n   *          <p>You must use AWS Developer credentials to call this API.</p>\n   */\n  public listIdentityPools(\n    args: ListIdentityPoolsCommandInput,\n    options?: __HttpHandlerOptions\n  ): Promise<ListIdentityPoolsCommandOutput>;\n  public listIdentityPools(\n    args: ListIdentityPoolsCommandInput,\n    cb: (err: any, data?: ListIdentityPoolsCommandOutput) => void\n  ): void;\n  public listIdentityPools(\n    args: ListIdentityPoolsCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: ListIdentityPoolsCommandOutput) => void\n  ): void;\n  public listIdentityPools(\n    args: ListIdentityPoolsCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: ListIdentityPoolsCommandOutput) => void),\n    cb?: (err: any, data?: ListIdentityPoolsCommandOutput) => void\n  ): Promise<ListIdentityPoolsCommandOutput> | void {\n    const command = new ListIdentityPoolsCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Lists the tags that are assigned to an Amazon Cognito identity pool.</p>\n   *          <p>A tag is a label that you can apply to identity pools to categorize and manage them in\n   *          different ways, such as by purpose, owner, environment, or other criteria.</p>\n   *          <p>You can use this action up to 10 times per second, per account.</p>\n   */\n  public listTagsForResource(\n    args: ListTagsForResourceCommandInput,\n    options?: __HttpHandlerOptions\n  ): Promise<ListTagsForResourceCommandOutput>;\n  public listTagsForResource(\n    args: ListTagsForResourceCommandInput,\n    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void\n  ): void;\n  public listTagsForResource(\n    args: ListTagsForResourceCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void\n  ): void;\n  public listTagsForResource(\n    args: ListTagsForResourceCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: ListTagsForResourceCommandOutput) => void),\n    cb?: (err: any, data?: ListTagsForResourceCommandOutput) => void\n  ): Promise<ListTagsForResourceCommandOutput> | void {\n    const command = new ListTagsForResourceCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Retrieves the <code>IdentityID</code> associated with a\n   *             <code>DeveloperUserIdentifier</code> or the list of <code>DeveloperUserIdentifier</code>\n   *          values associated with an <code>IdentityId</code> for an existing identity. Either\n   *             <code>IdentityID</code> or <code>DeveloperUserIdentifier</code> must not be null. If you\n   *          supply only one of these values, the other value will be searched in the database and\n   *          returned as a part of the response. If you supply both,\n   *             <code>DeveloperUserIdentifier</code> will be matched against <code>IdentityID</code>. If\n   *          the values are verified against the database, the response returns both values and is the\n   *          same as the request. Otherwise a <code>ResourceConflictException</code> is\n   *          thrown.</p>\n   *          <p>\n   *             <code>LookupDeveloperIdentity</code> is intended for low-throughput control plane\n   *          operations: for example, to enable customer service to locate an identity ID by username.\n   *          If you are using it for higher-volume operations such as user authentication, your requests\n   *          are likely to be throttled. <a>GetOpenIdTokenForDeveloperIdentity</a> is a\n   *          better option for higher-volume operations for user authentication.</p>\n   *          <p>You must use AWS Developer credentials to call this API.</p>\n   */\n  public lookupDeveloperIdentity(\n    args: LookupDeveloperIdentityCommandInput,\n    options?: __HttpHandlerOptions\n  ): Promise<LookupDeveloperIdentityCommandOutput>;\n  public lookupDeveloperIdentity(\n    args: LookupDeveloperIdentityCommandInput,\n    cb: (err: any, data?: LookupDeveloperIdentityCommandOutput) => void\n  ): void;\n  public lookupDeveloperIdentity(\n    args: LookupDeveloperIdentityCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: LookupDeveloperIdentityCommandOutput) => void\n  ): void;\n  public lookupDeveloperIdentity(\n    args: LookupDeveloperIdentityCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: LookupDeveloperIdentityCommandOutput) => void),\n    cb?: (err: any, data?: LookupDeveloperIdentityCommandOutput) => void\n  ): Promise<LookupDeveloperIdentityCommandOutput> | void {\n    const command = new LookupDeveloperIdentityCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Merges two users having different <code>IdentityId</code>s, existing in the same\n   *          identity pool, and identified by the same developer provider. You can use this action to\n   *          request that discrete users be merged and identified as a single user in the Cognito\n   *          environment. Cognito associates the given source user (<code>SourceUserIdentifier</code>)\n   *          with the <code>IdentityId</code> of the <code>DestinationUserIdentifier</code>. Only\n   *          developer-authenticated users can be merged. If the users to be merged are associated with\n   *          the same public provider, but as two different users, an exception will be\n   *          thrown.</p>\n   *          <p>The number of linked logins is limited to 20. So, the number of linked logins for the\n   *          source user, <code>SourceUserIdentifier</code>, and the destination user,\n   *          <code>DestinationUserIdentifier</code>, together should not be larger than 20.\n   *          Otherwise, an exception will be thrown.</p>\n   *          <p>You must use AWS Developer credentials to call this API.</p>\n   */\n  public mergeDeveloperIdentities(\n    args: MergeDeveloperIdentitiesCommandInput,\n    options?: __HttpHandlerOptions\n  ): Promise<MergeDeveloperIdentitiesCommandOutput>;\n  public mergeDeveloperIdentities(\n    args: MergeDeveloperIdentitiesCommandInput,\n    cb: (err: any, data?: MergeDeveloperIdentitiesCommandOutput) => void\n  ): void;\n  public mergeDeveloperIdentities(\n    args: MergeDeveloperIdentitiesCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: MergeDeveloperIdentitiesCommandOutput) => void\n  ): void;\n  public mergeDeveloperIdentities(\n    args: MergeDeveloperIdentitiesCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: MergeDeveloperIdentitiesCommandOutput) => void),\n    cb?: (err: any, data?: MergeDeveloperIdentitiesCommandOutput) => void\n  ): Promise<MergeDeveloperIdentitiesCommandOutput> | void {\n    const command = new MergeDeveloperIdentitiesCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Sets the roles for an identity pool. These roles are used when making calls to <a>GetCredentialsForIdentity</a> action.</p>\n   *          <p>You must use AWS Developer credentials to call this API.</p>\n   */\n  public setIdentityPoolRoles(\n    args: SetIdentityPoolRolesCommandInput,\n    options?: __HttpHandlerOptions\n  ): Promise<SetIdentityPoolRolesCommandOutput>;\n  public setIdentityPoolRoles(\n    args: SetIdentityPoolRolesCommandInput,\n    cb: (err: any, data?: SetIdentityPoolRolesCommandOutput) => void\n  ): void;\n  public setIdentityPoolRoles(\n    args: SetIdentityPoolRolesCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: SetIdentityPoolRolesCommandOutput) => void\n  ): void;\n  public setIdentityPoolRoles(\n    args: SetIdentityPoolRolesCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: SetIdentityPoolRolesCommandOutput) => void),\n    cb?: (err: any, data?: SetIdentityPoolRolesCommandOutput) => void\n  ): Promise<SetIdentityPoolRolesCommandOutput> | void {\n    const command = new SetIdentityPoolRolesCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Assigns a set of tags to an Amazon Cognito identity pool. A tag is a label that you can\n   *          use to categorize and manage identity pools in different ways, such as by purpose, owner,\n   *          environment, or other criteria.</p>\n   *          <p>Each tag consists of a key and value, both of which you define. A key is a general\n   *          category for more specific values. For example, if you have two versions of an identity\n   *          pool, one for testing and another for production, you might assign an\n   *             <code>Environment</code> tag key to both identity pools. The value of this key might be\n   *             <code>Test</code> for one identity pool and <code>Production</code> for the\n   *          other.</p>\n   *          <p>Tags are useful for cost tracking and access control. You can activate your tags so that\n   *          they appear on the Billing and Cost Management console, where you can track the costs\n   *          associated with your identity pools. In an IAM policy, you can constrain permissions for\n   *          identity pools based on specific tags or tag values.</p>\n   *          <p>You can use this action up to 5 times per second, per account. An identity pool can have\n   *          as many as 50 tags.</p>\n   */\n  public tagResource(args: TagResourceCommandInput, options?: __HttpHandlerOptions): Promise<TagResourceCommandOutput>;\n  public tagResource(args: TagResourceCommandInput, cb: (err: any, data?: TagResourceCommandOutput) => void): void;\n  public tagResource(\n    args: TagResourceCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: TagResourceCommandOutput) => void\n  ): void;\n  public tagResource(\n    args: TagResourceCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: TagResourceCommandOutput) => void),\n    cb?: (err: any, data?: TagResourceCommandOutput) => void\n  ): Promise<TagResourceCommandOutput> | void {\n    const command = new TagResourceCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Unlinks a <code>DeveloperUserIdentifier</code> from an existing identity. Unlinked\n   *          developer users will be considered new identities next time they are seen. If, for a given\n   *          Cognito identity, you remove all federated identities as well as the developer user\n   *          identifier, the Cognito identity becomes inaccessible.</p>\n   *          <p>You must use AWS Developer credentials to call this API.</p>\n   */\n  public unlinkDeveloperIdentity(\n    args: UnlinkDeveloperIdentityCommandInput,\n    options?: __HttpHandlerOptions\n  ): Promise<UnlinkDeveloperIdentityCommandOutput>;\n  public unlinkDeveloperIdentity(\n    args: UnlinkDeveloperIdentityCommandInput,\n    cb: (err: any, data?: UnlinkDeveloperIdentityCommandOutput) => void\n  ): void;\n  public unlinkDeveloperIdentity(\n    args: UnlinkDeveloperIdentityCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: UnlinkDeveloperIdentityCommandOutput) => void\n  ): void;\n  public unlinkDeveloperIdentity(\n    args: UnlinkDeveloperIdentityCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: UnlinkDeveloperIdentityCommandOutput) => void),\n    cb?: (err: any, data?: UnlinkDeveloperIdentityCommandOutput) => void\n  ): Promise<UnlinkDeveloperIdentityCommandOutput> | void {\n    const command = new UnlinkDeveloperIdentityCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Unlinks a federated identity from an existing account. Unlinked logins will be\n   *          considered new identities next time they are seen. Removing the last linked login will make\n   *          this identity inaccessible.</p>\n   *          <p>This is a public API. You do not need any credentials to call this API.</p>\n   */\n  public unlinkIdentity(\n    args: UnlinkIdentityCommandInput,\n    options?: __HttpHandlerOptions\n  ): Promise<UnlinkIdentityCommandOutput>;\n  public unlinkIdentity(\n    args: UnlinkIdentityCommandInput,\n    cb: (err: any, data?: UnlinkIdentityCommandOutput) => void\n  ): void;\n  public unlinkIdentity(\n    args: UnlinkIdentityCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: UnlinkIdentityCommandOutput) => void\n  ): void;\n  public unlinkIdentity(\n    args: UnlinkIdentityCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: UnlinkIdentityCommandOutput) => void),\n    cb?: (err: any, data?: UnlinkIdentityCommandOutput) => void\n  ): Promise<UnlinkIdentityCommandOutput> | void {\n    const command = new UnlinkIdentityCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Removes the specified tags from an Amazon Cognito identity pool. You can use this action\n   *          up to 5 times per second, per account</p>\n   */\n  public untagResource(\n    args: UntagResourceCommandInput,\n    options?: __HttpHandlerOptions\n  ): Promise<UntagResourceCommandOutput>;\n  public untagResource(\n    args: UntagResourceCommandInput,\n    cb: (err: any, data?: UntagResourceCommandOutput) => void\n  ): void;\n  public untagResource(\n    args: UntagResourceCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: UntagResourceCommandOutput) => void\n  ): void;\n  public untagResource(\n    args: UntagResourceCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: UntagResourceCommandOutput) => void),\n    cb?: (err: any, data?: UntagResourceCommandOutput) => void\n  ): Promise<UntagResourceCommandOutput> | void {\n    const command = new UntagResourceCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Updates an identity pool.</p>\n   *          <p>You must use AWS Developer credentials to call this API.</p>\n   */\n  public updateIdentityPool(\n    args: UpdateIdentityPoolCommandInput,\n    options?: __HttpHandlerOptions\n  ): Promise<UpdateIdentityPoolCommandOutput>;\n  public updateIdentityPool(\n    args: UpdateIdentityPoolCommandInput,\n    cb: (err: any, data?: UpdateIdentityPoolCommandOutput) => void\n  ): void;\n  public updateIdentityPool(\n    args: UpdateIdentityPoolCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: UpdateIdentityPoolCommandOutput) => void\n  ): void;\n  public updateIdentityPool(\n    args: UpdateIdentityPoolCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: UpdateIdentityPoolCommandOutput) => void),\n    cb?: (err: any, data?: UpdateIdentityPoolCommandOutput) => void\n  ): Promise<UpdateIdentityPoolCommandOutput> | void {\n    const command = new UpdateIdentityPoolCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n}\n", "/**\n * An error representing a failure of an individual credential provider.\n *\n * This error class has special meaning to the {@link chain} method. If a\n * provider in the chain is rejected with an error, the chain will only proceed\n * to the next provider if the value of the `tryNextLink` property on the error\n * is truthy. This allows individual providers to halt the chain and also\n * ensures the chain will stop if an entirely unexpected error is encountered.\n */\nexport class ProviderError extends Error {\n  constructor(message: string, public readonly tryNextLink: boolean = true) {\n    super(message);\n  }\n}\n", "import { Logins, ResolvedLogins } from \"./Logins\";\n\n/**\n * @internal\n */\nexport function resolveLogins(logins: Logins): Promise<ResolvedLogins> {\n  return Promise.all(\n    Object.keys(logins).reduce((arr: Array<[string, string] | Promise<[string, string]>>, name: string) => {\n      const tokenOrProvider = logins[name];\n      if (typeof tokenOrProvider === \"string\") {\n        arr.push([name, tokenOrProvider] as [string, string]);\n      } else {\n        arr.push(tokenOrProvider().then((token) => [name, token] as [string, string]));\n      }\n      return arr;\n    }, [] as Array<Promise<[string, string]>>)\n  ).then((resolvedPairs) =>\n    resolvedPairs.reduce((logins: ResolvedLogins, [key, value]) => {\n      logins[key] = value;\n      return logins;\n    }, {} as ResolvedLogins)\n  );\n}\n", "import { GetCredentialsForIdentityCommand } from \"@aws-sdk/client-cognito-identity\";\nimport { ProviderError } from \"@aws-sdk/property-provider\";\nimport { CredentialProvider, Credentials } from \"@aws-sdk/types\";\n\nimport { CognitoProviderParameters } from \"./CognitoProviderParameters\";\nimport { resolveLogins } from \"./resolveLogins\";\n\nexport interface CognitoIdentityCredentials extends Credentials {\n  /**\n   * The Cognito ID returned by the last call to AWS.CognitoIdentity.getOpenIdToken().\n   */\n  identityId: string;\n}\n\n/**\n * Retrieves temporary AWS credentials using Amazon Cognito's\n * `GetCredentialsForIdentity` operation.\n *\n * Results from this function call are not cached internally.\n */\nexport function fromCognitoIdentity(parameters: FromCognitoIdentityParameters): CredentialProvider {\n  return async (): Promise<CognitoIdentityCredentials> => {\n    const {\n      Credentials: {\n        AccessKeyId = throwOnMissingAccessKeyId(),\n        Expiration,\n        SecretKey = throwOnMissingSecretKey(),\n        SessionToken,\n      } = throwOnMissingCredentials(),\n    } = await parameters.client.send(\n      new GetCredentialsForIdentityCommand({\n        CustomRoleArn: parameters.customRoleArn,\n        IdentityId: parameters.identityId,\n        Logins: parameters.logins ? await resolveLogins(parameters.logins) : undefined,\n      })\n    );\n\n    return {\n      identityId: parameters.identityId,\n      accessKeyId: AccessKeyId,\n      secretAccessKey: SecretKey,\n      sessionToken: SessionToken,\n      expiration: Expiration,\n    };\n  };\n}\n\nexport interface FromCognitoIdentityParameters extends CognitoProviderParameters {\n  /**\n   * The unique identifier for the identity against which credentials will be\n   * issued.\n   */\n  identityId: string;\n}\n\nfunction throwOnMissingAccessKeyId(): never {\n  throw new ProviderError(\"Response from Amazon Cognito contained no access key ID\");\n}\n\nfunction throwOnMissingCredentials(): never {\n  throw new ProviderError(\"Response from Amazon Cognito contained no credentials\");\n}\n\nfunction throwOnMissingSecretKey(): never {\n  throw new ProviderError(\"Response from Amazon Cognito contained no secret key\");\n}\n", "import { Storage } from \"./Storage\";\n\nconst STORE_NAME = \"IdentityIds\";\n\nexport class IndexedDbStorage implements Storage {\n  constructor(private readonly dbName: string = \"aws:cognito-identity-ids\") {}\n\n  getItem(key: string): Promise<string | null> {\n    return this.withObjectStore(\"readonly\", (store) => {\n      const req = store.get(key);\n\n      return new Promise<string | null>((resolve) => {\n        req.onerror = () => resolve(null);\n\n        req.onsuccess = () => resolve(req.result ? req.result.value : null);\n      });\n    }).catch(() => null);\n  }\n\n  removeItem(key: string): Promise<void> {\n    return this.withObjectStore(\"readwrite\", (store) => {\n      const req = store.delete(key);\n\n      return new Promise<void>((resolve, reject) => {\n        req.onerror = () => reject(req.error);\n\n        req.onsuccess = () => resolve();\n      });\n    });\n  }\n\n  setItem(id: string, value: string): Promise<void> {\n    return this.withObjectStore(\"readwrite\", (store) => {\n      const req = store.put({ id, value });\n\n      return new Promise<void>((resolve, reject) => {\n        req.onerror = () => reject(req.error);\n\n        req.onsuccess = () => resolve();\n      });\n    });\n  }\n\n  private getDb(): Promise<IDBDatabase> {\n    const openDbRequest = self.indexedDB.open(this.dbName, 1);\n    return new Promise((resolve, reject) => {\n      openDbRequest.onsuccess = () => {\n        resolve(openDbRequest.result);\n      };\n\n      openDbRequest.onerror = () => {\n        reject(openDbRequest.error);\n      };\n\n      openDbRequest.onblocked = () => {\n        reject(new Error(\"Unable to access DB\"));\n      };\n\n      openDbRequest.onupgradeneeded = () => {\n        const db = openDbRequest.result;\n        db.onerror = () => {\n          reject(new Error(\"Failed to create object store\"));\n        };\n\n        db.createObjectStore(STORE_NAME, { keyPath: \"id\" });\n      };\n    });\n  }\n\n  private withObjectStore<R>(mode: IDBTransactionMode, action: (store: IDBObjectStore) => Promise<R>): Promise<R> {\n    return this.getDb().then((db) => {\n      const tx = db.transaction(STORE_NAME, mode);\n      tx.oncomplete = () => db.close();\n\n      return new Promise<R>((resolve, reject) => {\n        tx.onerror = () => reject(tx.error);\n\n        resolve(action(tx.objectStore(STORE_NAME)));\n      }).catch((err) => {\n        db.close();\n        throw err;\n      });\n    });\n  }\n}\n", "import { Storage } from \"./Storage\";\n\nexport class InMemoryStorage implements Storage {\n  constructor(private store: { [key: string]: string } = {}) {}\n\n  getItem(key: string): string | null {\n    if (key in this.store) {\n      return this.store[key];\n    }\n\n    return null;\n  }\n\n  removeItem(key: string): void {\n    delete this.store[key];\n  }\n\n  setItem(key: string, value: string): void {\n    this.store[key] = value;\n  }\n}\n", "import { IndexedDbStorage } from \"./IndexedDbStorage\";\nimport { InMemoryStorage } from \"./InMemoryStorage\";\nimport { Storage } from \"./Storage\";\n\nconst inMemoryStorage = new InMemoryStorage();\n\nexport function localStorage(): Storage {\n  if (typeof self === \"object\" && self.indexedDB) {\n    return new IndexedDbStorage();\n  }\n\n  if (typeof window === \"object\" && window.localStorage) {\n    return window.localStorage;\n  }\n\n  return inMemoryStorage;\n}\n", "import { GetIdCommand } from \"@aws-sdk/client-cognito-identity\";\nimport { ProviderError } from \"@aws-sdk/property-provider\";\nimport { CredentialProvider } from \"@aws-sdk/types\";\n\nimport { CognitoProviderParameters } from \"./CognitoProviderParameters\";\nimport { fromCognitoIdentity } from \"./fromCognitoIdentity\";\nimport { localStorage } from \"./localStorage\";\nimport { resolveLogins } from \"./resolveLogins\";\nimport { Storage } from \"./Storage\";\n\n/**\n * Retrieves or generates a unique identifier using Amazon Cognito's `GetId`\n * operation, then generates temporary AWS credentials using Amazon Cognito's\n * `GetCredentialsForIdentity` operation.\n *\n * Results from `GetId` are cached internally, but results from\n * `GetCredentialsForIdentity` are not.\n */\nexport function fromCognitoIdentityPool({\n  accountId,\n  cache = localStorage(),\n  client,\n  customRoleArn,\n  identityPoolId,\n  logins,\n  userIdentifier = !logins || Object.keys(logins).length === 0 ? \"ANONYMOUS\" : undefined,\n}: FromCognitoIdentityPoolParameters): CredentialProvider {\n  const cacheKey = userIdentifier ? `aws:cognito-identity-credentials:${identityPoolId}:${userIdentifier}` : undefined;\n\n  let provider: CredentialProvider = async () => {\n    let identityId = cacheKey && (await cache.getItem(cacheKey));\n    if (!identityId) {\n      const { IdentityId = throwOnMissingId() } = await client.send(\n        new GetIdCommand({\n          AccountId: accountId,\n          IdentityPoolId: identityPoolId,\n          Logins: logins ? await resolveLogins(logins) : undefined,\n        })\n      );\n      identityId = IdentityId;\n      if (cacheKey) {\n        Promise.resolve(cache.setItem(cacheKey, identityId)).catch(() => {});\n      }\n    }\n\n    provider = fromCognitoIdentity({\n      client,\n      customRoleArn,\n      logins,\n      identityId,\n    });\n\n    return provider();\n  };\n\n  return () =>\n    provider().catch(async (err) => {\n      if (cacheKey) {\n        Promise.resolve(cache.removeItem(cacheKey)).catch(() => {});\n      }\n\n      throw err;\n    });\n}\n\nexport interface FromCognitoIdentityPoolParameters extends CognitoProviderParameters {\n  /**\n   * A standard AWS account ID (9+ digits).\n   */\n  accountId?: string;\n\n  /**\n   * A cache in which to store resolved Cognito IdentityIds. If not supplied,\n   * the credential provider will attempt to store IdentityIds in one of the\n   * following (in order of preference):\n   *   1. IndexedDB\n   *   2. LocalStorage\n   *   3. An in-memory cache object that will not persist between pages.\n   *\n   * IndexedDB is preferred to maximize data sharing between top-level\n   * browsing contexts and web workers.\n   *\n   * The provider will not cache IdentityIds of authenticated users unless a\n   * separate `userIdentitifer` parameter is supplied.\n   */\n  cache?: Storage;\n\n  /**\n   * The unique identifier for the identity pool from which an identity should\n   * be retrieved or generated.\n   */\n  identityPoolId: string;\n\n  /**\n   * A unique identifier for the user. This is distinct from a Cognito\n   * IdentityId and should instead be an identifier meaningful to your\n   * application. Used to cache Cognito IdentityIds on a per-user basis.\n   */\n  userIdentifier?: string;\n}\n\nfunction throwOnMissingId(): never {\n  throw new ProviderError(\"Response from Amazon Cognito contained no identity ID\");\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport {\n\tCognitoIdentityClient,\n\tCognitoIdentityClientConfig,\n} from '@aws-sdk/client-cognito-identity';\nimport { Provider } from '@aws-sdk/types';\nimport { getAmplifyUserAgent } from '../Platform';\n\n/**\n * Returns a CognitoIdentityClient with middleware\n * @param {CognitoIdentityClientConfig} config\n * @return {CognitoIdentityClient}\n */\nexport function createCognitoIdentityClient(\n\tconfig: CognitoIdentityClientConfig\n): CognitoIdentityClient {\n\tconst client = new CognitoIdentityClient({\n\t\tregion: config.region,\n\t\tcustomUserAgent: getAmplifyUserAgent(),\n\t});\n\n\tclient.middlewareStack.add(\n\t\t(next, _) => (args: any) => {\n\t\t\treturn next(middlewareArgs(args));\n\t\t},\n\t\t{\n\t\t\tstep: 'build',\n\t\t\tname: 'cacheControlMiddleWare',\n\t\t}\n\t);\n\n\treturn client;\n}\n\nexport function middlewareArgs(args: { request: any; input: any }) {\n\treturn {\n\t\t...args,\n\t\trequest: {\n\t\t\t...args.request,\n\t\t\theaders: {\n\t\t\t\t...args.request.headers,\n\t\t\t\t'cache-control': 'no-store',\n\t\t\t},\n\t\t},\n\t};\n}\n", "import { ConsoleLogger as Logger } from './Logger';\nimport { StorageHelper } from './StorageHelper';\nimport { makeQuerablePromise } from './JS';\nimport { FacebookOAuth, GoogleOAuth } from './OAuthHelper';\nimport { jitteredExponentialRetry } from './Util';\nimport { ICredentials } from './types';\nimport { Amplify } from './Amplify';\nimport {\n\tfromCognitoIdentity,\n\tFromCognitoIdentityParameters,\n\tfromCognitoIdentityPool,\n\tFromCognitoIdentityPoolParameters,\n} from '@aws-sdk/credential-provider-cognito-identity';\nimport {\n\tGetIdCommand,\n\tGetCredentialsForIdentityCommand,\n} from '@aws-sdk/client-cognito-identity';\nimport { CredentialProvider } from '@aws-sdk/types';\nimport { createCognitoIdentityClient } from './Util/CognitoIdentityClient';\n\nconst logger = new Logger('Credentials');\n\nconst CREDENTIALS_TTL = 50 * 60 * 1000; // 50 min, can be modified on config if required in the future\n\nconst COGNITO_IDENTITY_KEY_PREFIX = 'CognitoIdentityId-';\n\nexport class CredentialsClass {\n\tprivate _config;\n\tprivate _credentials;\n\tprivate _credentials_source;\n\tprivate _gettingCredPromise = null;\n\tprivate _refreshHandlers = {};\n\tprivate _storage;\n\tprivate _storageSync;\n\tprivate _identityId;\n\tprivate _nextCredentialsRefresh: Number;\n\n\t// Allow `Auth` to be injected for SSR, but Auth isn't a required dependency for Credentials\n\tAuth = undefined;\n\n\tconstructor(config) {\n\t\tthis.configure(config);\n\t\tthis._refreshHandlers['google'] = GoogleOAuth.refreshGoogleToken;\n\t\tthis._refreshHandlers['facebook'] = FacebookOAuth.refreshFacebookToken;\n\t}\n\n\tpublic getModuleName() {\n\t\treturn 'Credentials';\n\t}\n\n\tpublic getCredSource() {\n\t\treturn this._credentials_source;\n\t}\n\n\tpublic configure(config) {\n\t\tif (!config) return this._config || {};\n\n\t\tthis._config = Object.assign({}, this._config, config);\n\t\tconst { refreshHandlers } = this._config;\n\t\t// If the developer has provided an object of refresh handlers,\n\t\t// then we can merge the provided handlers with the current handlers.\n\t\tif (refreshHandlers) {\n\t\t\tthis._refreshHandlers = {\n\t\t\t\t...this._refreshHandlers,\n\t\t\t\t...refreshHandlers,\n\t\t\t};\n\t\t}\n\n\t\tthis._storage = this._config.storage;\n\n\t\tif (!this._storage) {\n\t\t\tthis._storage = new StorageHelper().getStorage();\n\t\t}\n\n\t\tthis._storageSync = Promise.resolve();\n\t\tif (typeof this._storage['sync'] === 'function') {\n\t\t\tthis._storageSync = this._storage['sync']();\n\t\t}\n\n\t\treturn this._config;\n\t}\n\n\tpublic get() {\n\t\tlogger.debug('getting credentials');\n\t\treturn this._pickupCredentials();\n\t}\n\n\t// currently we only store the guest identity in local storage\n\tprivate _getCognitoIdentityIdStorageKey(identityPoolId: string) {\n\t\treturn `${COGNITO_IDENTITY_KEY_PREFIX}${identityPoolId}`;\n\t}\n\n\tprivate _pickupCredentials() {\n\t\tlogger.debug('picking up credentials');\n\t\tif (!this._gettingCredPromise || !this._gettingCredPromise.isPending()) {\n\t\t\tlogger.debug('getting new cred promise');\n\t\t\tthis._gettingCredPromise = makeQuerablePromise(this._keepAlive());\n\t\t} else {\n\t\t\tlogger.debug('getting old cred promise');\n\t\t}\n\t\treturn this._gettingCredPromise;\n\t}\n\n\tprivate async _keepAlive() {\n\t\tlogger.debug('checking if credentials exists and not expired');\n\t\tconst cred = this._credentials;\n\t\tif (cred && !this._isExpired(cred) && !this._isPastTTL()) {\n\t\t\tlogger.debug('credentials not changed and not expired, directly return');\n\t\t\treturn Promise.resolve(cred);\n\t\t}\n\n\t\tlogger.debug('need to get a new credential or refresh the existing one');\n\n\t\t// Some use-cases don't require Auth for signing in, but use Credentials for guest users (e.g. Analytics)\n\t\t// Prefer locally scoped `Auth`, but fallback to registered `Amplify.Auth` global otherwise.\n\t\tconst { Auth = Amplify.Auth } = this;\n\n\t\tif (!Auth || typeof Auth.currentUserCredentials !== 'function') {\n\t\t\treturn Promise.reject('No Auth module registered in Amplify');\n\t\t}\n\n\t\tif (!this._isExpired(cred) && this._isPastTTL()) {\n\t\t\tlogger.debug('ttl has passed but token is not yet expired');\n\t\t\ttry {\n\t\t\t\tconst user = await Auth.currentUserPoolUser();\n\t\t\t\tconst session = await Auth.currentSession();\n\t\t\t\tconst refreshToken = session.refreshToken;\n\t\t\t\tconst refreshRequest = new Promise((res, rej) => {\n\t\t\t\t\tuser.refreshSession(refreshToken, (err, data) => {\n\t\t\t\t\t\treturn err ? rej(err) : res(data);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\tawait refreshRequest; // note that rejections will be caught and handled in the catch block.\n\t\t\t} catch (err) {\n\t\t\t\t// should not throw because user might just be on guest access or is authenticated through federation\n\t\t\t\tlogger.debug('Error attempting to refreshing the session', err);\n\t\t\t}\n\t\t}\n\t\treturn Auth.currentUserCredentials();\n\t}\n\n\tpublic refreshFederatedToken(federatedInfo) {\n\t\tlogger.debug('Getting federated credentials');\n\t\tconst { provider, user, token, identity_id } = federatedInfo;\n\t\tlet { expires_at } = federatedInfo;\n\n\t\t// Make sure expires_at is in millis\n\t\texpires_at =\n\t\t\tnew Date(expires_at).getFullYear() === 1970\n\t\t\t\t? expires_at * 1000\n\t\t\t\t: expires_at;\n\n\t\tconst that = this;\n\t\tlogger.debug('checking if federated jwt token expired');\n\t\tif (expires_at > new Date().getTime()) {\n\t\t\t// if not expired\n\t\t\tlogger.debug('token not expired');\n\t\t\treturn this._setCredentialsFromFederation({\n\t\t\t\tprovider,\n\t\t\t\ttoken,\n\t\t\t\tuser,\n\t\t\t\tidentity_id,\n\t\t\t\texpires_at,\n\t\t\t});\n\t\t} else {\n\t\t\t// if refresh handler exists\n\t\t\tif (\n\t\t\t\tthat._refreshHandlers[provider] &&\n\t\t\t\ttypeof that._refreshHandlers[provider] === 'function'\n\t\t\t) {\n\t\t\t\tlogger.debug('getting refreshed jwt token from federation provider');\n\t\t\t\treturn this._providerRefreshWithRetry({\n\t\t\t\t\trefreshHandler: that._refreshHandlers[provider],\n\t\t\t\t\tprovider,\n\t\t\t\t\tuser,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tlogger.debug('no refresh handler for provider:', provider);\n\t\t\t\tthis.clear();\n\t\t\t\treturn Promise.reject('no refresh handler for provider');\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _providerRefreshWithRetry({ refreshHandler, provider, user }) {\n\t\tconst MAX_DELAY_MS = 10 * 1000;\n\t\t// refreshHandler will retry network errors, otherwise it will\n\t\t// return NonRetryableError to break out of jitteredExponentialRetry\n\t\treturn jitteredExponentialRetry<any>(refreshHandler, [], MAX_DELAY_MS)\n\t\t\t.then(data => {\n\t\t\t\tlogger.debug('refresh federated token sucessfully', data);\n\t\t\t\treturn this._setCredentialsFromFederation({\n\t\t\t\t\tprovider,\n\t\t\t\t\ttoken: data.token,\n\t\t\t\t\tuser,\n\t\t\t\t\tidentity_id: data.identity_id,\n\t\t\t\t\texpires_at: data.expires_at,\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(e => {\n\t\t\t\tconst isNetworkError =\n\t\t\t\t\ttypeof e === 'string' &&\n\t\t\t\t\te.toLowerCase().lastIndexOf('network error', e.length) === 0;\n\n\t\t\t\tif (!isNetworkError) {\n\t\t\t\t\tthis.clear();\n\t\t\t\t}\n\n\t\t\t\tlogger.debug('refresh federated token failed', e);\n\t\t\t\treturn Promise.reject('refreshing federation token failed: ' + e);\n\t\t\t});\n\t}\n\n\tprivate _isExpired(credentials): boolean {\n\t\tif (!credentials) {\n\t\t\tlogger.debug('no credentials for expiration check');\n\t\t\treturn true;\n\t\t}\n\t\tlogger.debug('are these credentials expired?', credentials);\n\t\tconst ts = Date.now();\n\n\t\t/* returns date object.\n\t\t\thttps://github.com/aws/aws-sdk-js-v3/blob/v1.0.0-beta.1/packages/types/src/credentials.ts#L26\n\t\t*/\n\t\tconst { expiration } = credentials;\n\t\treturn expiration.getTime() <= ts;\n\t}\n\n\tprivate _isPastTTL(): boolean {\n\t\treturn this._nextCredentialsRefresh <= Date.now();\n\t}\n\n\tprivate async _setCredentialsForGuest() {\n\t\tlogger.debug('setting credentials for guest');\n\t\tconst { identityPoolId, region, mandatorySignIn } = this._config;\n\t\tif (mandatorySignIn) {\n\t\t\treturn Promise.reject(\n\t\t\t\t'cannot get guest credentials when mandatory signin enabled'\n\t\t\t);\n\t\t}\n\n\t\tif (!identityPoolId) {\n\t\t\tlogger.debug(\n\t\t\t\t'No Cognito Identity pool provided for unauthenticated access'\n\t\t\t);\n\t\t\treturn Promise.reject(\n\t\t\t\t'No Cognito Identity pool provided for unauthenticated access'\n\t\t\t);\n\t\t}\n\n\t\tif (!region) {\n\t\t\tlogger.debug('region is not configured for getting the credentials');\n\t\t\treturn Promise.reject(\n\t\t\t\t'region is not configured for getting the credentials'\n\t\t\t);\n\t\t}\n\n\t\tconst identityId = (this._identityId = await this._getGuestIdentityId());\n\n\t\tconst cognitoClient = createCognitoIdentityClient({\n\t\t\tregion,\n\t\t});\n\n\t\tlet credentials = undefined;\n\t\tif (identityId) {\n\t\t\tconst cognitoIdentityParams: FromCognitoIdentityParameters = {\n\t\t\t\tidentityId,\n\t\t\t\tclient: cognitoClient,\n\t\t\t};\n\t\t\tcredentials = fromCognitoIdentity(cognitoIdentityParams)();\n\t\t} else {\n\t\t\t/*\n\t\t\tRetreiving identityId with GetIdCommand to mimic the behavior in the following code in aws-sdk-v3:\n\t\t\thttps://git.io/JeDxU\n\n\t\t\tNote: Retreive identityId from CredentialsProvider once aws-sdk-js v3 supports this.\n\t\t\t*/\n\t\t\tconst credentialsProvider: CredentialProvider = async () => {\n\t\t\t\tconst { IdentityId } = await cognitoClient.send(\n\t\t\t\t\tnew GetIdCommand({\n\t\t\t\t\t\tIdentityPoolId: identityPoolId,\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t\tthis._identityId = IdentityId;\n\t\t\t\tconst cognitoIdentityParams: FromCognitoIdentityParameters = {\n\t\t\t\t\tclient: cognitoClient,\n\t\t\t\t\tidentityId: IdentityId,\n\t\t\t\t};\n\n\t\t\t\tconst credentialsFromCognitoIdentity = fromCognitoIdentity(\n\t\t\t\t\tcognitoIdentityParams\n\t\t\t\t);\n\n\t\t\t\treturn credentialsFromCognitoIdentity();\n\t\t\t};\n\n\t\t\tcredentials = credentialsProvider().catch(async err => {\n\t\t\t\tthrow err;\n\t\t\t});\n\t\t}\n\n\t\treturn this._loadCredentials(credentials, 'guest', false, null)\n\t\t\t.then(res => {\n\t\t\t\treturn res;\n\t\t\t})\n\t\t\t.catch(async e => {\n\t\t\t\t// If identity id is deleted in the console, we make one attempt to recreate it\n\t\t\t\t// and remove existing id from cache.\n\t\t\t\tif (\n\t\t\t\t\te.name === 'ResourceNotFoundException' &&\n\t\t\t\t\te.message === `Identity '${identityId}' not found.`\n\t\t\t\t) {\n\t\t\t\t\tlogger.debug('Failed to load guest credentials');\n\t\t\t\t\tawait this._removeGuestIdentityId();\n\n\t\t\t\t\tconst credentialsProvider: CredentialProvider = async () => {\n\t\t\t\t\t\tconst { IdentityId } = await cognitoClient.send(\n\t\t\t\t\t\t\tnew GetIdCommand({\n\t\t\t\t\t\t\t\tIdentityPoolId: identityPoolId,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthis._identityId = IdentityId;\n\t\t\t\t\t\tconst cognitoIdentityParams: FromCognitoIdentityParameters = {\n\t\t\t\t\t\t\tclient: cognitoClient,\n\t\t\t\t\t\t\tidentityId: IdentityId,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tconst credentialsFromCognitoIdentity = fromCognitoIdentity(\n\t\t\t\t\t\t\tcognitoIdentityParams\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\treturn credentialsFromCognitoIdentity();\n\t\t\t\t\t};\n\n\t\t\t\t\tcredentials = credentialsProvider().catch(async err => {\n\t\t\t\t\t\tthrow err;\n\t\t\t\t\t});\n\n\t\t\t\t\treturn this._loadCredentials(credentials, 'guest', false, null);\n\t\t\t\t} else {\n\t\t\t\t\treturn e;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate _setCredentialsFromFederation(params) {\n\t\tconst { provider, token, identity_id } = params;\n\t\tconst domains = {\n\t\t\tgoogle: 'accounts.google.com',\n\t\t\tfacebook: 'graph.facebook.com',\n\t\t\tamazon: 'www.amazon.com',\n\t\t\tdeveloper: 'cognito-identity.amazonaws.com',\n\t\t};\n\n\t\t// Use custom provider url instead of the predefined ones\n\t\tconst domain = domains[provider] || provider;\n\t\tif (!domain) {\n\t\t\treturn Promise.reject('You must specify a federated provider');\n\t\t}\n\n\t\tconst logins = {};\n\t\tlogins[domain] = token;\n\n\t\tconst { identityPoolId, region } = this._config;\n\t\tif (!identityPoolId) {\n\t\t\tlogger.debug('No Cognito Federated Identity pool provided');\n\t\t\treturn Promise.reject('No Cognito Federated Identity pool provided');\n\t\t}\n\t\tif (!region) {\n\t\t\tlogger.debug('region is not configured for getting the credentials');\n\t\t\treturn Promise.reject(\n\t\t\t\t'region is not configured for getting the credentials'\n\t\t\t);\n\t\t}\n\n\t\tconst cognitoClient = createCognitoIdentityClient({\n\t\t\tregion,\n\t\t});\n\n\t\tlet credentials = undefined;\n\t\tif (identity_id) {\n\t\t\tconst cognitoIdentityParams: FromCognitoIdentityParameters = {\n\t\t\t\tidentityId: identity_id,\n\t\t\t\tlogins,\n\t\t\t\tclient: cognitoClient,\n\t\t\t};\n\t\t\tcredentials = fromCognitoIdentity(cognitoIdentityParams)();\n\t\t} else {\n\t\t\tconst cognitoIdentityParams: FromCognitoIdentityPoolParameters = {\n\t\t\t\tlogins,\n\t\t\t\tidentityPoolId,\n\t\t\t\tclient: cognitoClient,\n\t\t\t};\n\t\t\tcredentials = fromCognitoIdentityPool(cognitoIdentityParams)();\n\t\t}\n\t\treturn this._loadCredentials(credentials, 'federated', true, params);\n\t}\n\n\tprivate _setCredentialsFromSession(session): Promise<ICredentials> {\n\t\tlogger.debug('set credentials from session');\n\t\tconst idToken = session.getIdToken().getJwtToken();\n\t\tconst { region, userPoolId, identityPoolId } = this._config;\n\t\tif (!identityPoolId) {\n\t\t\tlogger.debug('No Cognito Federated Identity pool provided');\n\t\t\treturn Promise.reject('No Cognito Federated Identity pool provided');\n\t\t}\n\t\tif (!region) {\n\t\t\tlogger.debug('region is not configured for getting the credentials');\n\t\t\treturn Promise.reject(\n\t\t\t\t'region is not configured for getting the credentials'\n\t\t\t);\n\t\t}\n\t\tconst key = 'cognito-idp.' + region + '.amazonaws.com/' + userPoolId;\n\t\tconst logins = {};\n\t\tlogins[key] = idToken;\n\n\t\tconst cognitoClient = createCognitoIdentityClient({\n\t\t\tregion,\n\t\t});\n\n\t\t/* \n\t\t\tRetreiving identityId with GetIdCommand to mimic the behavior in the following code in aws-sdk-v3:\n\t\t\thttps://git.io/JeDxU\n\n\t\t\tNote: Retreive identityId from CredentialsProvider once aws-sdk-js v3 supports this.\n\t\t*/\n\t\tconst credentialsProvider: CredentialProvider = async () => {\n\t\t\t// try to fetch the local stored guest identity, if found, we will associate it with the logins\n\t\t\tconst guestIdentityId = await this._getGuestIdentityId();\n\n\t\t\tlet generatedOrRetrievedIdentityId;\n\t\t\tif (!guestIdentityId) {\n\t\t\t\t// for a first-time user, this will return a brand new identity\n\t\t\t\t// for a returning user, this will retrieve the previous identity assocaited with the logins\n\t\t\t\tconst { IdentityId } = await cognitoClient.send(\n\t\t\t\t\tnew GetIdCommand({\n\t\t\t\t\t\tIdentityPoolId: identityPoolId,\n\t\t\t\t\t\tLogins: logins,\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t\tgeneratedOrRetrievedIdentityId = IdentityId;\n\t\t\t}\n\n\t\t\tconst {\n\t\t\t\tCredentials: { AccessKeyId, Expiration, SecretKey, SessionToken },\n\t\t\t\t// single source of truth for the primary identity associated with the logins\n\t\t\t\t// only if a guest identity is used for a first-time user, that guest identity will become its primary identity\n\t\t\t\tIdentityId: primaryIdentityId,\n\t\t\t} = await cognitoClient.send(\n\t\t\t\tnew GetCredentialsForIdentityCommand({\n\t\t\t\t\tIdentityId: guestIdentityId || generatedOrRetrievedIdentityId,\n\t\t\t\t\tLogins: logins,\n\t\t\t\t})\n\t\t\t);\n\n\t\t\tthis._identityId = primaryIdentityId;\n\t\t\tif (guestIdentityId) {\n\t\t\t\t// if guestIdentity is found and used by GetCredentialsForIdentity\n\t\t\t\t// it will be linked to the logins provided, and disqualified as an unauth identity\n\t\t\t\tlogger.debug(\n\t\t\t\t\t`The guest identity ${guestIdentityId} has been successfully linked to the logins`\n\t\t\t\t);\n\t\t\t\tif (guestIdentityId === primaryIdentityId) {\n\t\t\t\t\tlogger.debug(\n\t\t\t\t\t\t`The guest identity ${guestIdentityId} has become the primary identity`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\t// remove it from local storage to avoid being used as a guest Identity by _setCredentialsForGuest\n\t\t\t\tawait this._removeGuestIdentityId();\n\t\t\t}\n\n\t\t\t// https://github.com/aws/aws-sdk-js-v3/blob/main/packages/credential-provider-cognito-identity/src/fromCognitoIdentity.ts#L40\n\t\t\treturn {\n\t\t\t\taccessKeyId: AccessKeyId,\n\t\t\t\tsecretAccessKey: SecretKey,\n\t\t\t\tsessionToken: SessionToken,\n\t\t\t\texpiration: Expiration,\n\t\t\t\tidentityId: primaryIdentityId,\n\t\t\t};\n\t\t};\n\n\t\tconst credentials = credentialsProvider().catch(async err => {\n\t\t\tthrow err;\n\t\t});\n\n\t\treturn this._loadCredentials(credentials, 'userPool', true, null);\n\t}\n\n\tprivate _loadCredentials(\n\t\tcredentials,\n\t\tsource,\n\t\tauthenticated,\n\t\tinfo\n\t): Promise<ICredentials> {\n\t\tconst that = this;\n\t\treturn new Promise((res, rej) => {\n\t\t\tcredentials\n\t\t\t\t.then(async credentials => {\n\t\t\t\t\tlogger.debug('Load credentials successfully', credentials);\n\t\t\t\t\tif (this._identityId && !credentials.identityId) {\n\t\t\t\t\t\tcredentials['identityId'] = this._identityId;\n\t\t\t\t\t}\n\n\t\t\t\t\tthat._credentials = credentials;\n\t\t\t\t\tthat._credentials.authenticated = authenticated;\n\t\t\t\t\tthat._credentials_source = source;\n\t\t\t\t\tthat._nextCredentialsRefresh = new Date().getTime() + CREDENTIALS_TTL;\n\t\t\t\t\tif (source === 'federated') {\n\t\t\t\t\t\tconst user = Object.assign(\n\t\t\t\t\t\t\t{ id: this._credentials.identityId },\n\t\t\t\t\t\t\tinfo.user\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst { provider, token, expires_at, identity_id } = info;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tthis._storage.setItem(\n\t\t\t\t\t\t\t\t'aws-amplify-federatedInfo',\n\t\t\t\t\t\t\t\tJSON.stringify({\n\t\t\t\t\t\t\t\t\tprovider,\n\t\t\t\t\t\t\t\t\ttoken,\n\t\t\t\t\t\t\t\t\tuser,\n\t\t\t\t\t\t\t\t\texpires_at,\n\t\t\t\t\t\t\t\t\tidentity_id,\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tlogger.debug('Failed to put federated info into auth storage', e);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (source === 'guest') {\n\t\t\t\t\t\tawait this._setGuestIdentityId(credentials.identityId);\n\t\t\t\t\t}\n\t\t\t\t\tres(that._credentials);\n\t\t\t\t\treturn;\n\t\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tlogger.debug('Failed to load credentials', credentials);\n\t\t\t\t\t\tlogger.debug('Error loading credentials', err);\n\t\t\t\t\t\trej(err);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t});\n\t}\n\n\tpublic set(params, source): Promise<ICredentials> {\n\t\tif (source === 'session') {\n\t\t\treturn this._setCredentialsFromSession(params);\n\t\t} else if (source === 'federation') {\n\t\t\treturn this._setCredentialsFromFederation(params);\n\t\t} else if (source === 'guest') {\n\t\t\treturn this._setCredentialsForGuest();\n\t\t} else {\n\t\t\tlogger.debug('no source specified for setting credentials');\n\t\t\treturn Promise.reject('invalid source');\n\t\t}\n\t}\n\n\tpublic async clear() {\n\t\tthis._credentials = null;\n\t\tthis._credentials_source = null;\n\t\tlogger.debug('removing aws-amplify-federatedInfo from storage');\n\t\tthis._storage.removeItem('aws-amplify-federatedInfo');\n\t}\n\n\t/* operations on local stored guest identity */\n\tprivate async _getGuestIdentityId(): Promise<string> {\n\t\tconst { identityPoolId } = this._config;\n\t\ttry {\n\t\t\tawait this._storageSync;\n\t\t\treturn this._storage.getItem(\n\t\t\t\tthis._getCognitoIdentityIdStorageKey(identityPoolId)\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tlogger.debug('Failed to get the cached guest identityId', e);\n\t\t}\n\t}\n\n\tprivate async _setGuestIdentityId(identityId: string) {\n\t\tconst { identityPoolId } = this._config;\n\t\ttry {\n\t\t\tawait this._storageSync;\n\t\t\tthis._storage.setItem(\n\t\t\t\tthis._getCognitoIdentityIdStorageKey(identityPoolId),\n\t\t\t\tidentityId\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tlogger.debug('Failed to cache guest identityId', e);\n\t\t}\n\t}\n\n\tprivate async _removeGuestIdentityId() {\n\t\tconst { identityPoolId } = this._config;\n\t\tlogger.debug(\n\t\t\t`removing ${this._getCognitoIdentityIdStorageKey(\n\t\t\t\tidentityPoolId\n\t\t\t)} from storage`\n\t\t);\n\t\tthis._storage.removeItem(\n\t\t\tthis._getCognitoIdentityIdStorageKey(identityPoolId)\n\t\t);\n\t}\n\n\t/**\n\t * Compact version of credentials\n\t * @param {Object} credentials\n\t * @return {Object} - Credentials\n\t */\n\tpublic shear(credentials) {\n\t\treturn {\n\t\t\taccessKeyId: credentials.accessKeyId,\n\t\t\tsessionToken: credentials.sessionToken,\n\t\t\tsecretAccessKey: credentials.secretAccessKey,\n\t\t\tidentityId: credentials.identityId,\n\t\t\tauthenticated: credentials.authenticated,\n\t\t};\n\t}\n}\n\nexport const Credentials = new CredentialsClass(null);\n\nAmplify.register(Credentials);\n\n/**\n * @deprecated use named import\n */\nexport default Credentials;\n", "/**\n * Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { ConsoleLogger as Logger } from '../Logger';\nimport { browserOrNode } from '../JS';\nimport { Amplify } from '../Amplify';\n/**\n * Provides a means to registering a service worker in the browser\n * and communicating with it via postMessage events.\n * https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/\n *\n * postMessage events are currently not supported in all browsers. See:\n * https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API\n *\n * At the minmum this class will register the service worker and listen\n * and attempt to dispatch messages on state change and record analytics\n * events based on the service worker lifecycle.\n */\nexport class ServiceWorkerClass {\n\t// The active service worker will be set once it is registered\n\tprivate _serviceWorker: ServiceWorker;\n\n\t// The service worker registration object\n\tprivate _registration: ServiceWorkerRegistration;\n\n\t// The application server public key for Push\n\t// https://web-push-codelab.glitch.me/\n\tprivate _publicKey: string;\n\n\t// push subscription\n\tprivate _subscription: PushSubscription;\n\n\t// The AWS Amplify logger\n\tprivate _logger: Logger = new Logger('ServiceWorker');\n\n\tconstructor() { }\n\n\t/**\n\t * Get the currently active service worker\n\t */\n\tget serviceWorker(): ServiceWorker {\n\t\treturn this._serviceWorker;\n\t}\n\n\t/**\n\t * Register the service-worker.js file in the browser\n\t * Make sure the service-worker.js is part of the build\n\t * for example with Angular, modify the angular-cli.json file\n\t * and add to \"assets\" array \"service-worker.js\"\n\t * @param {string} - (optional) Service worker file. Defaults to \"/service-worker.js\"\n\t * @param {string} - (optional) The service worker scope. Defaults to \"/\"\n\t *  - API Doc: https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerContainer/register\n\t * @returns {Promise}\n\t *\t- resolve(ServiceWorkerRegistration)\n\t *\t- reject(Error)\n\t **/\n\tregister(filePath: string = '/service-worker.js', scope: string = '/') {\n\t\tthis._logger.debug(`registering ${filePath}`);\n\t\tthis._logger.debug(`registering service worker with scope ${scope}`);\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (navigator && 'serviceWorker' in navigator) {\n\t\t\t\tnavigator.serviceWorker\n\t\t\t\t\t.register(filePath, {\n\t\t\t\t\t\tscope,\n\t\t\t\t\t})\n\t\t\t\t\t.then(registration => {\n\t\t\t\t\t\tif (registration.installing) {\n\t\t\t\t\t\t\tthis._serviceWorker = registration.installing;\n\t\t\t\t\t\t} else if (registration.waiting) {\n\t\t\t\t\t\t\tthis._serviceWorker = registration.waiting;\n\t\t\t\t\t\t} else if (registration.active) {\n\t\t\t\t\t\t\tthis._serviceWorker = registration.active;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._registration = registration;\n\t\t\t\t\t\tthis._setupListeners();\n\t\t\t\t\t\tthis._logger.debug(\n\t\t\t\t\t\t\t`Service Worker Registration Success: ${registration}`\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn resolve(registration);\n\t\t\t\t\t})\n\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\tthis._logger.debug(`Service Worker Registration Failed ${error}`);\n\t\t\t\t\t\treturn reject(error);\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn reject(new Error('Service Worker not available'));\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Enable web push notifications. If not subscribed, a new subscription will\n\t * be created and registered.\n\t * \tTest Push Server: https://web-push-codelab.glitch.me/\n\t * \tPush Server Libraries: https://github.com/web-push-libs/\n\t * \tAPI Doc: https://developers.google.com/web/fundamentals/codelabs/push-notifications/\n\t * @param publicKey\n\t * @returns {Promise}\n\t * \t- resolve(PushSubscription)\n\t *  - reject(Error)\n\t */\n\tenablePush(publicKey: string) {\n\t\tif (!this._registration) throw new Error('Service Worker not registered');\n\t\tthis._publicKey = publicKey;\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (browserOrNode().isBrowser) {\n\t\t\t\tthis._registration.pushManager.getSubscription().then(subscription => {\n\t\t\t\t\tif (subscription) {\n\t\t\t\t\t\tthis._subscription = subscription;\n\t\t\t\t\t\tthis._logger.debug(\n\t\t\t\t\t\t\t`User is subscribed to push: ${JSON.stringify(subscription)}`\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresolve(subscription);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._logger.debug(`User is NOT subscribed to push`);\n\t\t\t\t\t\treturn this._registration.pushManager\n\t\t\t\t\t\t\t.subscribe({\n\t\t\t\t\t\t\t\tuserVisibleOnly: true,\n\t\t\t\t\t\t\t\tapplicationServerKey: this._urlB64ToUint8Array(publicKey),\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.then(subscription => {\n\t\t\t\t\t\t\t\tthis._subscription = subscription;\n\t\t\t\t\t\t\t\tthis._logger.debug(\n\t\t\t\t\t\t\t\t\t`User subscribed: ${JSON.stringify(subscription)}`\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tresolve(subscription);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\t\t\tthis._logger.error(error);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn reject(new Error('Service Worker not available'));\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Convert a base64 encoded string to a Uint8 array for the push server key\n\t * @param base64String\n\t */\n\tprivate _urlB64ToUint8Array(base64String: string) {\n\t\tconst padding = '='.repeat((4 - (base64String.length % 4)) % 4);\n\t\tconst base64 = (base64String + padding)\n\t\t\t.replace(/\\-/g, '+')\n\t\t\t.replace(/_/g, '/');\n\n\t\tconst rawData = window.atob(base64);\n\t\tconst outputArray = new Uint8Array(rawData.length);\n\n\t\tfor (let i = 0; i < rawData.length; ++i) {\n\t\t\toutputArray[i] = rawData.charCodeAt(i);\n\t\t}\n\t\treturn outputArray;\n\t}\n\n\t/**\n\t * Send a message to the service worker. The service worker needs\n\t * to implement `self.addEventListener('message') to handle the\n\t * message. This ***currently*** does not work in Safari or IE.\n\t * @param {object | string} - An arbitrary JSON object or string message to send to the service worker\n\t *\t- see: https://developer.mozilla.org/en-US/docs/Web/API/Transferable\n\t * @returns {Promise}\n\t **/\n\tsend(message: object | string) {\n\t\tif (this._serviceWorker) {\n\t\t\tthis._serviceWorker.postMessage(\n\t\t\t\ttypeof message === 'object' ? JSON.stringify(message) : message\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Listen for service worker state change and message events\n\t * https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorker/state\n\t **/\n\t_setupListeners() {\n\t\tthis._serviceWorker.addEventListener('statechange', event => {\n\t\t\tconst currentState = this._serviceWorker.state;\n\t\t\tthis._logger.debug(`ServiceWorker statechange: ${currentState}`);\n\t\t\tif (Amplify.Analytics && typeof Amplify.Analytics.record === 'function') {\n\t\t\t\tAmplify.Analytics.record({\n\t\t\t\t\tname: 'ServiceWorker',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tstate: currentState,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\tthis._serviceWorker.addEventListener('message', event => {\n\t\t\tthis._logger.debug(`ServiceWorker message event: ${event}`);\n\t\t});\n\t}\n}\n\n/**\n * @deprecated use named import\n */\nexport default ServiceWorkerClass;\n", "var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nimport * as cookie from 'cookie';\r\nimport { hasDocumentCookie, parseCookies, readCookie } from './utils';\r\nvar Cookies = /** @class */ (function () {\r\n    function Cookies(cookies, options) {\r\n        var _this = this;\r\n        this.changeListeners = [];\r\n        this.HAS_DOCUMENT_COOKIE = false;\r\n        this.cookies = parseCookies(cookies, options);\r\n        new Promise(function () {\r\n            _this.HAS_DOCUMENT_COOKIE = hasDocumentCookie();\r\n        }).catch(function () { });\r\n    }\r\n    Cookies.prototype._updateBrowserValues = function (parseOptions) {\r\n        if (!this.HAS_DOCUMENT_COOKIE) {\r\n            return;\r\n        }\r\n        this.cookies = cookie.parse(document.cookie, parseOptions);\r\n    };\r\n    Cookies.prototype._emitChange = function (params) {\r\n        for (var i = 0; i < this.changeListeners.length; ++i) {\r\n            this.changeListeners[i](params);\r\n        }\r\n    };\r\n    Cookies.prototype.get = function (name, options, parseOptions) {\r\n        if (options === void 0) { options = {}; }\r\n        this._updateBrowserValues(parseOptions);\r\n        return readCookie(this.cookies[name], options);\r\n    };\r\n    Cookies.prototype.getAll = function (options, parseOptions) {\r\n        if (options === void 0) { options = {}; }\r\n        this._updateBrowserValues(parseOptions);\r\n        var result = {};\r\n        for (var name_1 in this.cookies) {\r\n            result[name_1] = readCookie(this.cookies[name_1], options);\r\n        }\r\n        return result;\r\n    };\r\n    Cookies.prototype.set = function (name, value, options) {\r\n        var _a;\r\n        if (typeof value === 'object') {\r\n            value = JSON.stringify(value);\r\n        }\r\n        this.cookies = __assign(__assign({}, this.cookies), (_a = {}, _a[name] = value, _a));\r\n        if (this.HAS_DOCUMENT_COOKIE) {\r\n            document.cookie = cookie.serialize(name, value, options);\r\n        }\r\n        this._emitChange({ name: name, value: value, options: options });\r\n    };\r\n    Cookies.prototype.remove = function (name, options) {\r\n        var finalOptions = (options = __assign(__assign({}, options), { expires: new Date(1970, 1, 1, 0, 0, 1), maxAge: 0 }));\r\n        this.cookies = __assign({}, this.cookies);\r\n        delete this.cookies[name];\r\n        if (this.HAS_DOCUMENT_COOKIE) {\r\n            document.cookie = cookie.serialize(name, '', finalOptions);\r\n        }\r\n        this._emitChange({ name: name, value: undefined, options: options });\r\n    };\r\n    Cookies.prototype.addChangeListener = function (callback) {\r\n        this.changeListeners.push(callback);\r\n    };\r\n    Cookies.prototype.removeChangeListener = function (callback) {\r\n        var idx = this.changeListeners.indexOf(callback);\r\n        if (idx >= 0) {\r\n            this.changeListeners.splice(idx, 1);\r\n        }\r\n    };\r\n    return Cookies;\r\n}());\r\nexport default Cookies;\r\n", "import * as cookie from 'cookie';\r\nexport function hasDocumentCookie() {\r\n    // Can we get/set cookies on document.cookie?\r\n    return typeof document === 'object' && typeof document.cookie === 'string';\r\n}\r\nexport function cleanCookies() {\r\n    document.cookie.split(';').forEach(function (c) {\r\n        document.cookie = c\r\n            .replace(/^ +/, '')\r\n            .replace(/=.*/, '=;expires=' + new Date().toUTCString() + ';path=/');\r\n    });\r\n}\r\nexport function parseCookies(cookies, options) {\r\n    if (typeof cookies === 'string') {\r\n        return cookie.parse(cookies, options);\r\n    }\r\n    else if (typeof cookies === 'object' && cookies !== null) {\r\n        return cookies;\r\n    }\r\n    else {\r\n        return {};\r\n    }\r\n}\r\nexport function isParsingCookie(value, doNotParse) {\r\n    if (typeof doNotParse === 'undefined') {\r\n        // We guess if the cookie start with { or [, it has been serialized\r\n        doNotParse =\r\n            !value || (value[0] !== '{' && value[0] !== '[' && value[0] !== '\"');\r\n    }\r\n    return !doNotParse;\r\n}\r\nexport function readCookie(value, options) {\r\n    if (options === void 0) { options = {}; }\r\n    var cleanValue = cleanupCookieValue(value);\r\n    if (isParsingCookie(cleanValue, options.doNotParse)) {\r\n        try {\r\n            return JSON.parse(cleanValue);\r\n        }\r\n        catch (e) {\r\n            // At least we tried\r\n        }\r\n    }\r\n    // Ignore clean value if we failed the deserialization\r\n    // It is not relevant anymore to trim those values\r\n    return value;\r\n}\r\nfunction cleanupCookieValue(value) {\r\n    // express prepend j: before serializing a cookie\r\n    if (value && value[0] === 'j' && value[1] === ':') {\r\n        return value.substr(2);\r\n    }\r\n    return value;\r\n}\r\n", "import Cookies from './Cookies';\r\nexport default Cookies;\r\n", "import Cookies from 'universal-cookie';\nimport { browserOrNode } from '../JS';\n\ntype Store = Record<string, string>;\n\nconst { isBrowser } = browserOrNode();\n\n// Avoid using @types/next because @aws-amplify/ui-angular's version of TypeScript is too old to support it\ntype Context = { req?: any };\n\nexport class UniversalStorage implements Storage {\n\tcookies = new Cookies();\n\tstore: Store = isBrowser ? window.localStorage : Object.create(null);\n\n\tconstructor(context: Context = {}) {\n\t\tthis.cookies = context.req\n\t\t\t? new Cookies(context.req.headers.cookie)\n\t\t\t: new Cookies();\n\n\t\tObject.assign(this.store, this.cookies.getAll());\n\t}\n\n\tget length() {\n\t\treturn Object.entries(this.store).length;\n\t}\n\n\tclear() {\n\t\tArray.from(new Array(this.length))\n\t\t\t.map((_, i) => this.key(i))\n\t\t\t.forEach(key => this.removeItem(key));\n\t}\n\n\tgetItem(key: keyof Store) {\n\t\treturn this.getLocalItem(key);\n\t}\n\n\tprotected getLocalItem(key: keyof Store) {\n\t\treturn Object.prototype.hasOwnProperty.call(this.store, key)\n\t\t\t? this.store[key]\n\t\t\t: null;\n\t}\n\n\tprotected getUniversalItem(key: keyof Store) {\n\t\treturn this.cookies.get(key);\n\t}\n\n\tkey(index: number) {\n\t\treturn Object.keys(this.store)[index];\n\t}\n\n\tremoveItem(key: string) {\n\t\tthis.removeLocalItem(key);\n\t\tthis.removeUniversalItem(key);\n\t}\n\n\tprotected removeLocalItem(key: keyof Store) {\n\t\tdelete this.store[key];\n\t}\n\n\tprotected removeUniversalItem(key: keyof Store) {\n\t\tthis.cookies.remove(key, {\n\t\t\tpath: '/',\n\t\t});\n\t}\n\n\tsetItem(key: keyof Store, value: string) {\n\t\tthis.setLocalItem(key, value);\n\n\t\t// keys take the shape:\n\t\t//  1. `${ProviderPrefix}.${userPoolClientId}.${username}.${tokenType}\n\t\t//  2. `${ProviderPrefix}.${userPoolClientId}.LastAuthUser\n\t\tconst tokenType = key.split('.').pop();\n\n\t\tswitch (tokenType) {\n\t\t\t// LastAuthUser is needed for computing other key names\n\t\t\tcase 'LastAuthUser':\n\n\t\t\t// accessToken is required for CognitoUserSession\n\t\t\tcase 'accessToken':\n\n\t\t\t// refreshToken originates on the client, but SSR pages won't fail when this expires\n\t\t\t// Note: the new `accessToken` will also be refreshed on the client (since Amplify doesn't set server-side cookies)\n\t\t\tcase 'refreshToken':\n\n\t\t\t// Required for CognitoUserSession\n\t\t\tcase 'idToken':\n\t\t\t\tisBrowser\n\t\t\t\t\t? this.setUniversalItem(key, value)\n\t\t\t\t\t: this.setLocalItem(key, value);\n\n\t\t\t// userData is used when `Auth.currentAuthenticatedUser({ bypassCache: false })`.\n\t\t\t// Can be persisted to speed up calls to `Auth.currentAuthenticatedUser()`\n\t\t\t// case 'userData':\n\n\t\t\t// Ignoring clockDrift on the server for now, but needs testing\n\t\t\t// case 'clockDrift':\n\t\t}\n\t}\n\n\tprotected setLocalItem(key: keyof Store, value: string) {\n\t\tthis.store[key] = value;\n\t}\n\n\tprotected setUniversalItem(key: keyof Store, value: string) {\n\t\tthis.cookies.set(key, value, {\n\t\t\tpath: '/',\n\t\t\t// `httpOnly` cannot be set via JavaScript: https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#JavaScript_access_using_Document.cookie\n\t\t\tsameSite: true,\n\t\t\t// Allow unsecure requests to http://localhost:3000/ when in development.\n\t\t\tsecure: window.location.hostname === 'localhost' ? false : true,\n\t\t});\n\t}\n}\n", "/*\n * Copyright 2018-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\n/**\n * This Symbol is used to reference an internal-only PubSub provider that\n * is used for AppSync/GraphQL subscriptions in the API category.\n */\nconst hasSymbol =\n\ttypeof Symbol !== 'undefined' && typeof Symbol.for === 'function';\n\n/**\n * @deprecated Unused, all usecases have migrated to INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER\n */\nexport const INTERNAL_AWS_APPSYNC_PUBSUB_PROVIDER = hasSymbol\n\t? Symbol.for('INTERNAL_AWS_APPSYNC_PUBSUB_PROVIDER')\n\t: '@@INTERNAL_AWS_APPSYNC_PUBSUB_PROVIDER';\n\nexport const INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER = hasSymbol\n\t? Symbol.for('INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER')\n\t: '@@INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER';\n\nexport const USER_AGENT_HEADER = 'x-amz-user-agent';\n", "/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nimport { Amplify } from './Amplify';\nimport { Platform } from './Platform';\n\nexport { AmplifyClass } from './Amplify';\nexport { ClientDevice } from './ClientDevice';\nexport { ConsoleLogger, ConsoleLogger as Logger } from './Logger';\nexport * from './Errors';\nexport { Hub, HubCapsule, HubCallback, HubPayload } from './Hub';\nexport { I18n } from './I18n';\nexport * from './JS';\nexport { Signer } from './Signer';\nexport * from './Parser';\nexport * from './Providers';\nexport { FacebookOAuth, GoogleOAuth } from './OAuthHelper';\nexport * from './RNComponents';\nexport { Credentials, CredentialsClass } from './Credentials';\nexport { ServiceWorker } from './ServiceWorker';\nexport { ICredentials } from './types';\nexport { StorageHelper, MemoryStorage } from './StorageHelper';\nexport { UniversalStorage } from './UniversalStorage';\nexport { Platform, getAmplifyUserAgent } from './Platform';\nexport * from './constants';\n\nexport const Constants = {\n\tuserAgent: Platform.userAgent,\n};\n\nexport * from './constants';\nexport * from './Util';\n\nexport { Amplify };\n/**\n * @deprecated use named import\n */\nexport default Amplify;\n"],
  "mappings": "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",
  "names": ["__extends", "__assign", "__rest", "__awaiter", "__generator", "__values", "__read", "__spread", "__await", "__asyncGenerator", "__asyncValues", "exports", "extendStatics", "v", "RawSha256", "fromUtf8", "toUtf8", "fromUtf8", "toUtf8", "Sha256", "Empty", "undefined", "doEval", "stringToPath", "getBaseIntrinsic", "applyBind", "compactQueue", "arrayToObject", "merge", "encode", "format", "compact", "isRegExp", "isBuffer", "combine", "maybeMap", "isNonNullishPrimitive", "stringify", "format", "value", "normalizeStringifyOptions", "normalizeParseOptions", "parse", "parseQueryString", "hash", "hasSymbol", "Observable", "Subscription", "SubscriptionObserver", "value", "fromUtf8", "toUtf8", "init_pureJs", "fromUtf8", "toUtf8", "init_whatwgEncodingApi", "es_exports", "fromUtf8", "toUtf8", "init_es", "init_pureJs", "init_whatwgEncodingApi", "Sha256", "fromUtf8", "Sha256", "RawSha256", "Sha256", "window", "window", "Sha256", "i", "v4", "v4", "parse", "serialize", "decode", "LOG_TYPE", "ConsoleLogger", "AmplifyClass", "__read", "logger", "ClientDevice", "logger", "HubClass", "__spread", "__read", "logger", "I18n", "logger", "I18n", "I18n", "isBrowser", "JS", "logger", "NonRetryableError", "logger", "__spread", "_a", "Mutex", "zenObservable", "ReachabilityNavigator", "observer", "__values", "__read", "BackgroundProcessManager", "__awaiter", "_a", "__generator", "__values", "__extends", "BackgroundManagerNotOpenError", "BackgroundProcessManagerState", "logger", "hash", "jsSha256", "canonical_request", "signed_headers", "Signer", "__assign", "logger", "__assign", "Parser", "d", "b", "__extends", "__assign", "__awaiter", "__generator", "__read", "extendStatics", "d", "b", "__extends", "__assign", "__rest", "__awaiter", "__generator", "__values", "__read", "__spread", "__values", "v", "HttpResponse", "HttpRequest", "__assign", "__assign", "__spread", "__values", "FetchHttpHandler", "requestTimeout", "_b", "__values", "body", "abortError", "__awaiter", "__spread", "StandardRetryStrategy", "_a", "__assign", "version", "version", "version", "version", "Parser", "version", "__awaiter", "_a", "init_es", "__assign", "__values", "__read", "__assign", "fromUtf8", "toUtf8", "__assign", "__awaiter", "__assign", "__awaiter", "__assign", "__awaiter", "__awaiter", "logger", "__rest", "__awaiter", "__values", "hash", "__values", "key", "value", "__values", "serialized", "__values", "__values", "__rest", "__assign", "cloneQuery", "__spread", "__values", "__assign", "__values", "SignatureV4", "hash", "__awaiter", "__generator", "_a", "_b", "__read", "__assign", "__assign", "__assign", "__awaiter", "defaultUserAgent", "__spread", "__assign", "__read", "version", "__assign", "__spread", "entry", "__values", "Client", "Command", "__spread", "__extends", "LazyJsonString", "__extends", "CloudWatchLogsClient", "__assign", "AssociateKmsKeyRequest", "__assign", "InvalidParameterException", "OperationAbortedException", "ResourceNotFoundException", "ServiceUnavailableException", "CancelExportTaskRequest", "InvalidOperationException", "CreateExportTaskRequest", "CreateExportTaskResponse", "LimitExceededException", "ResourceAlreadyExistsException", "CreateLogGroupRequest", "CreateLogStreamRequest", "DataAlreadyAcceptedException", "DeleteDestinationRequest", "DeleteLogGroupRequest", "DeleteLogStreamRequest", "DeleteMetricFilterRequest", "DeleteQueryDefinitionRequest", "DeleteQueryDefinitionResponse", "DeleteResourcePolicyRequest", "DeleteRetentionPolicyRequest", "DeleteSubscriptionFilterRequest", "DescribeDestinationsRequest", "Destination", "DescribeDestinationsResponse", "ExportTaskStatusCode", "DescribeExportTasksRequest", "ExportTaskExecutionInfo", "ExportTaskStatus", "ExportTask", "DescribeExportTasksResponse", "DescribeLogGroupsRequest", "LogGroup", "DescribeLogGroupsResponse", "OrderBy", "DescribeLogStreamsRequest", "LogStream", "DescribeLogStreamsResponse", "DescribeMetricFiltersRequest", "MetricTransformation", "MetricFilter", "DescribeMetricFiltersResponse", "QueryStatus", "DescribeQueriesRequest", "QueryInfo", "DescribeQueriesResponse", "DescribeQueryDefinitionsRequest", "QueryDefinition", "DescribeQueryDefinitionsResponse", "DescribeResourcePoliciesRequest", "ResourcePolicy", "DescribeResourcePoliciesResponse", "DescribeSubscriptionFiltersRequest", "Distribution", "SubscriptionFilter", "DescribeSubscriptionFiltersResponse", "DisassociateKmsKeyRequest", "FilteredLogEvent", "FilterLogEventsRequest", "SearchedLogStream", "FilterLogEventsResponse", "GetLogEventsRequest", "OutputLogEvent", "GetLogEventsResponse", "GetLogGroupFieldsRequest", "LogGroupField", "GetLogGroupFieldsResponse", "GetLogRecordRequest", "GetLogRecordResponse", "GetQueryResultsRequest", "ResultField", "QueryStatistics", "GetQueryResultsResponse", "InputLogEvent", "InvalidSequenceTokenException", "ListTagsLogGroupRequest", "ListTagsLogGroupResponse", "PutDestinationRequest", "PutDestinationResponse", "PutDestinationPolicyRequest", "PutLogEventsRequest", "RejectedLogEventsInfo", "PutLogEventsResponse", "UnrecognizedClientException", "PutMetricFilterRequest", "PutQueryDefinitionRequest", "PutQueryDefinitionResponse", "PutResourcePolicyRequest", "PutResourcePolicyResponse", "PutRetentionPolicyRequest", "PutSubscriptionFilterRequest", "QueryCompileErrorLocation", "QueryCompileError", "MalformedQueryException", "StartQueryRequest", "StartQueryResponse", "StopQueryRequest", "StopQueryResponse", "TagLogGroupRequest", "TestMetricFilterRequest", "MetricFilterMatchRecord", "TestMetricFilterResponse", "UntagLogGroupRequest", "__awaiter", "__assign", "__read", "__awaiter", "__awaiter", "__assign", "__extends", "AssociateKmsKeyCommand", "logger", "__extends", "CancelExportTaskCommand", "logger", "__extends", "CreateExportTaskCommand", "logger", "__extends", "CreateLogGroupCommand", "logger", "__extends", "CreateLogStreamCommand", "logger", "__extends", "DeleteDestinationCommand", "logger", "__extends", "DeleteLogGroupCommand", "logger", "__extends", "DeleteLogStreamCommand", "logger", "__extends", "DeleteMetricFilterCommand", "logger", "__extends", "DeleteQueryDefinitionCommand", "logger", "__extends", "DeleteResourcePolicyCommand", "logger", "__extends", "DeleteRetentionPolicyCommand", "logger", "__extends", "DeleteSubscriptionFilterCommand", "logger", "__extends", "DescribeDestinationsCommand", "logger", "__extends", "DescribeExportTasksCommand", "logger", "__extends", "DescribeLogGroupsCommand", "logger", "__extends", "DescribeLogStreamsCommand", "logger", "__extends", "DescribeMetricFiltersCommand", "logger", "__extends", "DescribeQueriesCommand", "logger", "__extends", "DescribeQueryDefinitionsCommand", "logger", "__extends", "DescribeResourcePoliciesCommand", "logger", "__extends", "DescribeSubscriptionFiltersCommand", "logger", "__extends", "DisassociateKmsKeyCommand", "logger", "__extends", "FilterLogEventsCommand", "logger", "__extends", "GetLogEventsCommand", "logger", "__extends", "GetLogGroupFieldsCommand", "logger", "__extends", "GetLogRecordCommand", "logger", "__extends", "GetQueryResultsCommand", "logger", "__extends", "ListTagsLogGroupCommand", "logger", "__extends", "PutDestinationCommand", "logger", "__extends", "PutDestinationPolicyCommand", "logger", "__extends", "PutLogEventsCommand", "logger", "__extends", "PutMetricFilterCommand", "logger", "__extends", "PutQueryDefinitionCommand", "logger", "__extends", "PutResourcePolicyCommand", "logger", "__extends", "PutRetentionPolicyCommand", "logger", "__extends", "PutSubscriptionFilterCommand", "logger", "__extends", "StartQueryCommand", "logger", "__extends", "StopQueryCommand", "logger", "__extends", "TagLogGroupCommand", "logger", "__extends", "TestMetricFilterCommand", "logger", "__extends", "UntagLogGroupCommand", "logger", "__extends", "CloudWatchLogs", "logger", "AWSCloudWatchProvider", "__spread", "__awaiter", "logger", "GoogleOAuth", "logger", "waitForInit", "FacebookOAuth", "errorMessage", "GoogleOAuth", "FacebookOAuth", "MemoryStorage", "StorageHelper", "extendStatics", "d", "b", "__extends", "__assign", "__awaiter", "__generator", "__read", "import_sha256_browser", "init_es", "AWS_TEMPLATE", "AWS_CN_TEMPLATE", "AWS_ISO_TEMPLATE", "AWS_ISO_B_TEMPLATE", "AWS_US_GOV_TEMPLATE", "AWS_REGIONS", "AWS_CN_REGIONS", "AWS_ISO_REGIONS", "AWS_ISO_B_REGIONS", "AWS_US_GOV_REGIONS", "defaultRegionInfoProvider", "__assign", "ClientSharedValues", "defaultRegionInfoProvider", "ClientDefaultValues", "__assign", "ClientSharedValues", "package_default", "fromUtf8", "toUtf8", "__extends", "CognitoIdentityClient", "__assign", "ClientDefaultValues", "AmbiguousRoleResolutionType", "CognitoIdentityProvider", "__assign", "CreateIdentityPoolInput", "IdentityPool", "InternalErrorException", "InvalidParameterException", "LimitExceededException", "NotAuthorizedException", "ResourceConflictException", "TooManyRequestsException", "DeleteIdentitiesInput", "ErrorCode", "UnprocessedIdentityId", "DeleteIdentitiesResponse", "DeleteIdentityPoolInput", "ResourceNotFoundException", "DescribeIdentityInput", "IdentityDescription", "DescribeIdentityPoolInput", "ExternalServiceException", "GetCredentialsForIdentityInput", "Credentials", "GetCredentialsForIdentityResponse", "InvalidIdentityPoolConfigurationException", "GetIdInput", "GetIdResponse", "GetIdentityPoolRolesInput", "MappingRuleMatchType", "MappingRule", "RulesConfigurationType", "RoleMappingType", "RoleMapping", "GetIdentityPoolRolesResponse", "GetOpenIdTokenInput", "GetOpenIdTokenResponse", "DeveloperUserAlreadyRegisteredException", "GetOpenIdTokenForDeveloperIdentityInput", "GetOpenIdTokenForDeveloperIdentityResponse", "ListIdentitiesInput", "ListIdentitiesResponse", "ListIdentityPoolsInput", "IdentityPoolShortDescription", "ListIdentityPoolsResponse", "ListTagsForResourceInput", "ListTagsForResourceResponse", "LookupDeveloperIdentityInput", "LookupDeveloperIdentityResponse", "MergeDeveloperIdentitiesInput", "MergeDeveloperIdentitiesResponse", "ConcurrentModificationException", "SetIdentityPoolRolesInput", "TagResourceInput", "TagResourceResponse", "UnlinkDeveloperIdentityInput", "UnlinkIdentityInput", "UntagResourceInput", "UntagResourceResponse", "__awaiter", "buildHttpRpcRequest", "parseBody", "__assign", "deserializeMetadata", "loadRestJsonErrorCode", "deserializeAws_json1_1InvalidParameterExceptionResponse", "deserializeAws_json1_1LimitExceededExceptionResponse", "collectBody", "deserializeAws_json1_1ResourceNotFoundExceptionResponse", "deserializeAws_json1_1InvalidParameterException", "deserializeAws_json1_1LimitExceededException", "deserializeAws_json1_1ResourceNotFoundException", "__read", "collectBodyString", "__extends", "CreateIdentityPoolCommand", "logger", "__extends", "DeleteIdentitiesCommand", "logger", "__extends", "DeleteIdentityPoolCommand", "logger", "__extends", "DescribeIdentityCommand", "logger", "__extends", "DescribeIdentityPoolCommand", "logger", "__extends", "GetCredentialsForIdentityCommand", "logger", "__extends", "GetIdCommand", "logger", "__extends", "GetIdentityPoolRolesCommand", "logger", "__extends", "GetOpenIdTokenCommand", "logger", "__extends", "GetOpenIdTokenForDeveloperIdentityCommand", "logger", "__extends", "ListIdentitiesCommand", "logger", "__extends", "ListIdentityPoolsCommand", "logger", "__extends", "ListTagsForResourceCommand", "logger", "__extends", "LookupDeveloperIdentityCommand", "logger", "__extends", "MergeDeveloperIdentitiesCommand", "logger", "__extends", "SetIdentityPoolRolesCommand", "logger", "__extends", "TagResourceCommand", "logger", "__extends", "UnlinkDeveloperIdentityCommand", "logger", "__extends", "UnlinkIdentityCommand", "logger", "__extends", "UntagResourceCommand", "logger", "__extends", "UpdateIdentityPoolCommand", "logger", "__extends", "CognitoIdentity", "__extends", "ProviderError", "logins", "__read", "__awaiter", "IndexedDbStorage", "InMemoryStorage", "__awaiter", "_a", "_c", "_b", "__assign", "logger", "CredentialsClass", "GoogleOAuth", "FacebookOAuth", "__assign", "MAX_DELAY_MS", "__awaiter", "_a", "cognitoIdentityParams", "credentialsProvider", "_this", "credentials", "ServiceWorkerClass", "subscription", "cookie", "__assign", "Cookies", "UniversalStorage"]
}
